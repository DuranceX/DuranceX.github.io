<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>第一章:计算机系统概论</title>
    <link href="/2020/02/24/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    <url>/2020/02/24/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="冯·诺依曼结构"><a href="#冯·诺依曼结构" class="headerlink" title="冯·诺依曼结构"></a>冯·诺依曼结构</h1><h2 id="一、-工作原理"><a href="#一、-工作原理" class="headerlink" title="一、 工作原理"></a>一、 工作原理</h2><ul><li>存储结构</li><li>控制结构</li></ul><h2 id="二、计算机组成"><a href="#二、计算机组成" class="headerlink" title="二、计算机组成"></a>二、计算机组成</h2><ol><li><p>硬件系统</p><ol><li><p>主机:CPU（运算器+控制器）、内存</p><ul><li><p>运算器：</p><ul><li>算术运算：加减乘除等</li><li>逻辑运算：与或非等</li><li>基本结构：算术逻辑运算单元（ALU）、计算用累加器、保存结果用寄存器</li></ul></li><li><p>控制器：</p><ul><li>基本功能：产生控制信号（电平信号、脉冲信号）</li><li>产生控制信号的依据：指令、状态、时序</li><li>产生方式：微程序、硬布线<br><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%8E%A7%E5%88%B6%E5%99%A8.png" srcset="/img/loading.gif" alt=""></li></ul></li><li><p>存储器：</p><ul><li><p>基本结构：地址总线、存储体、数据总线</p></li><li><p>功能：存储原程序、原数据和运算中间结构</p></li><li><p>工作模式：读/写</p></li><li><p>工作原理：按地址访问、读/写数据<br><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%AD%98%E5%82%A8%E5%99%A8.png" srcset="/img/loading.gif" alt=""></p><table><thead><tr><th align="center">容量</th><th align="center">地址线数量</th></tr></thead><tbody><tr><td align="center">1k</td><td align="center">10</td></tr><tr><td align="center">1M</td><td align="center">20</td></tr><tr><td align="center">1G</td><td align="center">30</td></tr></tbody></table><blockquote><p>例题：访问2Gb容量的空间，需要的地址线数量为？<br>因为2¹=2，所以数量为30+1=31根</p></blockquote></li></ul></li></ul><p>&emsp;&emsp;CPU执行一条指令通常存在两个过程，分别是取指阶段和执行阶段，在取指阶段访问存储器读取指令，执行阶段访问存储器读取数据，所以虽然指令和数据都是二进制表示，但CPU能够加以区分。</p></li><li><p>外设：输入设备、输出设备、外存储器</p></li><li><p>总线：地址线、控制线、数据线</p></li></ol></li><li><p>软件系统</p><ul><li>表现形式：程序和数据</li><li>核心：算法</li></ul></li><li><p>软/硬件关系</p><ol><li>相互依存</li><li>逻辑等效性：某些功能可以由硬件实现，也可以由软件实现</li><li>协同发展</li></ol></li></ol><h2 id="三、计算机层次结构"><a href="#三、计算机层次结构" class="headerlink" title="三、计算机层次结构"></a>三、计算机层次结构</h2><p>计算机层次结构从上到下依次为：</p><table><thead><tr><th align="center">应用程序</th></tr></thead><tbody><tr><td align="center">高级语言</td></tr><tr><td align="center">汇编语言</td></tr><tr><td align="center">操作系统</td></tr><tr><td align="center">指令集架构层</td></tr><tr><td align="center">微代码层</td></tr><tr><td align="center">硬件逻辑层</td></tr></tbody></table><p>&emsp;&emsp;在计算机的层次结构中，上下层是可以分割的，仅有下层而没有上层是可行的。上层是下层的功能实现，上层在下层的基础上实现更丰富的功能。</p><h1 id="计算机系统性能评价"><a href="#计算机系统性能评价" class="headerlink" title="计算机系统性能评价"></a>计算机系统性能评价</h1><h2 id="一、非时间指标"><a href="#一、非时间指标" class="headerlink" title="一、非时间指标"></a>一、非时间指标</h2><ol><li>机器字长：指机器一次能处理的二进制位数</li><li>总线宽度：数据总线一次能并行传送的最大信息位数</li><li>主存容量：指一台计算机主存所包含的存储单元总数</li><li>存储带宽：指单位时间内与主存交换的二进制信息量</li></ol><h2 id="二、时间指标"><a href="#二、时间指标" class="headerlink" title="二、时间指标"></a>二、时间指标</h2><ol><li><p>主频f / 时间周期 T ，外频，倍频</p><ul><li>主频f:指CPU内核工作的时钟频率，即CPU内数字脉冲信号振荡的速率</li><li>时钟周期T:计算机中最基本最小的时间单位，是CPU中两个功能部件之间传递信息所需要的最短时间[^1]</li><li>外频：指CPU与主板之间同步的时钟频率</li><li>倍频：CPU主频与外频之间的倍数</li><li>主频=外频 * 倍频<blockquote><p>例：奔腾4 2.4GCPU<br>主频2400M = 133M（外频）x  18（倍频）</p></blockquote></li></ul></li><li><p>CPI(Clock cycle Per Instruction)</p><ul><li><p>指执行一条指令平均需要的时钟周期数</p></li><li><p>计算方法</p><ul><li>CPI=程序中所有指令的时钟周期之和/程序中指令总数<br>   =∑(程序中各类指令的CPI x 程序中该指令的比例)</li></ul><blockquote><p>例：</p><table><thead><tr><th align="center">指令类型</th><th align="center">CPI</th><th align="center">指令比例</th></tr></thead><tbody><tr><td align="center">算术和逻辑</td><td align="center">1</td><td align="center">60%</td></tr><tr><td align="center">Load/Store</td><td align="center">2</td><td align="center">18%</td></tr><tr><td align="center">转移</td><td align="center">4</td><td align="center">12%</td></tr><tr><td align="center">Cache缺失访存​​​​</td><td align="center">8</td><td align="center">10%</td></tr></tbody></table></blockquote><blockquote><p>CPI=1<em>60%+2</em>18%+4<em>12%+8</em>10%=2.24​​</p></blockquote></li></ul></li><li><p>MIPS(Million Instructions Per Second)</p><ul><li><p>每秒钟CPU能执行的指令条数（单位：百万条/秒）</p></li><li><p>计算方法</p><ul><li>主频/(CPI*10<sup>6</sup>)(全性能公式)</li></ul><blockquote><p>例:<br>某计算机主频为1GHz，总指令数为2*10^5，比例如下</p><table><thead><tr><th align="center">指令类型</th><th align="center">CPI</th><th align="center">指令比例</th></tr></thead><tbody><tr><td align="center">算术和逻辑</td><td align="center">1</td><td align="center">60%</td></tr><tr><td align="center">Load/Store</td><td align="center">2</td><td align="center">18%</td></tr><tr><td align="center">转移</td><td align="center">4</td><td align="center">12%</td></tr><tr><td align="center">Cache缺失访存​​​​</td><td align="center">8</td><td align="center">10%</td></tr></tbody></table></blockquote><blockquote><p>MIPS=f/(CPI*10<sup>6</sup>)=​​446.4</p></blockquote></li></ul></li><li><p>CPU时间</p><ul><li><p>执行一段程序所需的时间：CPU时间+I/O时间+存储访问时间+各类排队时延等</p></li><li><p>计算方法：</p><ul><li>程序中所有指令的时钟周期数之和*T</li><li>程序中所有指令的时钟周期数之和/f</li><li>总指令数*CPI*T</li><li>指令数量/(MIPS*10<sup>6</sup>)</li></ul><blockquote><p>例:<br>某计算机主频为1GHz，总指令数为2*10^5，比例如下</p><table><thead><tr><th align="center">指令类型</th><th align="center">CPI</th><th align="center">指令比例</th></tr></thead><tbody><tr><td align="center">算术和逻辑</td><td align="center">1</td><td align="center">60%</td></tr><tr><td align="center">Load/Store</td><td align="center">2</td><td align="center">18%</td></tr><tr><td align="center">转移</td><td align="center">4</td><td align="center">12%</td></tr><tr><td align="center">Cache缺失访存​​​​</td><td align="center">8</td><td align="center">10%</td></tr></tbody></table></blockquote><blockquote><p>一：基于CPI<br> CPU时间=2*10<sup>5</sup>*CPI/f=（2*10<sup>5</sup>*2.24/10<sup>9</sup>)=4.48*10<sup>-4</sup>(秒)<br> 二：基于MIPS<br> CPU时间​​​=2*10<sup>5</sup>/(MIPS*10<sup>6</sup>)=4.48*10<sup>-4</sup>(秒)​​​​    </p></blockquote></li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机组成原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机组成原理</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fluid美化</title>
    <link href="/2020/02/24/fluid%E7%BE%8E%E5%8C%96/"/>
    <url>/2020/02/24/fluid%E7%BE%8E%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>各类参数的修改位置及作用、网页音乐播放器、评论模块、一言的调用等…..</p><a id="more"></a><h1 id="fluid个性化及小插件的使用"><a href="#fluid个性化及小插件的使用" class="headerlink" title="fluid个性化及小插件的使用"></a>fluid个性化及小插件的使用</h1><h2 id="网页标题浏览器恶搞"><a href="#网页标题浏览器恶搞" class="headerlink" title="网页标题浏览器恶搞"></a>网页标题浏览器恶搞</h2><p>在<code>\themes\fluid\source\js</code> 下创建一个新的js文件，例如<code>FunnyTitle.js</code>，输入如下内容：</p><pre><code class="lua{javascript,}">// 浏览器搞笑标题var OriginTitle = document.title;var titleTime;document.addEventListener(&#39;visibilitychange&#39;, function () {    if (document.hidden) {        $(&#39;[rel=&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;/img/avatar.png&quot;);        document.title = &#39;╭(°A°`)╮ 页面崩溃啦 ~&#39;;        clearTimeout(titleTime);    }    else {        $(&#39;[rel=&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;/img/favicon.png&quot;);        document.title = &#39;(ฅ&gt;ω&lt;*ฅ) 噫又好啦 ~&#39; + OriginTitle;        titleTime = setTimeout(function () {            document.title = OriginTitle;        }, 2000);    }});</code></pre><p>之后在<code>\themes\fluid\layout.ejs</code>中末尾输入</p><pre><code class="javascript">&lt;!--浏览器搞笑标题--&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/FunnyTitle.js&quot;&gt;&lt;/script&gt;</code></pre><h2 id="fluid鼠标点击效果更改"><a href="#fluid鼠标点击效果更改" class="headerlink" title="fluid鼠标点击效果更改"></a>fluid鼠标点击效果更改</h2><p>fluid主题的鼠标特效在<code>\themes\fluid\layout\_partial\plugins\mouse-click.ejs</code>中，找到如下图所示的代码<br><img src="/img/%E7%BE%8E%E5%8C%96/mouse-click.png" srcset="/img/loading.gif" alt="">将数组中的字符串进行更改即可进行自定义<br>然后在<strong>主题配置</strong>（即fluid的<code>_config.yml</code>）中将<code>mouse-clik</code>项的style改为values</p><h2 id="一言"><a href="#一言" class="headerlink" title="一言"></a>一言</h2><p><a href="https://hitokoto.cn/" target="_blank" rel="noopener">一言官网</a></p><p>根据官网提供的示例，在<code>\themes\fluid\layout\layout.ejs</code>中添加如下代码</p><pre><code class="html">&lt;!-- 以下写法，选取一种即可 --&gt;&lt;!-- 现代写法，推荐 --&gt;&lt;!-- 兼容低版本浏览器 (包括 IE)，可移除 --&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js&quot;&gt;&lt;/script&gt;&lt;!--End--&gt;&lt;script&gt;  fetch(&#39;https://v1.hitokoto.cn&#39;)    .then(function (res){      return res.json();    })    .then(function (data) {      var hitokoto = document.getElementById(&#39;hitokoto&#39;);      hitokoto.innerText = data.hitokoto;     })    .catch(function (err) {      console.error(err);    })&lt;/script&gt;&lt;!-- 老式写法，兼容性最忧 --&gt;&lt;script&gt;  var xhr = new XMLHttpRequest();  xhr.open(&#39;get&#39;, &#39;https://v1.hitokoto.cn&#39;);  xhr.onreadystatechange = function () {    if (xhr.readyState === 4) {      var data = JSON.parse(xhr.responseText);      var hitokoto = document.getElementById(&#39;hitokoto&#39;);      hitokoto.innerText = data.hitokoto;    }  }  xhr.send();&lt;/script&gt;&lt;!-- 新 API 方法， 十分简洁 --&gt;&lt;script src=&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot; defer&gt;&lt;/script&gt;</code></pre><p>然后在任意想要加入一言的位置添加</p><pre><code class="html">&lt;p id=&quot;hitokoto&quot;&gt;:D 获取中...&lt;/p&gt;</code></pre><p>例如我在页面的最底部，即hexo❤Fluid下方加入一言，即在<code>\themes\fluid\layout\_partial\footer.ejs</code>中加入该行代码。在页面中显示的具体位置由代码所在位置决定。</p><p>一言官网举例了几个网址供读取信息</p><pre><code class="html">https://v1.hitokoto.cn/（从7种分类中随机抽取）https://v1.hitokoto.cn/?c=b （请求获得一个分类是漫画的句子）https://v1.hitokoto.cn/?c=f&amp;encode=text （请求获得一个来自网络的句子，并以纯文本格式输出</code></pre><p>在本部分第一个代码块中将对应的网址更改即可，同样可以通过“&amp;”的方式指定多个特定的类型</p><pre><code class="html">https://v1.hitokoto.cn/?c=c&amp;c=d （从游戏分类和小说分类中获取一个句子）</code></pre><p>参数列表如下，通过c=xx来使用</p><table border="0"><tr>    <th>参数</th>    <th>  </th>    <th>描述</th></tr><tr >    <td rowspan="7">C</td>    <td>a</td>    <td>Anime - 动画</td></tr><tr>    <td>b</td>    <td>Comic – 漫画</td></tr><tr>    <td>c</td>    <td>Game – 游戏</td></tr><tr>    <td>d</td>    <td>Novel – 小说</td></tr><tr>    <td>e</td>    <td>Myself – 原创</td></tr><tr>    <td>f</td>    <td>Internet – 来自网络</td></tr><tr>    <td>g</td>    <td>Other – 其他</td></tr></table><h2 id="音乐播放插件"><a href="#音乐播放插件" class="headerlink" title="音乐播放插件"></a>音乐播放插件</h2><p>这里使用的是插件是<a href="https://aplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener">APlayer</a><br>🎶Wow, such a beautiful HTML5 music player<br>原本用的是网易云的的外链播放器，然鹅！网易云几乎所有的歌都因版权问题无法生成外链播放器，即使通过一些方法生成了也无法播放，因此采用了APlayer。</p><p>首先安装Aplayer</p><pre><code class="git">cnpm install aplayer --save</code></pre><p>我因为网络的问题替换了成了淘宝的镜像，若没有设置过直接使用npm即可。</p><p>在想要加入网页播放器的地方输入以下代码</p><pre><code class="html">&lt;html&gt;  &lt;head&gt;      &lt;link href=&quot;https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.css&quot; rel=&quot;stylesheet&quot;&gt;      &lt;script src=&quot;https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.js&quot;&gt;&lt;/script&gt;      &lt;style&gt;          .demo{width:360px;margin:0px auto 20px auto}          .demo p{padding:10px 0}      &lt;/style&gt;  &lt;/head&gt;  &lt;body&gt;    &lt;div class=&quot;text-center&quot;&gt;      &lt;div class=&quot;demo&quot;&gt;          &lt;div id=&quot;player1&quot;&gt;              &lt;pre class=&quot;aplayer-lrc-content&quot;&gt;                [00:00.00]鹿先森乐队 - 华年                [00:00.30]                [00:00.91]作曲：倍倍                [00:01.66]作词：倍倍                [00:01.26]编曲：鹿先森乐队                [00:01.52]木吉他：杨博士                [00:01.77]电吉他：董二胖                [00:02.28]贝斯：李斯                [00:02.17]键盘：冰冰                [00:02.38]鼓：PP                [00:02.48]和音：鱼椒盐、杨博士                [00:02.83]弦乐：国际首席爱乐乐团                [00:03.24]录音棚：55T.E.C、Big.J Studio                [00:03.49]混音助理：茆博文                [00:03.79]制作人：李卓                [00:04.10]弦乐编写：李卓                [00:04.25]混音：李卓                [00:04.40]母带处理：周天澈                [00:05.00]                [00:05.80]在夏天结束的瞬间                [00:07.42]怀念你年轻身影                [00:11.42]你每天都在说的那些话                [00:13.90]如今讲给谁人听                [00:16.94]当过往散了爱慕                [00:19.16]与光阴相向而行                [00:22.71]你眼神烙印岁月最后的深情                [00:25.88]                [00:28.42]也许一次离别                [00:29.69]就能抹去再多的重逢                [00:33.91]那年一起种下的树啊                [00:36.55]如今飘荡着一样的风                [00:39.59]当誓言终将欺了日月                [00:42.32]这爱恋不澈不浓                [00:45.25]你裙摆绽放走向我脚步轻松                [00:48.88]                [00:50.61]可是命运啊                [00:51.52]渴望啊和热烈啊                [00:55.92]非将这生长赋予                [00:57.39]悲欢交织的感动                [01:01.93]夏日轻柔的晚风                [01:04.81]壮阔波澜的相拥                [01:07.16]已杂草丛生                [01:10.56]都不及你第一次                [01:12.13]望向我的面容                [01:14.55]                [01:19.23]也许一次离别                [01:20.50]就能抹去再多的重逢                [01:24.61]那年一起种下的树啊                [01:27.44]如今飘荡着一样的风                [01:30.37]当誓言终将欺了日月                [01:33.16]这爱恋不澈不浓                [01:36.21]你裙摆绽放走向我脚步轻松                [01:39.55]                [01:40.77]可是命运啊                [01:42.44]渴望啊和热烈啊                [01:46.69]非将这生长赋予                [01:48.26]悲欢交织的感动                [01:52.76]夏日轻柔的晚风                [01:55.56]壮阔波澜的相拥                [01:57.99]已杂草丛生                [02:01.64]都不及你第一次                [02:03.70]望向我的面容                [02:05.10]                [02:06.29]可是青春啊                [02:07.82]鲜血啊和真切啊                [02:12.18]请铭记呀                [02:13.22]即使从未有过年轻                [02:18.18]阳光穿过你的脖颈                [02:20.96]酒杯碰碎的声音                [02:23.27]时光忽暗忽明                [02:27.68]都忘却吧                [02:28.80]就像从未有过年轻                [02:30.55]                [03:02.65]可是命运啊                [03:04.37]渴望啊和热烈啊                [03:08.47]非将这生长赋予                [03:10.94]悲欢交织的感动                [03:14.65]夏日轻柔的晚风                [03:17.47]壮阔波澜的相拥                [03:19.69]已杂草丛生                [03:23.54]都不及你第一次                [03:24.91]望向我的面容                [03:26.88]                [03:28.94]可是青春啊                [03:29.71]鲜血啊和真切啊                [03:35.28]请铭记呀                [03:36.50]即使从未有过年轻                [03:41.50]阳光穿过你的脖颈                [03:44.23]酒杯碰碎的声音                [03:46.52]时光忽暗忽明                [03:50.37]都忘却吧                [03:51.33]就像从未有过年轻                [03:55.73]都忘却吧                [03:56.94]就像从未有过年轻                [04:01.40]都忘却吧                [04:02.56]就像从未有过年轻                [04:06.91]书终烟灭夜深水静              &lt;/pre&gt;          &lt;/div&gt;      &lt;/div&gt;    &lt;script&gt;        var ap = new APlayer                ({                    element: document.getElementById(&#39;player1&#39;),                    narrow: false,                    autoplay: false,                    showlrc: true,                    music: {                            title: &#39;华年&#39;,                            author: &#39;鹿先森乐队&#39;,                            url: &#39;http://music.163.com/song/media/outer/url?id=542667160.mp3&#39;,                            pic: &#39;http://p2.music.126.net/r94mVfx8ERhRr7Zzemhd_w==/109951163405599390.jpg&#39;                            }                });        ap.init();    &lt;/script&gt;</code></pre><p>例如我将播放器加入到“关于”界面，就在<code>\themes\fluid\layout\about.ejs</code>中加入这段代码，在这里我将代码嵌入跟原有代码进入了稍微的整合，使结构清晰。<br>在上述代码的<code>script</code>块中，<code>autoplay</code>是自动播放，改为true则会在打开该页面时自动播放。<br>在网页版网易云音乐搜索歌曲，打开后将网址的最后一串数字替换到<code>url</code>中对应的数字部分即可更换歌曲<img src="/img/%E7%BE%8E%E5%8C%96/music.png" srcset="/img/loading.gif" alt=""><br>歌曲封面由<code>pic</code>字段决定，同样在网页版网易云音乐界面，在F12开发者模式中选中歌曲封面区域即可得到封面链接，替换至<code>pic</code>区域即可。歌词来自<a href="https://www.90lrc.cn/" target="_blank" rel="noopener">https://www.90lrc.cn/</a></p><p>参考网址：<a href="https://blog.csdn.net/jclian91/article/details/80876198" target="_blank" rel="noopener">https://blog.csdn.net/jclian91/article/details/80876198</a></p>]]></content>
    
    
    <categories>
      
      <category>博客美化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>美化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Failed to connect to github.com port 443: Timed out</title>
    <link href="/2020/02/22/hexo-Failed-to-connect-to-github-com-port-443-Timed-out/"/>
    <url>/2020/02/22/hexo-Failed-to-connect-to-github-com-port-443-Timed-out/</url>
    
    <content type="html"><![CDATA[<p>Failed to connect to github.com port 443: Timed out </p><a id="more"></a><h1 id="Failed-to-connect-to-github-com-port-443-Timed-out"><a href="#Failed-to-connect-to-github-com-port-443-Timed-out" class="headerlink" title="Failed to connect to github. com port 443: Timed out"></a>Failed to connect to github. com port 443: Timed out</h1><p> 在使用hexo g -d部署到github上时出现了“Failed to connect to github. com port 443: Timed out”的错误提示。<br><img src="/img/problems/Time_out.png" srcset="/img/loading.gif" alt=""></p><p><strong>解决办法</strong></p><p>输入</p><pre><code class="git">git config --global http.proxy http://127.0.0.1:1080git config --global https.proxy http://127.0.0.1:1080</code></pre>]]></content>
    
    
    <categories>
      
      <category>problems</category>
      
    </categories>
    
    
    <tags>
      
      <tag>problems</tag>
      
      <tag>hexo</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>进度报告</title>
    <link href="/2020/02/22/%E8%BF%9B%E5%BA%A6%E6%8A%A5%E5%91%8A/"/>
    <url>/2020/02/22/%E8%BF%9B%E5%BA%A6%E6%8A%A5%E5%91%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="进度报告"><a href="#进度报告" class="headerlink" title="进度报告"></a>进度报告</h1><h3 id="2020-02-22"><a href="#2020-02-22" class="headerlink" title="2020-02-22"></a>2020-02-22</h3><p><strong>单元3+后一份试卷选择题</strong></p><h3 id="2020-02-23"><a href="#2020-02-23" class="headerlink" title="2020-02-23"></a>2020-02-23</h3><p><strong>一份试卷+昨天剩余部分</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/02/21/hello-world/"/>
    <url>/2020/02/21/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><p> _[HTML]: Hyper Text Markup Language</p><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
