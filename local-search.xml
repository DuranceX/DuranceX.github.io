<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>图片下方出现空行的成因和解决方案</title>
    <link href="/2024/08/10/%E5%9B%BE%E7%89%87%E4%B8%8B%E6%96%B9%E5%87%BA%E7%8E%B0%E7%A9%BA%E8%A1%8C%E7%9A%84%E6%88%90%E5%9B%A0%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2024/08/10/%E5%9B%BE%E7%89%87%E4%B8%8B%E6%96%B9%E5%87%BA%E7%8E%B0%E7%A9%BA%E8%A1%8C%E7%9A%84%E6%88%90%E5%9B%A0%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<p>在<a href="https://starnight.top/2024/08/10/Vue%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%94%BB%E5%BB%8A%E9%A1%B5%E9%9D%A2/">Vue实现一个画廊页面</a>中出现了一个问题，即<code>img</code>标签导入的图片在排版时，在<code>margin</code>、<code>padding</code>、<code>border</code>等属性都不存在的情况下，下方仍然出现了空行。为了探寻这一情况的原因和解决方案做了一系列的研究。问题示例如下所示，在图片的下方存在着一个空行，使得外层<code>div</code>的边框没能完整地贴合图片。<br><img src="https://images.starnight.top/img/Pasted%20image%2020240812170958.png" alt=""></p><h3 id="成因">成因</h3><p>首先我们要理解的是文本的渲染逻辑。<br>文本在渲染过程中，会将文本放置在<code>baseline</code>上，而下方仍然会留出一部分空间，这部分空间用来显示如<code>y</code>、<code>g</code>、<code>f</code>等元素的下沿部分。<br><img src="https://images.starnight.top/img/Pasted%20image%2020240805150540.png" alt=""><br>然后是<code>img</code>标签，<code>img</code>标签默认是一个内联元素标签，而作为内联元素，它会像文本一样被渲染，因此它也像文本一样，在下方存在一个额外的空间，这也就是图片下方会出现空行的原因。那么我们要做的就是消除掉这个空行。</p><h3 id="解决方案">解决方案</h3><h4 id="1-使用display-block">1. 使用<code>display:block</code></h4><p>首先我们想到的就是，“这个空行是因为内联元素在渲染时会被当作文本进行渲染，所以会添加文本渲染中的额外空间”，那么我们只要让这个元素不以内联元素显示，而是以块级元素显示即可消除掉这一额外空间。<br><img src="https://images.starnight.top/img/Pasted%20image%2020240812170710.png" alt=""></p><h4 id="2-使用vertical-align-bottom">2. 使用<code>vertical-align:bottom</code></h4><p>之后我们可以想到另一种方法，对于内联元素，其默认的显示位置是放置在<code>baseline</code>上，并且因此<code>img</code>本身并没有<code>baseline</code>，所以当它以内联元素显示，并设置<code>vertical-align:baseline(默认值)</code>时会将图片的底部放置在文本的baseline上，因此下方会有空出的部分，那么如果我们将该元素直接放置在最底部，不就可以占用底部的空白部分，从而消除空行了吗？</p><blockquote><p>实际上只要设置了<code>vertical-align</code>等于<code>top</code>、<code>bottom</code>、<code>middle</code>都可以消除掉这一空行</p></blockquote><p><img src="https://images.starnight.top/img/Pasted%20image%2020240812170751.png" alt=""></p><h4 id="3-使用line-height-0">3. 使用<code>line-height:0</code></h4><p>最后，我们也可以使用<code>line-height:0</code>来消除这一空行，<span style="color:red;font-weight:bold">但不推荐这么使用</span>，行高顾名思义就是一行文字的高度， 而既然内联元素以文本的形式进行渲染，则也可以用<code>line-height</code>来进行控制。通过设置<code>line-height:0</code>，可以消除图片下方的空行。</p><p><strong>原理：</strong> <code>line-height</code>是一个统一的高度，包含内容区和可能的上、下间距。其中，内容区是字体本身的高度，由字体的 ascent（上升）和 descent（下降）部分决定。如果 <code>line-height</code> 大于内容区的高度，剩余的空间会平均分布在内容区的上方和下方，作为上下间距。上下间距的计算如下：如果<code>font-size</code>是20px，<code>line-height</code>是1.5，那么<code>line-height</code>就是1.5*20=30px，则上下间距为<code>(1.5*20 - 20)/2 = 5px</code>，也就是上下各有5px的间距，而如果<code>line-height</code>小于内容区的大小，这个间距就成了负值，只要这个负值正好等于文本的下降部分，则可以消除掉这一部分的空间，也就是<code>line-height</code>不是一定要为0，只要小于一定值，就可以消除图片下方的空行。<br><img src="https://images.starnight.top/img/Pasted%20image%2020240805154907.png" alt=""></p><p><img src="https://images.starnight.top/img/Pasted%20image%2020240812170846.png" alt=""></p><p>这时候观察上面的图片，我们会发现图片下方的空行消失了，外层<code>div</code>的边框跟图片的边缘紧贴，但是我们也可以发现，文本被遮挡住了，只显示了很少的一部分，这就是<code>line-height:0</code> 的弊端，它会将文本的高度设置为<code>0</code>，也就是文本不占据任何高度，相当于移除出了文档流，而如果有多行文本的话，这些文本会全部堆叠在一起，如下所示</p><html><body><div style='height:10px;width:300px;line-height:0'>Lorem Ipsum，也称乱数假文或者哑元文本， 是印刷及排版领域所常用的虚拟文字。</div></body></html><hr><h3 id="Reference">Reference</h3><p><a href="https://stackoverflow.com/questions/5804256/image-inside-div-has-extra-space-below-the-image">Image inside div has extra space below the image</a><br><a href="https://segmentfault.com/a/1190000014936270">深入理解css之line-height</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/line-height">MDN-line-height</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>Error</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue实现一个画廊页面</title>
    <link href="/2024/08/10/Vue%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%94%BB%E5%BB%8A%E9%A1%B5%E9%9D%A2/"/>
    <url>/2024/08/10/Vue%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%94%BB%E5%BB%8A%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<p>使用Vue实现一个简单的瀑布流画廊页面demo，图片简单地从<code>assets</code>目录下读取并在页面进行展示，在这过程中遇到了一些问题进行一下记录。</p><h3 id="Vite读取assets目录下的文件">Vite读取assets目录下的文件</h3><p>在<code>webpack</code>中可以通过<code>require.context</code>方法来读取目录下的所有文件</p><p>其具体用法为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">require</span>.<span class="hljs-title function_">context</span>(directory,useSubdirectories,regExp)<br></code></pre></td></tr></table></figure><p><code>directory</code>: 要搜索的目录</p><p><code>useSubdirectories</code>：是否要搜索子目录</p><p><code>regExp</code>：匹配文件的正则表达式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> files = <span class="hljs-built_in">require</span>.<span class="hljs-title function_">context</span>(<span class="hljs-string">&#x27;public/icon&#x27;</span>,<span class="hljs-literal">false</span>,<span class="hljs-regexp">/\.svg$/</span>);<br><span class="hljs-keyword">const</span> icons = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(files).<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">path</span>)=&gt;</span>&#123;<br>  <span class="hljs-keyword">let</span> reg = <span class="hljs-regexp">/\/([^/]*)\.(jpg|png)/</span>;<br>  <span class="hljs-keyword">let</span> name = path.<span class="hljs-title function_">match</span>(reg)[<span class="hljs-number">1</span>];<br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">key</span>: path,<br>    <span class="hljs-attr">name</span>: name.<br>    <span class="hljs-attr">value</span>: files[path]<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><blockquote><p>正则表达式解释</p><p><code>\/</code>表示匹配一个<code>/</code>符号，用<code>\</code>做转义</p><p><code>([^/]*)</code>表示一个子表达式，匹配除了<code>/</code>符号外的任意字符{0,}次</p><p><code>\.</code>表示转义，匹配一个<code>.</code>符号</p><p><code>(jpg|png)</code>表示匹配jpg后缀或png后缀的图片</p><p>最后通过<code>[1]</code>取得文件名，<code>[0]</code>是匹配到的整个<code>/.....jpg</code>文件名，<code>[2]</code>是匹配到的后缀名</p></blockquote><p>但<code>vite</code>不支持使用<code>require.context</code>方法，当在<code>Vite</code>中使用<code>require</code>时会报错，提示<code>Uncaught (in promise) ReferenceError: require is not defined</code>，这是因为<code>require</code>是Node.js的原生方法，以CommonJS的方式加载文件，Webpack默认支持，而<code>Vite</code>不支持，在<code>Vite</code>中使用特殊的<code>import.meta.glob</code>函数从文件系统中导入模块。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> files = <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-title function_">glob</span>(<span class="hljs-string">&#x27;/src/assets/images/*.jpg&#x27;</span>);<br><span class="hljs-keyword">const</span> images = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(files).<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">path: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> reg = <span class="hljs-regexp">/\/([^/]*)\.(jpg|png)/</span>;<br>    <span class="hljs-keyword">let</span> name = path.<span class="hljs-title function_">match</span>(reg)[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">key</span>: path,<br>        <span class="hljs-attr">name</span>: name,<br>        <span class="hljs-attr">value</span>: files[path],<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p>函数中可以通过传入数组来匹配多种模式</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> modules = <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-title function_">glob</span>([<span class="hljs-string">&#x27;./dir/*.js&#x27;</span>,<span class="hljs-string">&#x27;./another/*.js&#x27;</span>])<br></code></pre></td></tr></table></figure><p>也可用通过<code>!</code>来排除某些目录某些文件</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> modules = <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-title function_">glob</span>([<span class="hljs-string">&#x27;./dir/*.js&#x27;</span>,<span class="hljs-string">&#x27;!**/bar.js&#x27;</span>])<br></code></pre></td></tr></table></figure><p><a href="https://mp.weixin.qq.com/s/HM8lrZezW5WonPlk74zitQ">拓展链接-为什么要使用require来动态引入图片</a></p><p>经过这一步，我们读取到了<code>assets/images</code>目录下的所有图片文件，并保存到了变量<code>images</code>中<br><img src="https://images.starnight.top/img/image-20240801204414783.png" alt=""></p><h3 id="显示图片">显示图片</h3><p>在读取了图片之后，我们便要将图片显示在页面中，通过<code>v-for</code>指令来遍历<code>images</code>数组，并将image的<code>key</code>值赋值给<code>img</code>标签的<code>src</code>属性来读取图片。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;container&#x27;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(image, index) in images&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;image.key&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这时候会发现图片按照原尺寸显示在画面中，铺满了整个页面，为了实现瀑布流的显示效果，我们需要再添加一些样式，首先给外层的<code>div</code>添加一个<code>container</code>类，用于控制列数。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">900px</span>;<br>    <span class="hljs-attribute">column-count</span>: <span class="hljs-number">3</span>;<br>    <span class="hljs-attribute">column-gap</span>: <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>设定容器的宽度，并通过<code>column-count</code>属性设置内容显示为3列，且设置间隙设为0，这时候图片就会以三列的形式进行呈现。<br><img src="https://images.starnight.top/img/Pasted%20image%2020240805145736.png" alt=""></p><p>这时候图片已经分为了三列，但是还是按照原有的尺寸，并不能完整的显示，因此还需要再添加一些样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">img</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">object-fit</span>: contain;<br>&#125;<br></code></pre></td></tr></table></figure><p>此时图片的宽度会填满整个容器（此时的容器宽度是container的1/3，因为container设置了分为三列），并且由于设置了<code>object-fit:contain</code>，图片会保持原有尺寸，这样就实现了简单的瀑布流的显示效果。</p><p><img src="https://images.starnight.top/img/Pasted%20image%2020240805145821.png" alt=""></p><p>这时候我们会发现，在整个页面的纵向中，图片与图片之间存在着白色的间隙，而我们希望消除这一间隙，让每一张图片之间都严丝合缝。这时候有三种可行的解决方案。</p><ol><li>给<code>container</code>添加属性<code>line-height:0</code></li><li>给<code>img</code>添加属性<code>display:block</code></li><li>给<code>img</code>添加属性<code>vertical-align: bottom</code></li></ol><p>出现这一情况的原因是：<strong>HTML中的<code>img</code>标签是内联元素，这意味着它们会被像文本一样对待，而在HTML中文本行有额外的空间，用于放置类似<code>g</code>,<code>j</code>等字母的下行部分，所以会出现空白间隙。</strong> 而通过给<code>container</code>设置<code>line-height:0</code>以及给<code>img</code>添加属性<code>display:block</code>都是在消除这些额外空间。具体内容查看<a href="https://starnight.top/2024/08/10/%E5%9B%BE%E7%89%87%E4%B8%8B%E6%96%B9%E5%87%BA%E7%8E%B0%E7%A9%BA%E8%A1%8C%E7%9A%84%E6%88%90%E5%9B%A0%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">图片下方出现空行的成因和解决方案</a></p><p>最后得到如图所示的显示效果：<br><img src="https://images.starnight.top/img/Pasted%20image%2020240805145854.png" alt=""></p><h3 id="显示遮罩-动画">显示遮罩+动画</h3><p>光有了图片的展示肯定还不够，参考一般的图片网站，都会有鼠标移上去时的遮罩效果，并显示一些详细的信息，接下来我们便来实现这一效果。</p><h4 id="遮罩设计">遮罩设计</h4><p>首先先设计一个简单的遮罩样式，首先遮罩应该要完全覆盖图片大小，并且通过一个深色半透明背景来暗化图片，在遮罩的中间显示一个“眼睛”图标，在遮罩的下方显示图片的名称，如下图所示。<br><img src="https://images.starnight.top/img/%E6%88%AA%E5%B1%8F2024-08-05%2016.15.20.png" alt=""></p><p><strong>定位和布局</strong><br>将背景设置<code>position:absolute</code>，并设置<code>left</code>和<code>top</code>为0，<code>width</code>和<code>height</code>为100%，使得遮罩能够铺满整个图片，此处因为在html中该<code>div</code>位于图片下方，所以没有设置<code>z-index</code></p><p><strong>图标</strong><br>从网上找到一个眼睛图样的svg图标，导入到项目后通过之前实现的[[通过Vite-plugin-svg-icons实现自定义的Icon组件 | Icon组件]]来使用，布局到页面的正中间。</p><p><strong>图片名称</strong><br>在之前获取的<code>images</code>数组中，通过正则表达式截取了每个图片文件的名称，在此处同样通过<code>position:absolute</code>定位到容器的下方，并设置文本溢出时显示省略号。</p><p><strong>实现代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mask&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">VIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;eye&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123; image.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.mask</span> &#123;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br><span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">flex-direction</span>: column;<br><span class="hljs-attribute">justify-content</span>: center;<br><span class="hljs-attribute">align-items</span>: center;<br><span class="hljs-attribute">position</span>: absolute;<br><span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.4</span>);<br><br>svg &#123;<br>stroke: none;<br><span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.9</span>);<br>&#125;<br><br><span class="hljs-selector-tag">div</span> &#123;<br><span class="hljs-attribute">position</span>: absolute;<br><span class="hljs-attribute">bottom</span>: <span class="hljs-number">30px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">90%</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">15px</span>;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">15px</span>;<br><span class="hljs-attribute">text-overflow</span>: ellipsis;<br><span class="hljs-attribute">white-space</span>: nowrap;<br><span class="hljs-attribute">overflow</span>: hidden;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#FFFFFFc2</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="触发显隐事件">触发显隐事件</h4><p>一开始对于遮罩的显隐通过一个布尔变量来控制，并监听鼠标事件，当鼠标进入该元素时，将布尔变量设置为true，鼠标离开时设置为false，但这时候发现当鼠标进入到一个元素后，所有的图片上都会显示遮罩，这是因为所有的图片遮罩都由一个变量进行控制，所以会同步显隐。因此需要对每个图片进行单独控制。采用<code>index</code>比对的方式来控制遮罩的显隐。</p><p>定义一个变量<code>hoverIndex</code>用于表示当前所<code>hover</code>的元素是哪个元素，同样监听鼠标进入和离开事件，当鼠标进入时将<code>hoverIndex</code>赋值为当前元素的<code>index</code>，离开时将<code>hoverIndex</code>设置为<code>-1</code>，在遮罩的显示逻辑中替换成<code>hoverIndex===index</code>，当元素下标等于激活元素下标时显示遮罩。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(image, index) in images&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span> @<span class="hljs-attr">mouseenter</span>=<span class="hljs-string">&quot;hoverIndex = index&quot;</span> @<span class="hljs-attr">mouseleave</span>=<span class="hljs-string">&quot;hoverIndex = -1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;image.key&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;hoverIndex === index&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mask&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">VIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;eye&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123; image.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>此时实现了当鼠标移动到一个图片时就可以显示对应的遮罩的效果，但是该遮罩的效果是直接出现，也是直接消失，显得非常的生硬，便希望通过添加一些过渡效果，使得遮罩的出现和消失更加自然，而由于使用<code>v-show</code>来进行遮罩的显隐，没有办法直接使用<code>transition</code>来给<code>opacity</code>添加过渡效果。</p><h4 id="过渡动画">过渡动画</h4><p>因此采用Vue内带的<code>&lt;transition&gt;</code>标签来实现过渡动画，在元素外层包裹上<code>&lt;transition&gt;</code>标签即可，<code>&lt;transition&gt;</code>存在6个css类用于整个过渡过程。<br><img src="https://images.starnight.top/img/Pasted%20image%2020240805165627.png" alt=""><br><code>v-enter-from</code>和<code>v-leave-to</code>，这两个类分别控制的是进入动画开始前和离开动画结束后的样式，相当于基础样式，一般相同。<br><code>v-enter-to</code>和<code>v-leave-from</code>，这两个类分别控制的是进入动画结束后和离开动画开始前的样式，<br>相当于激活样式，一般相同。<br><code>v-enter-active</code>和<code>v-leave-active</code>，这两个类分别控制在进入和离开过程中的动画效果，对上述四个类中的样式进行过渡。<br>在没有给<code>&lt;transition&gt;</code>命名时，默认都使用<code>v-</code>的类名，如果给<code>&lt;transition&gt;</code>添加了<code>name</code>属性，例如<code>fade</code>，则类名都变成<code>fade-</code></p><p>在本次的画廊案例中，我们需要添加的过渡效果有</p><ul><li>进入时遮罩由隐到显，图标从略下方向上浮出</li><li>离开时遮罩由显到隐，图标向下方隐去</li></ul><p>实现代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(image, index) in images&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span> @<span class="hljs-attr">mouseenter</span>=<span class="hljs-string">&quot;hoverIndex = index&quot;</span> @<span class="hljs-attr">mouseleave</span>=<span class="hljs-string">&quot;hoverIndex = -1&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;image.key&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;fade&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;hoverIndex === index&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mask&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">VIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;eye&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123; image.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.fade-enter-from</span>,<br><span class="hljs-selector-class">.fade-leave-to</span> &#123;<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br><br>svg &#123;<br><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">30px</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-selector-class">.fade-enter-to</span>,<br><span class="hljs-selector-class">.fade-leave-from</span> &#123;<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>  <br>svg &#123;<br><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0px</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-selector-class">.fade-enter-active</span>,<br><span class="hljs-selector-class">.fade-leave-active</span> &#123;<br><span class="hljs-attribute">transition</span>: opacity .<span class="hljs-number">5s</span> ease;<br>  <br>svg &#123;<br><span class="hljs-attribute">transition</span>: transform .<span class="hljs-number">5s</span> ease;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://images.starnight.top/img/Kapture%202024-08-05%20at%2017.16.48.gif" alt=""></p><h3 id="全屏显示">全屏显示</h3><p>到了这时候显然还缺少了一个部分，就是全屏显示的部分，都已经显示眼睛图标了，如果不能点击打开新窗口，那这图标有什么用呢。</p><h4 id="定位和布局">定位和布局</h4><p>全屏显示的布局也同样非常简洁，全屏的深色半透明背景，中间显示图片，点击空余部分则关闭窗口回到原来的界面。<br>这一窗口的设计和遮罩的设计非常类似，只不过这一窗口的大小是整个屏幕。因为部分图片的原尺寸太大，会造成整个屏幕都显示不下的情况，且如此会导致没有空余空间可以点击来退出全屏窗口，因此对图片的尺寸进行限制，最多占用屏幕宽高的90%</p><h4 id="点击事件">点击事件</h4><p>首先新增两个变量</p><ul><li><code>isShowOverlay</code>：布尔变量，用于控制全屏窗口的显隐</li><li><code>showPic</code>：图片地址，用于控制全屏窗口显示的图片<br>当点击元素时，将<code>isShowOverlay</code>设置为true，显示窗口，将<code>showPic</code>设置为图片的地址，用于在全屏窗口中进行显示。给<code>overlay</code>元素添加点击事件，当鼠标点击时将<code>isShowOverlay</code>设为false，关闭窗口，同时将<code>showPic</code>设为空。这时候点击图片的时候也会触发父元素<code>overlay</code>的点击事件，使得全屏窗口关闭，因此需要对点击事件进行拦截，此时就用到了Vue的事件修饰符，通过给图片也添加点击事件，并添加事件修饰符<code>.stop</code>来阻止事件的冒泡传递，这样在子元素中触发的点击事件就不会再触发父元素的点击事件。</li></ul><h4 id="图片大小与点击事件冲突">图片大小与点击事件冲突</h4><p>在一开始，限制图片的大小时，将图片的<code>width</code>和<code>height</code>都设置为了90%，并且在点击事件处理中，将图片本身的点击事件进行了拦截，不做任何处理。这也导致了一个问题，即在距离图片较近的背景部分点击时，也不会关闭窗口。<br>在调试时发现是因为设置了<code>width</code>和<code>height</code>为90%，导致整个图片占据了整个画面宽高90%的大小，而不是图片本身的大小，也就是说即使图片是个长方形，它占据的面积仍然是一个正方形，从而使得整个正方形内的点击事件都失效。<br>因此需要对样式进行调整，将<code>width</code>和<code>height</code>都调整为<code>fit-content</code>，并将<code>max-width</code>和<code>max-height</code>设置为90%，由此实现了全屏窗口的展示。</p><h3 id="完整代码">完整代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(image, index) in images&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span> @<span class="hljs-attr">mouseenter</span>=<span class="hljs-string">&quot;hoverIndex = index&quot;</span> @<span class="hljs-attr">mouseleave</span>=<span class="hljs-string">&quot;hoverIndex = -1&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPic = image.key; isShowOverlay = true&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;image.key&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;fade&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;hoverIndex === index&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mask&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">VIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;eye&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123; image.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;fade&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;overlay&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;isShowOverlay&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;isShowOverlay = false; showPic = &#x27;&#x27;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;showPic&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;script setup lang=<span class="hljs-string">&quot;ts&quot;</span>&gt;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VIcon</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/VIcon.vue&#x27;</span><br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><br><span class="hljs-keyword">const</span> files = <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-title function_">glob</span>(<span class="hljs-string">&#x27;/src/assets/images/*.jpg&#x27;</span>);<br><span class="hljs-keyword">const</span> images = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(files).<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">path: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br><span class="hljs-keyword">let</span> reg = <span class="hljs-regexp">/\/([^\/]*)\.(jpg|png)/</span>;<br><span class="hljs-keyword">let</span> name = path.<span class="hljs-title function_">match</span>(reg)[<span class="hljs-number">1</span>];<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">key</span>: path,<br><span class="hljs-attr">name</span>: name,<br><span class="hljs-attr">value</span>: files[path],<br>&#125;<br>&#125;)<br><span class="hljs-keyword">const</span> hoverIndex = <span class="hljs-title function_">ref</span>(-<span class="hljs-number">1</span>)<br><span class="hljs-keyword">const</span> isShowOverlay = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>)<br><span class="hljs-keyword">const</span> showPic = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style scoped&gt;<br><span class="hljs-selector-class">.container</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">900px</span>;<br>    <span class="hljs-attribute">column-count</span>: <span class="hljs-number">3</span>;<br>    <span class="hljs-attribute">column-gap</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.item</span> &#123;<br>    <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><br><span class="hljs-selector-class">.mask</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">flex-direction</span>: column;<br>    <span class="hljs-attribute">justify-content</span>: center;<br>    <span class="hljs-attribute">align-items</span>: center;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.4</span>);<br><br>    svg &#123;<br>        stroke: none;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.9</span>);<br>    &#125;<br><br>    <span class="hljs-selector-tag">div</span> &#123;<br>        <span class="hljs-attribute">position</span>: absolute;<br>        <span class="hljs-attribute">bottom</span>: <span class="hljs-number">30px</span>;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">90%</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">15px</span>;<br>        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">15px</span>;<br>        <span class="hljs-attribute">text-overflow</span>: ellipsis;<br>        <span class="hljs-attribute">white-space</span>: nowrap;<br>        <span class="hljs-attribute">overflow</span>: hidden;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-number">#FFFFFFc2</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-selector-class">.fade-enter-from</span>,<br><span class="hljs-selector-class">.fade-leave-to</span> &#123;<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br><br>    svg &#123;<br>        <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">30px</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-selector-class">.fade-enter-to</span>,<br><span class="hljs-selector-class">.fade-leave-from</span> &#123;<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br><br>    svg &#123;<br>        <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0px</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-selector-class">.fade-enter-active</span>,<br><span class="hljs-selector-class">.fade-leave-active</span> &#123;<br>    <span class="hljs-attribute">transition</span>: opacity .<span class="hljs-number">5s</span> ease;<br><br>    svg &#123;<br>        <span class="hljs-attribute">transition</span>: transform .<span class="hljs-number">5s</span> ease;<br>    &#125;<br>&#125;<br><br><span class="hljs-selector-tag">img</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">object-fit</span>: contain;<br>    <span class="hljs-attribute">box-sizing</span>: border-box;<br>    <span class="hljs-attribute">break-inside</span>: avoid;<br>&#125;<br><br><span class="hljs-selector-class">.overlay</span> &#123;<br>    <span class="hljs-attribute">position</span>: fixed;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.6</span>);<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">justify-content</span>: center;<br>    <span class="hljs-attribute">align-items</span>: center;<br><br>    <span class="hljs-selector-tag">img</span> &#123;<br>        <span class="hljs-attribute">width</span>: fit-content;<br>        <span class="hljs-attribute">height</span>: fit-content;<br>        <span class="hljs-attribute">max-width</span>: <span class="hljs-number">90%</span>;<br>        <span class="hljs-attribute">max-height</span>: <span class="hljs-number">90%</span>;<br>        <span class="hljs-attribute">object-fit</span>: contain;<br>    &#125;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p><img src="https://images.starnight.top/img/Kapture%202024-08-05%20at%2017.55.47.gif" alt=""></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实现多个渐变色叠加的边框</title>
    <link href="/2024/07/29/%E5%AE%9E%E7%8E%B0%E5%A4%9A%E4%B8%AA%E6%B8%90%E5%8F%98%E8%89%B2%E5%8F%A0%E5%8A%A0%E7%9A%84%E8%BE%B9%E6%A1%86/"/>
    <url>/2024/07/29/%E5%AE%9E%E7%8E%B0%E5%A4%9A%E4%B8%AA%E6%B8%90%E5%8F%98%E8%89%B2%E5%8F%A0%E5%8A%A0%E7%9A%84%E8%BE%B9%E6%A1%86/</url>
    
    <content type="html"><![CDATA[<h2 id="实现多个渐变色叠加的边框">实现多个渐变色叠加的边框</h2><p>如何实现下面这个由两个渐变色叠加的边框效果：</p><p><img src="https://images.starnight.top/img/aec5805e03422bd0b42c52f56efc040.jpg" alt=""></p><p>对于单个渐变色的边框可以用<code>border-image</code>轻松实现</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.border-image-demo</span>&#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid;<br>  <span class="hljs-attribute">border-image</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">135deg</span>, skyblue, purple) <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://images.starnight.top/img/02453875a0261f1602bf496d3d6e4cc.jpg" alt=""></p><p>但这个方式存在两个问题：</p><ol><li><code>border-image</code>只能接受一个渐变色，无法叠加多个渐变色</li><li><code>border-image</code>无法通过<code>border-radius</code>实现圆角</li></ol><p><img src="https://images.starnight.top/img/29f5c9f4f5a8dfbcaf9259060f5394f.jpg" alt=""></p><h3 id="方法一：border-image-overflow">方法一：border-image+overflow</h3><p>这一方法是在原有<code>border-image</code>方法上的改进，既然使用了<code>border-image</code>属性的元素无法通过<code>border-radius</code>属性实现圆角，那么可以给该元素添加一个父元素，给父元素设置<code>border-radius</code>属性，并设置<code>overflow:hidden</code>，以此来实现边框的圆角效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.border-image-demo-container</span>&#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">206px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">106px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><br><span class="hljs-selector-class">.border-image-demo</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">border-image</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">135deg</span>, skyblue, purple) <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>但是也可以看到，这种方法存在两个问题</p><ol><li>内部的黑色部分（内容部分）仍为方形，棱角分明</li><li>父元素的圆角不能太大，一但偏大就会出现边框断裂的问题</li></ol><p><img src="https://images.starnight.top/img/5cce711d462609d31bd0acc639310ab.jpg" alt=""></p><p>这是因为带有<code>border-image</code>的子元素本身是没有任何变化的，只是父元素中通过设置<code>border-raduis</code>对子元素进行遮挡而已，因此当父元素的圆角遮住了子元素的边框宽度后，子元素的边框便“断裂”了</p><h3 id="方法二：多border-image元素叠加">方法二：多border-image元素叠加</h3><p>此方法可以解决<code>border-image</code>不能使用多个渐变色的问题，既然一个<code>border-image</code>无法使用多个渐变色，那就用多个元素并设置<code>border-image</code>进行叠加，即可实现多渐变叠加的效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mask1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mask2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">100.9deg</span>, <span class="hljs-number">#112531</span> -<span class="hljs-number">1.03%</span>, <span class="hljs-number">#111111</span> <span class="hljs-number">37.46%</span>, <span class="hljs-number">#000001</span> <span class="hljs-number">96.14%</span>);<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.mask1</span>&#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">border-image</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">125.19deg</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">208</span>, <span class="hljs-number">208</span>, <span class="hljs-number">242</span>, <span class="hljs-number">0</span>) <span class="hljs-number">48.74%</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">223</span>, <span class="hljs-number">223</span>, <span class="hljs-number">252</span>, <span class="hljs-number">0.6</span>) <span class="hljs-number">98.12%</span>) <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-selector-class">.mask2</span>&#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">border-image</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">312.62deg</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">105</span>, <span class="hljs-number">124</span>, <span class="hljs-number">159</span>, <span class="hljs-number">0</span>) <span class="hljs-number">81.16%</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.72</span>) <span class="hljs-number">99.61%</span>) <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://images.starnight.top/img/b6764dc4fc03739608b9549bf5eb4e1.jpg" alt=""></p><p>这种方法实现了浮于子元素上方的多渐变叠加的边框，但同样无法实现圆角的问题，此外这个方法的缺点显而易见，每个添加渐变都需要添加一个元素，很不方便。</p><h3 id="方法三：clip-path">方法三：clip-path</h3><p>这种方法与方法一非常相似，方法一是通过添加父元素并设置<code>overflow:hidden</code>来对边框进行遮挡，而这种方法则是通过<code>clip-path</code>对元素本身进行裁剪。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.clip-path-demo</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid;<br>  <span class="hljs-attribute">border-image</span>:<span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">135deg</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">123</span>,<span class="hljs-number">123</span>,<span class="hljs-number">252</span>), <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">253</span>,<span class="hljs-number">252</span>)) <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">clip-path</span>: <span class="hljs-built_in">inset</span>(<span class="hljs-number">0</span> round <span class="hljs-number">5px</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>首先还是通过<code>border-image</code>设置渐变边框，之后通过<code>clip-path</code>属性对元素进行裁剪。<code>clip-path: inset(0 round 10px)</code>，其中<code>inset()</code>是矩形裁剪，<code>inset(0 round 10px)</code>表示为一个与父容器完全贴合的容器，并且其<code>border-radius</code>为<code>10px</code>，将这个元素之外的内容全部裁剪不可见。</p><p><code>inset()</code>方法的位置信息有四个可选项，分别对应距离上、下、左、右四条边的距离，<code>round</code>为可选参数，其同样可以使用四个数值分别描述四个角的圆角数值。</p><p>这个方法的缺点也和方法一一样：</p><ol><li>内部的黑色部分（内容部分）仍为方形，棱角分明</li><li>裁剪的圆角不能太大，一但偏大就会出现边框断裂的问题</li></ol><p><img src="https://images.starnight.top/img/505620f9e26bc9b54ef910dfc170569.jpg" alt=""></p><h3 id="方法四：background-image">方法四：background-image</h3><p>在对<code>border-image</code>尝试无果后，便开始考虑通过<code>background-image</code>来实现这个效果，最常用的方法是给出一个宽高都略大于目标元素的<code>div</code>标签，设置其<code>background-image</code>和<code>border-image</code>属性，将其放置在目标元素的下方，模拟出了一个边框。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;background-image-demo-container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;background-image-demo-content&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.background-image-demo-container</span>&#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">206px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">106px</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">background-image</span>: <br>    <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">135deg</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">123</span>,<span class="hljs-number">123</span>,<span class="hljs-number">252</span>,<span class="hljs-number">0.4</span>), <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">253</span>,<span class="hljs-number">252</span>,<span class="hljs-number">0.4</span>)),<br>    <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">45deg</span>,<span class="hljs-built_in">rgba</span>(<span class="hljs-number">133</span>, <span class="hljs-number">208</span>, <span class="hljs-number">84</span>, <span class="hljs-number">0.4</span>) <span class="hljs-number">48.74%</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">232</span>, <span class="hljs-number">0.6</span>) <span class="hljs-number">98.12%</span>);<br>&#125;<br><br><span class="hljs-selector-class">.background-image-demo-content</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">3px</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">3px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">background-color</span>: black;<br>&#125;<br></code></pre></td></tr></table></figure><p>或者也可以不用两个元素，而用<code>::after</code>替代</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.background-image-demo-container</span><span class="hljs-selector-pseudo">::after</span>&#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">3px</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">3px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">background-color</span>: black;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://images.starnight.top/img/52b40e9b153ddbab98a3422df885624.jpg" alt=""></p><p><img src="https://images.starnight.top/img/3ab5a64b15fad1444932bddc9c28c1b.jpg" alt=""></p><p>左侧为单个渐变的效果，右侧为两个渐变叠加的效果，可见多个渐变叠加得以实现。同时也可以通过<code>border-radius</code>属性实现圆角。但这种情况下，如果需要该半透明的边框叠加在图片上方，则无法实现。</p><h3 id="方法五：mask-image">方法五：mask-image</h3><p>为了将边框浮于元素上方，便思考有没有一种方法能够将元素裁剪为一个环，首先想到的是<code>mask-image</code>，他能够定义一个蒙版，来遮挡住元素，<code>mask-image</code>接收图片或者渐变色作为参数，而线性渐变无法实现效果，其只能实现渐隐的效果，因此采用径向渐变来进行蒙版的构建。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.mask</span>&#123;<br>  <span class="hljs-attribute">content</span>:<span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">width</span>:<span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">border-radius</span>:<span class="hljs-number">50px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">position</span>:absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">125.19deg</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">208</span>, <span class="hljs-number">208</span>, <span class="hljs-number">242</span>, <span class="hljs-number">0</span>) <span class="hljs-number">48.74%</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">223</span>, <span class="hljs-number">223</span>, <span class="hljs-number">252</span>, <span class="hljs-number">0.6</span>) <span class="hljs-number">98.12%</span>),<br>              <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">312.62deg</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">105</span>, <span class="hljs-number">124</span>, <span class="hljs-number">159</span>, <span class="hljs-number">0</span>) <span class="hljs-number">81.16%</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.72</span>) <span class="hljs-number">99.61%</span>);<br>  <span class="hljs-attribute">mask-image</span>: <span class="hljs-built_in">radial-gradient</span>(circle at center, transparent <span class="hljs-number">60%</span>, black <span class="hljs-number">100%</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://images.starnight.top/img/804f062e6e99afef61eb6f8b9161d9e.jpg" alt=""></p><p>虽然效果不是非常理想，但是至少模拟出了类似的效果，将其移至元素上方即可。</p><h3 id="方法六：background-clip">方法六：background-clip</h3><p>最后，我找到了<code>background-clip</code>方法，<code>background-clip</code>方法设置元素的背景（背景图片或颜色）是否延伸到边框下面。它的部分取值和 <code>box-sizing</code> 类似。其中，</p><ul><li><code>background-clip: border-box</code> 表示设置的背景 <code>background-image</code> 将延伸至边框</li><li><code>background-clip: content-box</code> 表示设置的背景 <code>background-image</code> 被裁剪至内容区（content box）外沿</li></ul><p>具体的效果示例可见<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-clip">MDN</a></p><p>重要的是，这个方法可以设置多个参数，用以对应多个<code>background</code>参数，也就是说，我们可以在<code>background-image</code>属性中，设置四层背景，第四层背景（也就是最下方的背景）是要显示的子元素的背景色，第二三层背景则是两个构建边框的渐变色，第一层背景（也就是最上方的背景）也是要显示的子元素的背景色，用于遮挡住二三层的渐变色。为了使二三层的渐变色边框能够显露出来，将二三层边框的<code>background-clip</code>参数设置为<code>border-box</code>，而第一层背景的<code>background-clip</code>属性设置为<code>content-box</code>这样第一层背景就只遮挡住了<code>content-box</code>部分的内容，而将<code>border</code>部分的内容显露出现，正好形成了一个边框，并叠加在底层元素的上方。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.background-clip-use</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">border</span>: solid <span class="hljs-number">2px</span> transparent;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">background-image</span>:  <br>    <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">100.9deg</span>, <span class="hljs-number">#F3F8FF</span> -<span class="hljs-number">1.03%</span>, <span class="hljs-number">#D7E1EE</span> <span class="hljs-number">37.46%</span>, <span class="hljs-number">#A6B4FE</span> <span class="hljs-number">96.14%</span>),<br>    <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">125.19deg</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">28</span>, <span class="hljs-number">208</span>, <span class="hljs-number">242</span>, <span class="hljs-number">0</span>) <span class="hljs-number">48.74%</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">23</span>, <span class="hljs-number">223</span>, <span class="hljs-number">252</span>, <span class="hljs-number">0.6</span>) <span class="hljs-number">98.12%</span>),<br>    <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">312.62deg</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">105</span>, <span class="hljs-number">124</span>, <span class="hljs-number">159</span>, <span class="hljs-number">0</span>) <span class="hljs-number">81.16%</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">25</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.72</span>) <span class="hljs-number">99.61%</span>),<br>    <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">100.9deg</span>, <span class="hljs-number">#F3F8FF</span> -<span class="hljs-number">1.03%</span>, <span class="hljs-number">#D7E1EE</span> <span class="hljs-number">37.46%</span>, <span class="hljs-number">#A6B4FE</span> <span class="hljs-number">96.14%</span>);<br>  <span class="hljs-attribute">background-origin</span>: border-box;<br>  <span class="hljs-attribute">background-clip</span>: content-box, border-box, border-box, border-box;<br>&#125;<br></code></pre></td></tr></table></figure><p>裁剪得到的边框如下所示（该情况下去掉了最下方的背景，使得边框单独展示）：</p><p><img src="https://images.starnight.top/img/995cadc902015767a219c273a03f337.jpg" alt=""></p><p>添加上最底层的背景后得到了想要的结果，如下图所示</p><p><img src="https://images.starnight.top/img/73195e6a3b628e15f31c438549b0e50.jpg" alt=""></p><h3 id="方法七：复制为SVG">方法七：复制为SVG</h3><p>另外的开发过程中，对于这类复杂背景，可以直接从figma设计稿中选中图形，右键复制为svg或者png，导入到项目的静态资源中，直接使用<code>url()</code>设置为背景图更加的便捷。</p><hr><h3 id="Reference">Reference</h3><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDA2MTI1MA==&amp;mid=2649093625&amp;idx=3&amp;sn=534bcedc0989a0d05ec1c0b9d547c612&amp;chksm=be5bd254892c5b428ab3588891b7fdb2829f85dd936eec3a877fadd82729bca579ca852a2019&amp;scene=27">巧妙实现带圆角的渐变边框</a></p><p><a href="https://segmentfault.com/a/1190000043924067">不要图片？CSS实现圆角边框渐变色+背景透明</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用ECharts和G2实现图表</title>
    <link href="/2024/07/20/%E4%BD%BF%E7%94%A8ECharts%E5%92%8CG2%E5%AE%9E%E7%8E%B0%E5%9B%BE%E8%A1%A8/"/>
    <url>/2024/07/20/%E4%BD%BF%E7%94%A8ECharts%E5%92%8CG2%E5%AE%9E%E7%8E%B0%E5%9B%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="使用ECharts和G2实现图表">使用ECharts和G2实现图表</h2><p>在网页上常用的图表显示框架有ECharts、G2等，通过使用ECharts和G2实现相同效果的双折线带面积的图表来学习其用法。</p><h3 id="ECharts">ECharts</h3><p>ECharts绘制图表通过设置<code>options</code>来实现，并通过<code>setOption</code>来应用配置项，同时实现图表的更新。</p><h4 id="安装ECharts">安装ECharts</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shel">npm install echarts<br></code></pre></td></tr></table></figure><h4 id="获取容器">获取容器</h4><p>首先在<code>template</code>中准备一个定义了宽高的DOM容器，并通过<code>ref</code>创建引用，在<code>script</code>中定义该引用变量，获取组件，通过<code>echarts.init</code>方法初始化一个实例，并将其绑定在组件上，之后通过<code>setOption</code>方法生成图表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;div ref=&quot;myCanvas&quot; style=&quot;width: 450px;height: 350px&quot;&gt;&lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup&gt;<br>import &#123; ref, onMounted &#125; from &#x27;vue&#x27;<br>import * as echarts from &#x27;echarts&#x27;<br>  <br>const myCanvas = ref()<br><br>onMounted(() =&gt; &#123;<br>  let echart = echarts.init(myCanvas.value)<br>  echart.setOption(option)<br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h4 id="定义Option">定义Option</h4><p>创建一个变量<code>option</code>用于指定图表的配置项和数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> option = &#123;<br>  <span class="hljs-comment">// x轴的相关配置</span><br>  <span class="hljs-comment">// type=‘category’表明该轴的数据类型是离散的类目数据</span><br>  <span class="hljs-comment">// data中定义了该轴的相关数据</span><br>  <span class="hljs-attr">xAxis</span>: &#123;<br>    <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>,<br>    <span class="hljs-attr">data</span>: [<span class="hljs-string">&#x27;Mon&#x27;</span>, <span class="hljs-string">&#x27;Tue&#x27;</span>, <span class="hljs-string">&#x27;Wed&#x27;</span>, <span class="hljs-string">&#x27;Thu&#x27;</span>, <span class="hljs-string">&#x27;Fri&#x27;</span>, <span class="hljs-string">&#x27;Sat&#x27;</span>, <span class="hljs-string">&#x27;Sun&#x27;</span>]<br>  &#125;,<br>  <span class="hljs-comment">// y轴的相关配置</span><br>  <span class="hljs-comment">// type=‘value’表明该轴的数据类型是连续数据</span><br>  <span class="hljs-attr">yAxis</span>: &#123;<br>    <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;value&#x27;</span><br>  &#125;,<br>  <span class="hljs-comment">// 图例的相关配置</span><br>  <span class="hljs-comment">// data表明存在两条折线，应显示两个图例</span><br>  <span class="hljs-comment">// bottom=0表明图例应显示在图表底部</span><br>  <span class="hljs-attr">legend</span>: &#123;<br>    <span class="hljs-attr">data</span>: [<span class="hljs-string">&#x27;total&#x27;</span>, <span class="hljs-string">&#x27;fans&#x27;</span>],<br>    <span class="hljs-attr">bottom</span>: <span class="hljs-number">0</span><br>  &#125;,<br>  <span class="hljs-comment">// 提示框的相关配置</span><br>  <span class="hljs-comment">// trigger=axis表明提示框由坐标轴触发，即鼠标在坐标轴上时即可显示，如为</span><br>  <span class="hljs-comment">// ‘item’则只在数据点上触发（点与点之间的连线则不触发）</span><br>  <span class="hljs-comment">// triggerOn=‘mousemove｜click’表明在鼠标移动和点击时都会触发</span><br>  <span class="hljs-attr">tooltip</span>: &#123;<br>    <span class="hljs-attr">trigger</span>: <span class="hljs-string">&#x27;axis&#x27;</span>,<br>    <span class="hljs-attr">triggerOn</span>: <span class="hljs-string">&#x27;mousemove|click&#x27;</span><br>  &#125;,<br>  <span class="hljs-comment">// 数据的配置</span><br>  <span class="hljs-comment">// series传递一个数组，每个对象对应一条折线</span><br>  <span class="hljs-attr">series</span>: [<br>    &#123;<br>      <span class="hljs-comment">// data：该折线的数据值</span><br>      <span class="hljs-comment">// type：line表明该数据是折线图</span><br>      <span class="hljs-comment">// name：该折线的名称，与图例中名称相对应</span><br>      <span class="hljs-comment">// color：折线的颜色</span><br>      <span class="hljs-comment">// areaStyle：用于配置折线面积的样式</span><br>      <span class="hljs-attr">data</span>: [<span class="hljs-number">820</span>, <span class="hljs-number">932</span>, <span class="hljs-number">901</span>, <span class="hljs-number">934</span>, <span class="hljs-number">1290</span>, <span class="hljs-number">1330</span>, <span class="hljs-number">1320</span>],<br>      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;line&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;total&#x27;</span>,<br>      <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#ff4684&#x27;</span>,<br>      <span class="hljs-attr">areaStyle</span>: &#123;<br>        <span class="hljs-comment">// 背景色通过线性渐变函数获取渐变色</span><br>        <span class="hljs-comment">// 前四个参数分别表示渐变的起始x，y位置，和终止的x，y位置（百分比）</span><br>        <span class="hljs-comment">// 最后一个参数设置渐变各个位置的颜色</span><br>        <span class="hljs-attr">color</span>: <span class="hljs-keyword">new</span> echarts.<span class="hljs-property">graphic</span>.<span class="hljs-title class_">LinearGradient</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, [<br>          &#123;<br>            <span class="hljs-attr">offset</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#ff468433&#x27;</span><br>          &#125;,<br>          &#123;<br>            <span class="hljs-attr">offset</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#ff468400&#x27;</span><br>          &#125;<br>        ])<br>      &#125;<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">data</span>: [<span class="hljs-number">145</span>, <span class="hljs-number">245</span>, <span class="hljs-number">123</span>, <span class="hljs-number">425</span>, <span class="hljs-number">134</span>, <span class="hljs-number">312</span>, <span class="hljs-number">175</span>],<br>      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;line&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;fans&#x27;</span>,<br>      <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#00aeec&#x27;</span>,<br>      <span class="hljs-comment">// 折线样式的配置</span><br>      <span class="hljs-comment">// color：折线颜色</span><br>      <span class="hljs-comment">// width：折线宽度</span><br>      <span class="hljs-comment">// type：折线样式</span><br>      <span class="hljs-attr">lineStyle</span>: &#123;<br>        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#00aeec&#x27;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">2</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;dashed&#x27;</span><br>      &#125;,<br>      <span class="hljs-attr">areaStyle</span>: &#123;<br>        <span class="hljs-attr">color</span>: <span class="hljs-keyword">new</span> echarts.<span class="hljs-property">graphic</span>.<span class="hljs-title class_">LinearGradient</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, [<br>          &#123;<br>            <span class="hljs-attr">offset</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#00aeec33&#x27;</span><br>          &#125;,<br>          &#123;<br>            <span class="hljs-attr">offset</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#00aeec00&#x27;</span><br>          &#125;<br>        ])<br>      &#125;<br>    &#125;<br>  ]<br>&#125;;<br></code></pre></td></tr></table></figure><h4 id="完整代码">完整代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;div ref=&quot;myCanvas&quot; style=&quot;width: 450px;height: 350px&quot;&gt;&lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup&gt;<br>import &#123; ref, onMounted &#125; from &#x27;vue&#x27;<br>import * as echarts from &#x27;echarts&#x27;<br>  <br>const myCanvas = ref()<br>const option = &#123;<br>  xAxis: &#123;<br>    type: &#x27;category&#x27;,<br>    data: [&#x27;Mon&#x27;, &#x27;Tue&#x27;, &#x27;Wed&#x27;, &#x27;Thu&#x27;, &#x27;Fri&#x27;, &#x27;Sat&#x27;, &#x27;Sun&#x27;]<br>  &#125;,<br>  yAxis: &#123;<br>    type: &#x27;value&#x27;<br>  &#125;,<br>  legend: &#123;<br>    data: [&#x27;total&#x27;, &#x27;fans&#x27;],<br>    bottom: 0<br>  &#125;,<br>  tooltip: &#123;<br>    trigger: &#x27;axis&#x27;,<br>    show: true,<br>    showContent: true,<br>    triggerOn: &#x27;mousemove|click&#x27;<br>  &#125;,<br>  series: [<br>    &#123;<br>      data: [820, 932, 901, 934, 1290, 1330, 1320],<br>      type: &#x27;line&#x27;,<br>      name: &#x27;total&#x27;,<br>      color: &#x27;#ff4684&#x27;,<br>      areaStyle: &#123;<br>        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [<br>          &#123;<br>            offset: 0,<br>            color: &#x27;#ff468433&#x27;<br>          &#125;,<br>          &#123;<br>            offset: 1,<br>            color: &#x27;#ff468400&#x27;<br>          &#125;<br>        ])<br>      &#125;<br>    &#125;,<br>    &#123;<br>      data: [145, 245, 123, 425, 134, 312, 175],<br>      type: &#x27;line&#x27;,<br>      name: &#x27;fans&#x27;,<br>      color: &#x27;#00aeec&#x27;,<br>      lineStyle: &#123;<br>        color: &#x27;#00aeec&#x27;,<br>        width: 2,<br>        type: &#x27;dashed&#x27;<br>      &#125;,<br>      areaStyle: &#123;<br>        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [<br>          &#123;<br>            offset: 0,<br>            color: &#x27;#00aeec33&#x27;<br>          &#125;,<br>          &#123;<br>            offset: 1,<br>            color: &#x27;#00aeec00&#x27;<br>          &#125;<br>        ])<br>      &#125;<br>    &#125;<br>  ]<br>&#125;;<br>  <br>onMounted(() =&gt; &#123;<br>  let echart = echarts.init(myCanvas.value)<br>  echart.setOption(option)<br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h4 id="呈现效果">呈现效果</h4><p><img src="https://images.starnight.top/img/a24d92e43d26a9406b990b111d503c8.jpg" alt=""></p><h3 id="G2">G2</h3><p>G2图表的绘制同样通过配置项来进行设置，将配置项作为初始化时的一个参数传入，之后调用渲染函数进行绘制。</p><h4 id="安装G2">安装G2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shel">npm install @antv/g2plot<br></code></pre></td></tr></table></figure><h4 id="创建容器">创建容器</h4><p>首先在<code>template</code>中准备一个定义了宽高的DOM容器，并通过<code>ref</code>创建引用，在<code>script</code>中定义该引用变量，获取组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;div ref=&quot;myCanvasG2&quot; width=&quot;450px&quot; height=&quot;350px&quot;&gt;&lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><h4 id="引入数据">引入数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> data = [&#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Mon&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">10</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;预期收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Tue&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">22</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;预期收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Wed&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">16</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;预期收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Thu&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">26</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;预期收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Fri&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">12</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;预期收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Sat&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">26</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;预期收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Sun&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">18</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;预期收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Mon&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">4</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;实际收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Tue&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">3</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;实际收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Wed&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">6</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;实际收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Thu&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">12</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;实际收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Fri&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">1</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;实际收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Sat&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">9</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;实际收益率&#x27;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;Sun&#x27;</span>,<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">13</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;实际收益率&#x27;</span><br>&#125;]<br></code></pre></td></tr></table></figure><h4 id="创建并渲染图表">创建并渲染图表</h4><p>与ECharts不同的是，G2需要根据不同的图表，引入不同的图表类，例如使用面积图则<code>import &#123; Area &#125; from '@antv/g2plot'</code>，使用折线图则引入<code>import &#123; Line &#125; from '@antv/g2plot'</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Area</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@antv/g2plot&#x27;</span><br><span class="hljs-keyword">import</span> &#123; ref, onMounted &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><br><span class="hljs-keyword">const</span> myCanvasG2 = <span class="hljs-title function_">ref</span>()<br><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>  <span class="hljs-keyword">let</span> gchart = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Area</span>(myCanvasG2.<span class="hljs-property">value</span>,g2Options)<br>  gchart.<span class="hljs-title function_">render</span>()<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="定义配置项">定义配置项</h4><p>定义一个<code>option</code>变量用于指定图表的配置项和数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> colors = [<span class="hljs-string">&#x27;#ff4684&#x27;</span>, <span class="hljs-string">&#x27;#00aeec&#x27;</span>]<br><span class="hljs-keyword">const</span> g2Options = &#123;<br>  <span class="hljs-comment">// 引入数据</span><br>  data,<br>  <span class="hljs-comment">// 定义x轴使用的数据字段</span><br>  <span class="hljs-attr">xField</span>: <span class="hljs-string">&#x27;time&#x27;</span>,<br>  <span class="hljs-comment">// 定义y轴使用的数据字段</span><br>  <span class="hljs-attr">yField</span>: <span class="hljs-string">&#x27;value&#x27;</span>,<br>  <span class="hljs-comment">// 定义分组的依据字段</span><br>  <span class="hljs-attr">seriesField</span>: <span class="hljs-string">&#x27;type&#x27;</span>,<br>  <span class="hljs-comment">// 配置折线的颜色，传入数组则是多条不同折线的颜色，详见文档</span><br>  <span class="hljs-attr">color</span>: colors,<br>  <span class="hljs-comment">// 配置折线的样式</span><br>  <span class="hljs-comment">// 如果type是‘实际收益率’则显示为虚线</span><br>  <span class="hljs-comment">// 函数返回的应是整个lineStyle对象的配置内容，具体配置内容见文档，函数中传入</span><br>  <span class="hljs-comment">// 的参数为整个图表的数据</span><br>  <span class="hljs-attr">line</span>: &#123;<br>    <span class="hljs-attr">style</span>: <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (data[<span class="hljs-string">&#x27;type&#x27;</span>] === <span class="hljs-string">&#x27;实际收益率&#x27;</span>) &#123;<br>        <span class="hljs-keyword">return</span> &#123;<br>          <span class="hljs-attr">lineDash</span>: [<span class="hljs-number">4</span>, <span class="hljs-number">4</span>]<br>        &#125;<br>      &#125;<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-comment">// 提示框的配置项</span><br>  <span class="hljs-comment">// showCrosshairs=true表明显示crosshairs</span><br>  <span class="hljs-comment">// crosshairs设置crosshairs的样式</span><br>  <span class="hljs-attr">tooltip</span>: &#123;<br>    <span class="hljs-attr">showCrosshairs</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// type=xy表明在x方向和y方向上都显示辅助线</span><br>    <span class="hljs-comment">// line用于设置该辅助线的样式</span><br>    <span class="hljs-attr">crosshairs</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;xy&#x27;</span>,<br>      <span class="hljs-attr">line</span>: &#123;<br>        <span class="hljs-attr">style</span>: &#123;<br>          <span class="hljs-attr">stroke</span>: <span class="hljs-string">&#x27;#ff4684&#x27;</span>,<br>          <span class="hljs-attr">lineDash</span>: [<span class="hljs-number">4</span>, <span class="hljs-number">4</span>]<br>        &#125;<br>      &#125;<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-comment">// 折线面积的配置</span><br>  <span class="hljs-comment">// 同样根据数据中的type字段来分别显示不同的样式</span><br>  <span class="hljs-comment">// 渐变格式为 l(角度) 位置:颜色</span><br>  <span class="hljs-attr">areaStyle</span>: <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(data[<span class="hljs-string">&#x27;type&#x27;</span>] === <span class="hljs-string">&#x27;实际收益率&#x27;</span>)&#123;<br>      <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;l(90) 0:#00aeec88 1:#00aeec00&#x27;</span><br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;l(90) 0:#ff468488 1:#ff468400&#x27;</span><br>    &#125;<br>  &#125;,<br>  <span class="hljs-comment">// 图例的配置</span><br>  <span class="hljs-comment">// position：‘bottom’表明图例显示在底部</span><br>  <span class="hljs-attr">legend</span>: &#123;<br>    <span class="hljs-attr">position</span>: <span class="hljs-string">&#x27;bottom&#x27;</span>,<br>  &#125;,<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="完整代码-2">完整代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;div ref=&quot;myCanvasG2&quot; width=&quot;450px&quot; height=&quot;350px&quot;&gt;&lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup&gt;<br>import &#123; Area &#125; from &#x27;@antv/g2plot&#x27;<br>import &#123; ref, onMounted &#125; from &#x27;vue&#x27;<br><br>const myCanvasG2 = ref()<br>const colors = [&#x27;#ff4684&#x27;, &#x27;#00aeec&#x27;]<br>const g2Options = &#123;<br>  // 引入数据<br>  data,<br>  // 定义x轴使用的数据字段<br>  xField: &#x27;time&#x27;,<br>  // 定义y轴使用的数据字段<br>  yField: &#x27;value&#x27;,<br>  // 定义分组的依据字段<br>  seriesField: &#x27;type&#x27;,<br>  // 配置折线的颜色，传入数组则是多条不同折线的颜色，详见文档<br>  color: colors,<br>  // 配置折线的样式<br>  // 如果type是‘实际收益率’则显示为虚线<br>  // 函数返回的应是整个lineStyle对象的配置内容，具体配置内容见文档，函数中传入<br>  // 的参数为整个图表的数据<br>  line: &#123;<br>    style: (data) =&gt; &#123;<br>      if (data[&#x27;type&#x27;] === &#x27;实际收益率&#x27;) &#123;<br>        return &#123;<br>          lineDash: [4, 4]<br>        &#125;<br>      &#125;<br>    &#125;,<br>  &#125;,<br>  // 提示框的配置项<br>  // showCrosshairs=true表明显示crosshairs<br>  // crosshairs设置crosshairs的样式<br>  tooltip: &#123;<br>    showCrosshairs: true,<br>    // type=xy表明在x方向和y方向上都显示辅助线<br>    // line用于设置该辅助线的样式<br>    crosshairs: &#123;<br>      type: &#x27;xy&#x27;,<br>      line: &#123;<br>        style: &#123;<br>          stroke: &#x27;#ff4684&#x27;,<br>          lineDash: [4, 4]<br>        &#125;<br>      &#125;<br>    &#125;,<br>  &#125;,<br>  // 折线面积的配置<br>  // 同样根据数据中的type字段来分别显示不同的样式<br>  // 渐变格式为 l(角度) 位置:颜色<br>  areaStyle: (data) =&gt; &#123;<br>    if(data[&#x27;type&#x27;] === &#x27;实际收益率&#x27;)&#123;<br>      return &#123;<br>        fill: &#x27;l(90) 0:#00aeec88 1:#00aeec00&#x27;<br>      &#125;<br>    &#125;<br>    return &#123;<br>      fill: &#x27;l(90) 0:#ff468488 1:#ff468400&#x27;<br>    &#125;<br>  &#125;,<br>  // 图例的配置<br>  // position：‘bottom’表明图例显示在底部<br>  legend: &#123;<br>    position: &#x27;bottom&#x27;,<br>  &#125;,<br>&#125;<br><br>onMounted(()=&gt;&#123;<br>  let gchart = new Area(myCanvasG2.value,g2Options)<br>  gchart.render()<br>&#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="呈现效果-2">呈现效果</h3><p><img src="https://images.starnight.top/img/74e1d7c31192af21fa4629f369f5005.jpg" alt=""></p><h2 id="遇到的问题">遇到的问题</h2><p>在设置Tooltip的过程中遇到一个<a href="https://starnight.top/2024/07/20/ECharts%E7%9A%84Tooltip%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%8E%9F%E5%9B%A0/">ECharts的Tooltip不显示原因</a></p><hr><p><strong>Reference</strong></p><p><a href="https://echarts.js.cn/zh/option.html">ECHARTS文档</a></p><p><a href="https://blog.csdn.net/weixin_42728767/article/details/130401563">Vue3 手把手按需引入 Echarts</a></p><p><a href="https://segmentfault.com/a/1190000021898188">Vue-Echarts的使用：在vue项目中使用echarts</a></p><p><a href="https://blog.csdn.net/weixin_52772897/article/details/126302018">vue3中如何使用G2Plot</a></p><p><a href="https://g2plot.antv.antgroup.com/api/components/tooltip">G2Plot文档</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ECharts的Tooltip不显示原因</title>
    <link href="/2024/07/20/ECharts%E7%9A%84Tooltip%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%8E%9F%E5%9B%A0/"/>
    <url>/2024/07/20/ECharts%E7%9A%84Tooltip%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%8E%9F%E5%9B%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="ECharts的Tooltip不显示原因">ECharts的Tooltip不显示原因</h2><h3 id="问题">问题</h3><p>在使用ECharts添加Tooltip的时候发现<strong>浮窗不显示，但其辅助线可以正常显示</strong>，网上查到的原因都说的是Vue的代理问题，不能将Echarts实例定义为<code>ref</code>或<code>reactive</code>对象，但我在代码里并没有将其定义为<code>ref</code>对象，且用上<code>makeRow</code>等方法后仍然不显示提示框。如下所示。<br><img src="https://images.starnight.top/img/2cf41d75d3cbd1589193ad65bf92960.jpg" alt=""></p><h2 id="HTML结构检查">HTML结构检查</h2><p>出现了问题首先查看控制台，发现没有报错，便去查看HTML的DOM树，发现在<code>canvas</code>标签下出现了一个<code>div</code>标签，其值随着鼠标的移动在不停发生变化，所以这个应该就是未能显示出来的浮窗，在将其移出<code>canvas</code>标签，并将其样式设为可见后发现这个确实就是被遮挡的浮窗。<br><img src="https://images.starnight.top/img/9c2e2295d21d6782bd932c488f59601.jpg" alt=""><br>也就说这个浮窗能够正常出现和展示，但是由于其在<code>canvas</code>标签下而被遮挡住，无法在视图中出现，那如果将<code>canvas</code>换成<code>div</code>标签呢，结果发现浮窗就可以正常显示了。<br><img src="https://images.starnight.top/img/b1c9690d7154e462f161e1c67fec8b9.jpg" alt=""></p><h2 id="原因">原因</h2><p>在正常情况下，ECharts默认会将tooltip作为一个独立的DOM元素添加到图表容器中。这使得tooltip可以轻松地显示在图表上方，并且可以使用CSS进行样式设置。</p><p>而 Canvas是一个位图绘图表面，它本身不支持DOM元素。这意味着不能直接在canvas内部添加HTML元素。</p><p><strong>ECharts的实现</strong></p><p>当使用div作为容器时，ECharts会在div内部创建两个div元素：</p><ul><li>一个div中包含一个canvas元素用于绘制图表</li><li>一个div中添加其他必要的DOM元素，如tooltip。</li></ul><p>而当直接使用canvas元素初始化ECharts时，会导致tooltip无法正确显示，因为canvas本身不能包含其他DOM元素。</p><p><strong>G2</strong></p><p>G2的图表绘制也是同理，ECharts在使用<code>canvas</code>的情况下，至少图表能够正常的显示，因为当<code>canvas</code>作为容器时，其第一个用来绘制图表的div元素会删去，直接在该canvas上绘制，而G2则仍然会生成一个由<code>div</code>包裹的<code>canvas</code>标签用于绘制，所以G2在使用<code>canvas</code>作为容器的时候，连图表都无法生成显示。</p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实现跟随鼠标位置的Tooltip</title>
    <link href="/2024/07/16/%E5%AE%9E%E7%8E%B0%E8%B7%9F%E9%9A%8F%E9%BC%A0%E6%A0%87%E4%BD%8D%E7%BD%AE%E7%9A%84Tooltip/"/>
    <url>/2024/07/16/%E5%AE%9E%E7%8E%B0%E8%B7%9F%E9%9A%8F%E9%BC%A0%E6%A0%87%E4%BD%8D%E7%BD%AE%E7%9A%84Tooltip/</url>
    
    <content type="html"><![CDATA[<p>实现一个能够鼠标移动的Tooltip，在里面显示一些信息，并且可以进入以进行进一步的互动操作。</p><h3 id="基础实现">基础实现</h3><p>首先定义一个背景图，当鼠标在背景图中移动的时候，Tooltip显示在鼠标的右下角，并显示当前鼠标在背景图中的坐标。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- <br>1. 定义一个包裹的容器，并将其position设置为relative<br>2. 在背景图中设置样式，并添加mousemove的事件监听器，当鼠标在背景图中移动的时候，实时更新数据<br>3. 设置tooltip的显示内容和样式，并通过style标签动态绑定其位置信息<br>--&gt;<br>&lt;template&gt;<br>    &lt;div style=&quot;position: relative;&quot;&gt;<br>        &lt;div class=&quot;canvasArea&quot; @mousemove=&quot;handleMouseMove&quot;&gt;<br>        &lt;/div&gt;<br>        &lt;div class=&quot;tooltip&quot; :style=&quot;tooltipStyle&quot;&gt;<br>            &lt;div&gt;Tooltip&lt;/div&gt;<br>            &lt;div&gt;当前鼠标的相对于容器的横坐标是：&#123;&#123; tooltip.offsetX &#125;&#125;&lt;/div&gt;<br>            &lt;div&gt;当前鼠标的相对于容器的纵坐标是：&#123;&#123; tooltip.offsetY &#125;&#125;&lt;/div&gt;<br>        &lt;/div&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref, computed &#125; from &#x27;vue&#x27;<br><br>const canvasRef = ref(null)<br>const tooltip = ref(&#123;<br>    offsetX: 0,<br>    offsetY: 0,<br>&#125;)<br><br>//通过event事件获取鼠标相对于容器的偏移坐标，并赋值给tooltip的属性<br>function handleMouseMove(event: MouseEvent) &#123;<br>    tooltip.value.offsetX = event.offsetX<br>    tooltip.value.offsetY = event.offsetY<br>&#125;<br><br>//通过计算属性来实时计算tooltip的位置<br>const tooltipStyle = computed(() =&gt; &#123;<br>    return &#123;<br>        left: (tooltip.value.offsetX + 10) + &#x27;px &#x27;,<br>        top: (tooltip.value.offsetY + 10) + &#x27;px&#x27;,<br>    &#125;<br>&#125;)<br><br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.canvasArea &#123;<br>    width: 800px;<br>    height: 600px;<br>    background-color: #f0f0f0;<br>&#125;<br><br>.tooltip &#123;<br>    background-color: white;<br>    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);<br>    padding: 20px;<br>    border-radius: 10px;<br>    position: absolute;<br>    z-index: 1;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>这样就实现了一个跟随鼠标移动的Tooltip，在鼠标移动时更新其内部显示的信息。</p><p>此外，发现Tooltip在移动到背景图的边缘时文本会被换行显示，所以给样式添加<code>text-wrap:nowrap</code>来保证Tooltip样式不变。</p><h3 id="显隐逻辑">显隐逻辑</h3><p>之后需要给背景图添加<code>mouseenter</code>和<code>mouseleave</code>的事件监听器，当鼠标进入背景图时显示tooltip，当鼠标移开背景图时隐藏tooltip，这时候便可以给tooltip再添加一个<code>visible</code>属性，来控制其显示和隐藏。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>    &lt;div style=&quot;position: relative;&quot;&gt;<br>        &lt;div class=&quot;canvasArea&quot; <br>             @mousemove=&quot;handleMouseMove&quot;<br>             @mouseenter=&quot;handleMouseEnter&quot;<br>             @mouseleave=&quot;handleMouseLeave&quot;&gt;<br>        &lt;/div&gt;<br>        &lt;div class=&quot;tooltip&quot; :style=&quot;tooltipStyle&quot; v-show=&quot;tooltip.visible&quot;&gt;<br>            &lt;div&gt;Tooltip&lt;/div&gt;<br>            &lt;div&gt;当前鼠标的相对于容器的横坐标是：&#123;&#123; tooltip.offsetX &#125;&#125;&lt;/div&gt;<br>            &lt;div&gt;当前鼠标的相对于容器的纵坐标是：&#123;&#123; tooltip.offsetY &#125;&#125;&lt;/div&gt;<br>        &lt;/div&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><p>添加对应的两个函数，并通过设置一个计时器来延迟Tooltip的消失时间</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> timeTrigger = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>)<br><span class="hljs-keyword">const</span> tooltip = <span class="hljs-title function_">ref</span>(&#123;<br>    <span class="hljs-attr">visible</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">offsetX</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">offsetY</span>: <span class="hljs-number">0</span>,<br>&#125;)<br><br><span class="hljs-comment">// 当鼠标进入时清除计时器，并将tooltip设置为显示</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleMouseEnter</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-built_in">clearTimeout</span>(timeTrigger.<span class="hljs-property">value</span>)<br>    tooltip.<span class="hljs-property">value</span>.<span class="hljs-property">visible</span> = <span class="hljs-literal">true</span><br>&#125;<br><br><span class="hljs-comment">// 当鼠标离开时触发计时器，在100ms后隐藏tooltip</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleMouseLeave</span>(<span class="hljs-params"></span>) &#123;<br>    timeTrigger.<span class="hljs-property">value</span> = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        tooltip.<span class="hljs-property">value</span>.<span class="hljs-property">visible</span> = <span class="hljs-literal">false</span><br>    &#125;, <span class="hljs-number">100</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>这样Tooltip就可以实现鼠标在背景图中移动时显示，移出背景图时隐藏的效果了。</p><h3 id="可进入">可进入</h3><p>之后是配置可进入的功能，由于在鼠标进入到Tooltip的时候仍然会触发背景图的<code>mouseleave</code>事件，所以需要在Tooltip中也添加一个<code>mouseenter</code>事件，在其中清除隐藏Tooltip的计时器，将Tooltip保持显示</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleTooltipMouseEnter</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-built_in">clearTimeout</span>(timeTrigger.<span class="hljs-property">value</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>这样当鼠标进入Tooltip的时候就可以保持Tooltip的显示，并在其中进行进一步的互动了。但是我们会发现一个问题，那就是鼠标几乎无法进入到Tooltip中，在尝试和观察后发现，导致难以进入的原因是<strong>Tooltip太跟手了</strong>，也就是鼠标移动到一个位置，Tooltip立马就更新到了新位置，导致鼠标的移动很难“快过”Tooltip，也就难以进入了。</p><p>既然是Tooltip的位置更新过快导致的问题，那么可以通过添加一个短暂的延时，来推迟Tooltip的移动，从而让鼠标可以有机会进入Tooltip。</p><p>在<code>mousemove</code>的handle函数中，将更新位置的部分代码用<code>setTimeout</code>函数包裹</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleMouseMove</span>(<span class="hljs-params">event: MouseEvent</span>) &#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        tooltip.<span class="hljs-property">value</span>.<span class="hljs-property">offsetX</span> = event.<span class="hljs-property">offsetX</span><br>        tooltip.<span class="hljs-property">value</span>.<span class="hljs-property">offsetY</span> = event.<span class="hljs-property">offsetY</span><br>    &#125;, <span class="hljs-number">10</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>至此，一个可进入的跟随鼠标移动的Tooltip就实现了。</p><h3 id="暗色模式">暗色模式</h3><p>为了实现暗色模式，可以通过css的媒体监听器来实现暗色模式的不同样式展示</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">prefers-color-scheme</span>: dark) &#123;<br>    <span class="hljs-selector-class">.container</span> &#123;<br>        <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#333333</span>;<br>    &#125;<br><br>    <span class="hljs-selector-class">.tooltip</span> &#123;<br>        <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#464646</span>;<br>        <span class="hljs-attribute">color</span>: lightgray;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="完整代码">完整代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>    &lt;div style=&quot;position: relative;&quot;&gt;<br>        &lt;div class=&quot;canvasArea&quot; @mousemove=&quot;handleMouseMove&quot; @mouseenter=&quot;handleMouseEnter&quot;<br>            @mouseleave=&quot;handleMouseLeave&quot;&gt;<br>        &lt;/div&gt;<br>        &lt;div class=&quot;tooltip&quot; :style=&quot;tooltipStyle&quot; v-show=&quot;tooltip.visible&quot; @mouseenter=&quot;handleTooltipMouseEnter&quot;&gt;<br>            &lt;div&gt;Tooltip&lt;/div&gt;<br>            &lt;div&gt;当前鼠标的相对于容器的横坐标是：&#123;&#123; tooltip.offsetX &#125;&#125;&lt;/div&gt;<br>            &lt;div&gt;当前鼠标的相对于容器的纵坐标是：&#123;&#123; tooltip.offsetY &#125;&#125;&lt;/div&gt;<br>        &lt;/div&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref, computed &#125; from &#x27;vue&#x27;<br><br>const timeTrigger = ref(null)<br>const tooltip = ref(&#123;<br>    visible: false,<br>    offsetX: 0,<br>    offsetY: 0,<br>&#125;)<br><br>function handleMouseMove(event: MouseEvent) &#123;<br>    setTimeout(() =&gt; &#123;<br>        tooltip.value.offsetX = event.offsetX<br>        tooltip.value.offsetY = event.offsetY<br>    &#125;, 10)<br>&#125;<br><br>function handleMouseEnter() &#123;<br>    clearTimeout(timeTrigger.value)<br>    tooltip.value.visible = true<br>&#125;<br><br>function handleMouseLeave() &#123;<br>    console.log(&#x27;leave&#x27;)<br>    timeTrigger.value = setTimeout(() =&gt; &#123;<br>        tooltip.value.visible = false<br>    &#125;, 100)<br>&#125;<br><br>function handleTooltipMouseEnter() &#123;<br>    clearTimeout(timeTrigger.value)<br>&#125;<br><br>const tooltipStyle = computed(() =&gt; &#123;<br>    return &#123;<br>        left: (tooltip.value.offsetX + 10) + &#x27;px &#x27;,<br>        top: (tooltip.value.offsetY + 10) + &#x27;px&#x27;,<br>    &#125;<br>&#125;)<br><br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.canvasArea &#123;<br>    width: 800px;<br>    height: 600px;<br>    background-color: #f0f0f0;<br>&#125;<br><br>.tooltip &#123;<br>    background-color: white;<br>    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);<br>    padding: 20px;<br>    border-radius: 10px;<br>    position: absolute;<br>    z-index: 1;<br>    text-wrap: nowrap;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过Vite-plugin-svg-icons实现自定义的Icon组件</title>
    <link href="/2024/07/13/%E9%80%9A%E8%BF%87Vite-plugin-svg-icons%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84Icon%E7%BB%84%E4%BB%B6/"/>
    <url>/2024/07/13/%E9%80%9A%E8%BF%87Vite-plugin-svg-icons%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84Icon%E7%BB%84%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>为了能够通过像UI库的图标组件一样，通过<code>name='icon-name'</code>的形式来引入自己的图标，而不是通过<code>img</code>标签的<code>src</code>属性写长长一串地址，所以通过svg sprite图来进行实现。</p><h3 id="原理">原理</h3><p>svg sprite图的实现原理是利用svg的<code>symbol</code>元素，将每个icon包裹在<code>symbol</code>中，再通过svg的<code>use</code>标签来使用该<code>symbol</code>，也就是最终，svg图标会变成如下的样子</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="hljs-attr">xmlns:xlink</span>=<span class="hljs-string">&quot;http://www.w3.org/1999/xlink&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">symbol</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">&quot;0 0 1024 1024&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;icon名&quot;</span>&gt;</span>&#123;&#123;省略的icon path&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">symbol</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">symbol</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">&quot;0 0 1024 1024&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;icon名&quot;</span>&gt;</span>&#123;&#123;省略的icon path&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">symbol</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br></code></pre></td></tr></table></figure><p>此处的每个<code>symbol</code>都对应着一个元素，在需要使用icon的地方通过svg中的<code>use</code>标签根据icon的Id来进行读取</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">use</span> <span class="hljs-attr">xlink:href</span>=<span class="hljs-string">&quot;#symbolId&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">use</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="svg-sprite图的生成与导入">svg sprite图的生成与导入</h3><p>对于<code>vite</code>项目来说，可以使用<code>vite-plugin-svg-icons</code>插件，对于<code>webpack</code>项目来说可以使用<code>svg-sprite-loader</code>插件。</p><p><strong>安装</strong></p><p>首先安装<code>vite-plugin-svg-icons</code>插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm i vite-plugin-svg-icons<br></code></pre></td></tr></table></figure><p><strong>配置</strong></p><p>之后在<code>vite.config.ts</code>中对插件进行配置</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; createSvgIconsPlugin &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite-plugin-svg-icons&#x27;</span><br><span class="hljs-keyword">import</span> path <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;path&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-title function_">vue</span>()，<br>    <span class="hljs-title function_">createSvgIconsPlugin</span>(&#123;<br>    <span class="hljs-comment">// 指定需要缓存的图标文件夹</span><br>    <span class="hljs-attr">iconDirs</span>: [path.<span class="hljs-title function_">resolve</span>(process.<span class="hljs-title function_">cwd</span>(), <span class="hljs-string">&#x27;src/assets/icons&#x27;</span>)]<br><span class="hljs-comment">// 指定symbolId格式</span><br><span class="hljs-attr">symbolId</span>: <span class="hljs-string">&#x27;icon-[name]&#x27;</span><br>    &#125;)<br>  ]<br>&#125;)<br></code></pre></td></tr></table></figure><p>之后还需要在<code>src/main.ts</code>中引入注册脚本</p> <figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;virtual:svg-icons-register&#x27;</span><br></code></pre></td></tr></table></figure><p>至此svg sprite图已经生成，可以在页面中通过svg标签进行访问。访问的symbolId格式便是设置中的<code>icon-[图标文件名称]</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">use</span> <span class="hljs-attr">xlnk:href</span>=<span class="hljs-string">&#x27;#test&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">use</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="封装图标组件">封装图标组件</h3><p>在现在的情况下，我们仍然需要使用svg标签来引入图标，而不是像UI库一般通过组件形式来引入，因此我们创建一个Icon组件对图标进行封装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>    &lt;svg :class=&quot;&#x27;svg-icon &#x27; + classes&quot; :style=&quot;&#123;<br>        width: `$&#123;width&#125;px`,<br>        height: `$&#123;height&#125;px`,<br>        color: color<br>    &#125;&quot; @click=&quot;$emit(&#x27;click&#x27;)&quot;&gt;<br>        &lt;use :xlink:href=&quot;`#icon-$&#123;name&#125;`&quot; /&gt;<br>    &lt;/svg&gt;<br>&lt;/template&gt;<br><br>&lt;script lang=&quot;ts&quot;&gt;<br>import &#123; defineComponent &#125; from &#x27;vue&#x27;<br><br>export default defineComponent(&#123;<br>    name: &#x27;VIcon&#x27;,<br>    props: &#123;<br>        name: &#123;<br>            type: String,<br>            required: true<br>        &#125;,<br>        width: &#123;<br>            type: Number,<br>            default: 60<br>        &#125;,<br>        height: &#123;<br>            type: Number,<br>            default: 60<br>        &#125;,<br>        color: &#123;<br>            type: String,<br>            default: &#x27;deepgrey&#x27;<br>        &#125;,<br>        classes: &#123;<br>            type: String,<br>            default: &#x27;&#x27;<br>        &#125;<br>    &#125;,<br>    setup(props) &#123;<br>        return &#123;<br>            props<br>        &#125;<br>    &#125;<br>&#125;)<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.svg-icon &#123;<br>    font-weight: 500;<br>    fill: currentColor;<br>    stroke: currentColor;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>在上述的代码中，我们将svg标签中的内容放置在组件中，并传入一些控制参数，用于调整图标的显示样式，并注册了点击事件，如果希望处理点击事件则可以在调用侧监听<code>click</code>事件并做相应的处理。</p><p>至此，便可在别处通过组件形式来使用图标了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;h1&gt;This is an about page&lt;/h1&gt;<br>    &lt;VIcon name=&quot;boy&quot; color=&quot;lightblue&quot; class=&quot;test test2&quot; /&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import VIcon from &#x27;@/components/VIcon.vue&#x27;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>也可以在<code>src/main.ts</code>中将<code>VIcon</code>注册为组件，即可在别处使用时不再一一导入<code>VIcon</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> <span class="hljs-title class_">VIcon</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./components/VIcon.vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br>...<br><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>)<br>...<br>app.<span class="hljs-title function_">component</span>(<span class="hljs-string">&#x27;VIcon&#x27;</span>,<span class="hljs-title class_">VIcon</span>)<br>...<br></code></pre></td></tr></table></figure><hr><p><strong>Reference</strong></p><p><a href="https://segmentfault.com/a/1190000015367490">懒人神器：svg-sprite-loader实现自己的Icon组件</a></p><p><a href="https://github.com/vbenjs/vite-plugin-svg-icons/blob/main/README.zh_CN.md">Github文档</a></p><p><a href="https://www.cnblogs.com/onesea/p/16095164.html">vite.config.js配置入门详解</a></p><p><a href="https://www.cnblogs.com/sincisco/articles/18201676">svg-sprite-loader的使用</a></p><p><a href="https://www.cnblogs.com/Leophen/p/14157256.html">Vue2/3 使用 svg-sprite-loader 实现 svg 图标按需加载</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实现一个门票、卡券样式卡片</title>
    <link href="/2024/06/20/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%97%A8%E7%A5%A8%E3%80%81%E5%8D%A1%E5%88%B8%E6%A0%B7%E5%BC%8F%E5%8D%A1%E7%89%87/"/>
    <url>/2024/06/20/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%97%A8%E7%A5%A8%E3%80%81%E5%8D%A1%E5%88%B8%E6%A0%B7%E5%BC%8F%E5%8D%A1%E7%89%87/</url>
    
    <content type="html"><![CDATA[<p>实现一个门票、卡券样式的卡片，涉及到<code>mask-image</code>,<code>drop-shadow</code>,<code>radial-gradient</code>等属性的学习与使用</p><span id="more"></span><p>实现一个门票、卡券样式的卡片，其样式如下所示：</p><p><img src="https://images.starnight.top/img/20240620214016.png" alt=""></p><p>可以发现这个样式以虚线为界分为左右两个部分，左侧显示图片，右侧显示一些详细信息，其中右上角还有一个三角模块显示当前状态。</p><h2 id="基础布局">基础布局</h2><p>左侧的图片，右侧的详细信息布局都可以轻松完成，中间的虚线则使用<code>border</code>进行设置</p><ol><li>新建一个空标签</li><li>设置其<code>border-left</code>属性，将样式设置为<code>dashed</code>实现虚线条</li><li>设置上下的<code>margin</code>来将虚线放置在中间</li></ol><p><img src="https://images.starnight.top/img/20240620214148.png" alt=""></p><h3 id="虚线上下的半圆缺口">虚线上下的半圆缺口</h3><p>首先通过<code>radial-gradient</code>实现一个径向渐变，指定渐变的形状，大小，圆心和渐变颜色位置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">radial-gradient(circle <span class="hljs-number">100px</span> at <span class="hljs-number">200px</span> <span class="hljs-number">75px</span>,transparent <span class="hljs-number">19%</span> red <span class="hljs-number">20%</span>);<br></code></pre></td></tr></table></figure><p>上述css样式意为，创建一个半径为100px，圆心位置在(200px，75px)的径向渐变，其中圆心到19%处为透明，19%到20%处为透明到红色的渐变，20%到100%为红色</p><p>通过将这一个渐变图案赋值给<code>mask-image</code>实现遮罩效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">mask-image</span>:<span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at <span class="hljs-number">200px</span> <span class="hljs-number">75px</span>,transparent <span class="hljs-number">19%</span> red <span class="hljs-number">20%</span>);<br></code></pre></td></tr></table></figure><p><code>mask-image</code>接收一个图片，可以是通过url传入的图片，也可以是通过<code>radial-gradient</code>等方法创建的图形，传入的图片中的透明部分(transparent)会被遮挡，显示下方元素，而非透明的部分则会进行显示，从而实现不同形状的蒙版。</p><p>此时，我们已经创建了一个圆形蒙版，得到了一个半径为100px的圆形，圆形内显示的是背景样式，为了实现上下的缺口，我们需要对蒙版进行移动，使用<code>mask-position</code>属性对蒙版进行定位。</p><p><strong>并且这个蒙版会在该元素内循环定位</strong>，也就是说如果我们将这个图形移出边界，那么移出的那部分会出现在该元素的另一侧，所以我们通过将这个圆形蒙版下移或上移一半，使得只留下半圆，那么剩下的半圆便会出现在另一侧，从而实现上下两个半圆的缺口。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">mask-image</span>: <span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at <span class="hljs-number">200px</span> <span class="hljs-number">75px</span>, transparent <span class="hljs-number">19%</span>, red <span class="hljs-number">20%</span>);<br><span class="hljs-attribute">mask-position</span>: -<span class="hljs-number">50px</span> <span class="hljs-number">75px</span>;<br></code></pre></td></tr></table></figure><p><img src="https://images.starnight.top/img/20240620214240.png" alt=""></p><h3 id="右上角三角标签">右上角三角标签</h3><p>比起构建一个三角形的形状，更常用的方法是正常设置一个正方形的元素，将其旋转后移动至右上角，并隐藏溢出的部分。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.ticket-card__tag</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">106px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">106px</span>;<br>  <span class="hljs-attribute">background</span>: gray;<br>  <span class="hljs-attribute">color</span>: white;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: end;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">45deg</span>);<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: -<span class="hljs-number">55px</span>;<br>  <span class="hljs-attribute">right</span>: -<span class="hljs-number">55px</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">25px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>设置大小背景色和文字的位置后通过<code>  transform: rotate(45deg)</code>将图形旋转45度，之后通过设置<code> position: absolute;</code>和<code>top</code>、<code>right</code>属性将其移动到右上角，实现标签的显示。并且由于已经给父元素添加了蒙版，所以标签溢出的部分会直接被蒙版所遮盖，只显示一个三角。</p><p><img src="https://images.starnight.top/img/20240620214313.png" alt=""></p><p>通过这种方式我们已经可以实现门票、卡券样式的显示，例如BiliBili的流量券样式</p><p><img src="https://images.starnight.top/img/20240620214424.png" alt=""></p><h3 id="另一种实现方式，支持阴影">另一种实现方式，支持阴影</h3><p>但通过上述方式实现，我们会发现一个问题，就是如果我们想要给这个卡片添加一个阴影，但发现由于阴影被遮罩所覆盖而无法显示。</p><p>因此我们考虑通过拼接的方式实现该样式，左侧为一个带右上和右下缺口的元素，中间一个虚线，右侧则为一个带左上和左下缺口的元素。三者拼接实现卡券样式。</p><h4 id="左右侧卡片">左右侧卡片</h4><p>首先是左侧的卡片，同样使用<code>radial-gradient</code>创建圆形图案，在<code>background</code>属性中通过设置两个<code>radial-gradient</code>来添加两个圆。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at right top, transparent <span class="hljs-number">19%</span>, white <span class="hljs-number">20%</span>) top right / <span class="hljs-number">100%</span> <span class="hljs-number">51%</span> no-repeat,<br>            <span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at right bottom, transparent <span class="hljs-number">19%</span>, white <span class="hljs-number">20%</span>) bottom right/ <span class="hljs-number">100%</span> <span class="hljs-number">51%</span> no-repeat;<br></code></pre></td></tr></table></figure><ul><li>首先通过<code>circle 100px at right top, transparent 19%, white 20%</code>设置一个半径为100px，圆心位于右上角的径向渐变，从而得到一个1/4圆的形状，然后设置渐变色，从圆心到19%处为透明，显示背景颜色，从19%到20%为透明到白色的渐变，从20%到100%为白色</li><li>通过<code>top</code>和<code>right</code>指定该块背景的位置在右上角，之后的<code>100% 51%</code>指定该块背景的大小，例如如果设置为<code>top right / 50% 50%</code>，那么这块背景就只占据元素右上角且面积为元素的1/4，如果设置为<code>top / 50% 50%</code>，那么这块背景就只占据元素的上半部分，且居中，大小仍为元素的1/4</li><li>如果这里不添加背景的位置和大小，那么它会默认占据100%的大小，就会出现第一个渐变中的透明部分，被第二个渐变的白色所覆盖，同理第二个渐变的透明部分显示的也是第一个渐变的白色部分，则无法实现缺口效果了。</li></ul><p><img src="https://images.starnight.top/img/20240620220524.png" alt=""></p><p>上图即为下方代码的示例</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at right top, orange <span class="hljs-number">19%</span>, red <span class="hljs-number">20%</span>) top right / <span class="hljs-number">80%</span> <span class="hljs-number">51%</span> no-repeat,<br>      <span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at right bottom, purple <span class="hljs-number">19%</span>, lightblue <span class="hljs-number">20%</span>) bottom / <span class="hljs-number">50%</span> <span class="hljs-number">51%</span> no-repeat;<br></code></pre></td></tr></table></figure><p>那么接下来右侧卡片也就同理了，只需要将缺口设置为左上角和左下角即可。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.ticket-card__content</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at left top, transparent <span class="hljs-number">19%</span>, white <span class="hljs-number">20%</span>) top left / <span class="hljs-number">100%</span> <span class="hljs-number">51%</span> no-repeat,<br>              <span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at left bottom, transparent <span class="hljs-number">19%</span>, white <span class="hljs-number">20%</span>) bottom left / <span class="hljs-number">100%</span> <span class="hljs-number">51%</span> no-repeat;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: column;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">position</span>: relative;<br>&#125;<br></code></pre></td></tr></table></figure><p>这样便实现了之前的样式效果。</p><p>接下来如果想要给这个不规则图形添加一个阴影的话就需要用到<code>filter</code> 中的<code>drop-shadow</code>，分别给左右两个部分添加这一样式即可实现阴影。注意<code>drop-shadow</code>跟<code>box-shadow</code>的<a href="https://www.zhangxinxu.com/wordpress/2016/05/css3-filter-drop-shadow-vs-box-shadow/">区别</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">filter</span>: <span class="hljs-built_in">drop-shadow</span>(<span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">3px</span> lightgray); <br></code></pre></td></tr></table></figure><p><img src="https://images.starnight.top/img/20240620220115.png" alt=""></p><h3 id="实现代码">实现代码</h3><h4 id="第一种方式">第一种方式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>    &lt;div class=&quot;ticket-card&quot;&gt;<br>      &lt;div class=&quot;ticket-card__title_container&quot;&gt;<br>        &lt;div class=&quot;ticket-card__title&quot;&gt;&lt;/div&gt;<br>      &lt;/div&gt;<br>      &lt;div class=&quot;ticket-card__divider&quot;&gt;&lt;/div&gt;<br>      &lt;div class=&quot;ticket-card__content&quot;&gt;<br>        &lt;span class=&quot;ticket-card__content__title&quot;&gt;邓紫棋南京演唱会&lt;/span&gt;<br>        &lt;span class=&quot;ticket-card__content__time&quot;&gt;2024.06.21-06.23&lt;/span&gt;<br>        &lt;span class=&quot;ticket-card__content__place&quot;&gt;南京奥体中心体育场&lt;/span&gt;<br>      &lt;/div&gt;<br>      &lt;div class=&quot;ticket-card__tag&quot;&gt;<br>        已售罄<br>      &lt;/div&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script lang=&quot;ts&quot; setup&gt;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>body&#123;<br>  background-color: rgb(242,242,242);<br>&#125;<br><br>.ticket-card&#123;<br>  mask-image: radial-gradient(circle 100px at 200px 75px, transparent 19%, red 20%);<br>  mask-position: -50px 75px;<br>  width: fit-content;<br>  height: 150px;<br>  background: white;<br>  position: relative;<br>  border-radius: 5px; <br>  display: flex;<br>&#125;<br><br>.ticket-card__title_container&#123;<br>  width: 150px;<br>  overflow: hidden;<br>&#125;<br><br>.ticket-card__title&#123;<br>  width: 85%;<br>  height: 100%;<br>  display: flex;<br>  justify-content: center;<br>  align-items: center;<br>  background: url(&#x27;https://img.dahepiao.com/uploads/allimg/240607/39222-PbS0y9xfEuEbf.jpg&#x27;) no-repeat;<br>  background-size: 100%;<br>&#125;<br><br>.ticket-card__divider&#123;<br>  border-left: 2px dashed lightgray;<br>  margin: 30px 0px;<br>&#125;<br><br>.ticket-card__content&#123;<br>  width: 300px;<br>  padding-left: 40px;<br>  display: flex;<br>  flex-direction: column;<br>  justify-content: center;<br>&#125;<br><br>.ticket-card__content__title&#123;<br>  font-weight: 700;<br>  font-size: 16pt;<br>  color: #000;<br>  margin-bottom: 10px;<br>&#125;<br><br>.ticket-card__content__time&#123;<br>  font-size: 12pt;<br>  line-height: .768rem;<br>  color: #666;<br>  margin-bottom: 10px;<br>&#125;<br><br>.ticket-card__content__place&#123;<br>  font-size: 12pt;<br>  color: #999;<br>  word-break: break-all;<br>  overflow-wrap: break-word;<br>&#125;<br><br>.ticket-card__tag&#123;<br>  width: 106px;<br>  height: 106px;<br>  background: gray;<br>  /* text-align: center; */<br>  color: white;<br>  display: flex;<br>  align-items: end;<br>  justify-content: center;<br>  transform: rotate(45deg);<br>  position: absolute;<br>  top: -55px;<br>  right: -55px;<br>  line-height: 25px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h4 id="第二种修改的部分">第二种修改的部分</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;template&gt;<br>    &lt;<span class="hljs-selector-tag">div</span> class=&quot;ticket-card&quot;&gt;<br>      &lt;<span class="hljs-selector-tag">div</span> class=&quot;ticket-card__title__container&quot;&gt;<br>        &lt;<span class="hljs-selector-tag">div</span> class=&quot;ticket-card__title&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>      &lt;/<span class="hljs-selector-tag">div</span>&gt;<br>      &lt;<span class="hljs-selector-tag">div</span> style=&quot;<span class="hljs-attribute">background-color</span>: white;<span class="hljs-attribute">margin</span>:<span class="hljs-number">20px</span> <span class="hljs-number">0px</span>;<span class="hljs-attribute">width</span>:<span class="hljs-number">2px</span>;<span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;&quot;&gt;<br>        &lt;<span class="hljs-selector-tag">div</span> class=&quot;ticket-card__divider&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>      &lt;/<span class="hljs-selector-tag">div</span>&gt;<br>      &lt;<span class="hljs-selector-tag">div</span> class=&quot;ticket-card__content&quot;&gt;<br>        &lt;<span class="hljs-selector-tag">span</span> class=&quot;ticket-card__content__title&quot;&gt;邓紫棋南京演唱会&lt;/<span class="hljs-selector-tag">span</span>&gt;<br>        &lt;<span class="hljs-selector-tag">span</span> class=&quot;ticket-card__content__time&quot;&gt;<span class="hljs-number">2024.06</span>.<span class="hljs-number">21</span>-<span class="hljs-number">06.23</span>&lt;/<span class="hljs-selector-tag">span</span>&gt;<br>        &lt;<span class="hljs-selector-tag">span</span> class=&quot;ticket-card__content__place&quot;&gt;南京奥体中心体育场&lt;/<span class="hljs-selector-tag">span</span>&gt;<br>        &lt;<span class="hljs-selector-tag">div</span> class=&quot;ticket-card__tag&quot;&gt;<br>          已售罄<br>        &lt;/<span class="hljs-selector-tag">div</span>&gt;<br>      &lt;/<span class="hljs-selector-tag">div</span>&gt;<br>    &lt;/<span class="hljs-selector-tag">div</span>&gt;<br>&lt;/template&gt;<br><br><br>&lt;style&gt;<br><span class="hljs-selector-class">.ticket-card</span>&#123;<br>  <span class="hljs-attribute">width</span>: fit-content;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">40px</span> <span class="hljs-number">0px</span> <span class="hljs-number">0px</span> <span class="hljs-number">40px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.ticket-card__title__container</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at right top, transparent <span class="hljs-number">19%</span>, white <span class="hljs-number">20%</span>) top right / <span class="hljs-number">100%</span> <span class="hljs-number">51%</span> no-repeat,<span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at right bottom, transparent <span class="hljs-number">19%</span>, white <span class="hljs-number">20%</span>) bottom right / <span class="hljs-number">100%</span> <span class="hljs-number">51%</span> no-repeat;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">filter</span>: <span class="hljs-built_in">drop-shadow</span>(<span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">3px</span> lightgray);<br>&#125;<br><br><span class="hljs-selector-class">.ticket-card__content</span>&#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at left top, transparent <span class="hljs-number">19%</span>, white <span class="hljs-number">20%</span>) top left / <span class="hljs-number">100%</span> <span class="hljs-number">51%</span> no-repeat,<span class="hljs-built_in">radial-gradient</span>(circle <span class="hljs-number">100px</span> at left bottom, transparent <span class="hljs-number">19%</span>, white <span class="hljs-number">20%</span>) bottom left / <span class="hljs-number">100%</span> <span class="hljs-number">51%</span> no-repeat;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: column;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">filter</span>: <span class="hljs-built_in">drop-shadow</span>(<span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">3px</span> lightgray);<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><hr><p><a href="https://www.jianshu.com/p/52103187aac6">CSS绘制卡券、优惠券样式</a></p><p><a href="https://www.zhangxinxu.com/wordpress/2016/05/css3-filter-drop-shadow-vs-box-shadow/">CSS3 filter:drop-shadow滤镜与box-shadow区别应用</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/mask-image">MDN-mask-image</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter">MDN-filter</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/gradient/radial-gradient">MDN-radial-gradient</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实现简单的页面导航功能</title>
    <link href="/2024/06/20/%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E9%A1%B5%E9%9D%A2%E5%AF%BC%E8%88%AA%E5%8A%9F%E8%83%BD/"/>
    <url>/2024/06/20/%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E9%A1%B5%E9%9D%A2%E5%AF%BC%E8%88%AA%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<p>实现一个简单的目录功能，当点击目录按钮时能够跳转到对应的标题，并高亮显示当前选中的目录，同时对页面滚动进行监听，在页面滚动到标题时同样高亮对应的目录按钮。</p><h3 id="布局">布局</h3><p>首先将页面分为左右两个部分，因为左侧为目录且固定在页面中，所以设置为<code>fixed</code>，右侧则为内容部分，为不与目录重叠，添加<code>margin</code>值来空出位置。<br><img src="https://images.starnight.top/img/20240620213650.png" alt=""></p><h3 id="跳转标题">跳转标题</h3><p>由于在布局中，给不同的段落设置了对应的<code>id</code>，在按钮的点击事件中传入<code>id</code>参数，然后在函数中通过<code>ref</code>获取到整个内容部分的根元素，在根元素中通过传入的<code>id</code>进行<code>querySelector</code>，得到要跳转的段落。通过<code>scrollIntoView</code>方法实现跳转。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> content_container = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeMenu</span>(<span class="hljs-params">item:<span class="hljs-built_in">any</span></span>) &#123;<br>  <span class="hljs-keyword">const</span> el = content_container.<span class="hljs-property">value</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">`#<span class="hljs-subst">$&#123;item.value&#125;</span>`</span>);<br>  <span class="hljs-keyword">if</span> (el) &#123;<br>    el.<span class="hljs-title function_">scrollIntoView</span>(&#123; <span class="hljs-attr">behavior</span>: <span class="hljs-string">&#x27;smooth&#x27;</span> &#125;);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(el.<span class="hljs-property">offsetTop</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="监听滚动事件">监听滚动事件</h3><p>首先遍历所有的段落，根据每个段落的<code>offsetTop</code>为自定义的属性<code>scrollTop</code>设置初始值，该属性用于判断页面滚动到了哪个部分。（即每个段落距离根元素顶部的距离，也就是他们在根元素中的起始位置）</p><p>之后对根元素添加滚动的事件监听器，并通过根元素的<code>scrollTop</code>属性得到根元素滚动的距离（可视窗口向下移动了多少），然后将该<code>scrollTop</code>的值与各段落的<code>scrollTop</code>属性进行比较，当两者差值的绝对值小于50时即视为页面已经滚动到了该段落，则更新目录的高亮按钮。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>    sections.<span class="hljs-property">value</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">item</span>)=&gt;</span>&#123;<br>      <span class="hljs-keyword">const</span> el = content_container.<span class="hljs-property">value</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">`#<span class="hljs-subst">$&#123;item.value&#125;</span>`</span>);<br>      <span class="hljs-keyword">if</span> (el) &#123;<br>        item.<span class="hljs-property">scrollTop</span> = el.<span class="hljs-property">offsetTop</span>;<br>      &#125;<br>    &#125;)<br>    content_container.<span class="hljs-property">value</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;scroll&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(content_container.<span class="hljs-property">value</span>.<span class="hljs-property">scrollTop</span>);<br>      sections.<span class="hljs-property">value</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">item</span>)=&gt;</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(item.<span class="hljs-property">scrollTop</span>-content_container.<span class="hljs-property">value</span>.<span class="hljs-property">scrollTop</span>)&lt;<span class="hljs-number">50</span>)&#123;<br>          currentValue.<span class="hljs-property">value</span> = item.<span class="hljs-property">value</span>;<br>        &#125;<br>      &#125;)<br>    &#125;);<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="高亮的判定">高亮的判定</h3><p>为了实现目录按钮高亮的变更，设置一个变量<code>currentValue</code>来表示当前显示的段落<code>id</code>，当当前显示的段落<code>id</code>与目录按钮对应的段落<code>id</code>相同时，则该目录按钮应该高亮，为其添加<code>active</code>类来修改样式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class=&quot;nav-item&quot;<br>          v-for=&quot;(item, index) in sections&quot;<br>          :key=&quot;item.name&quot;<br>          :index=&quot;index&quot;<br>          @click=&quot;changeMenu(item)&quot;<br>          :class=&quot;currentValue === item.value ? &#x27;active&#x27;:&#x27;&#x27;&quot;<br>          &gt;<br>          &lt;span class=&quot;nav-item-mask&quot; v-if=&quot;currentValue !== item.value&quot;&gt;&lt;/span&gt;<br>          &#123;&#123; item.name &#125;&#125;<br>      &lt;/div&gt;<br></code></pre></td></tr></table></figure><h3 id="完整代码">完整代码</h3><p>其中html部分中的每个模块可以通过<code>v-for</code>来遍历生成。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;main&quot;&gt;<br>    &lt;div class=&quot;nav-container&quot;&gt;<br>      &lt;div class=&quot;nav-item&quot;<br>          v-for=&quot;(item, index) in sections&quot;<br>          :key=&quot;item.name&quot;<br>          :index=&quot;index&quot;<br>          @click=&quot;changeMenu(item)&quot;<br>          :class=&quot;currentValue === item.value ? &#x27;active&#x27;:&#x27;&#x27;&quot;<br>          &gt;<br>          &lt;span class=&quot;nav-item-mask&quot; v-if=&quot;currentValue !== item.value&quot;&gt;&lt;/span&gt;<br>          &#123;&#123; item.name &#125;&#125;<br>      &lt;/div&gt;<br>    &lt;/div&gt;<br>    &lt;div class=&quot;content&quot; ref=&quot;content_container&quot;&gt;<br>      &lt;div class=&quot;container&quot;&gt;<br>        &lt;div id=&quot;Start&quot; class=&quot;content-item&quot;&gt;<br>        &lt;h2 class=&quot;name&quot;&gt;快速开始&lt;/h2&gt;<br>        &lt;p&gt;Lorem...&lt;/p&gt;<br>      &lt;/div&gt;<br>      &lt;div id=&quot;UpDate&quot; class=&quot;content-item&quot;&gt;<br>        &lt;h2 class=&quot;name&quot;&gt;检查更新&lt;/h2&gt;<br>        &lt;p&gt;Lorem...&lt;/p&gt;<br>      &lt;/div&gt;<br>      &lt;div id=&quot;DownLoad&quot; class=&quot;content-item&quot;&gt;<br>        &lt;h2 class=&quot;name&quot;&gt;下载应用&lt;/h2&gt;<br>        &lt;p&gt;Lorem...&lt;/p&gt;<br>      &lt;/div&gt;<br>      &lt;div id=&quot;History&quot; class=&quot;content-item&quot;&gt;<br>        &lt;h2 class=&quot;name&quot;&gt;更新历史&lt;/h2&gt;<br>        &lt;p&gt;Lorem...&lt;/p&gt;<br>      &lt;/div&gt;<br>      &lt;/div&gt;<br>    &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script lang=&quot;ts&quot; setup&gt;<br>import &#123; onMounted, ref &#125; from &#x27;vue&#x27;<br><br>const sections = ref([<br>  &#123;<br>    name: &#x27;快速开始&#x27;,<br>    value: &#x27;Start&#x27;,<br>    scrollTop:0<br>  &#125;,<br>  &#123;<br>    name: &#x27;检查更新&#x27;,<br>    value: &#x27;UpDate&#x27;,<br>    scrollTop:0<br>  &#125;,<br>  &#123;<br>    name: &#x27;下载应用&#x27;,<br>    value: &#x27;DownLoad&#x27;,<br>    scrollTop:0<br>  &#125;,<br>  &#123;<br>    name: &#x27;更新历史&#x27;,<br>    value: &#x27;History&#x27;,<br>    scrollTop:0<br>  &#125;<br>])<br><br>const content_container = ref(null);<br>const currentValue = ref(&#x27;Start&#x27;);<br><br>function changeMenu(item:any) &#123;<br>  const el = content_container.value.querySelector(`#$&#123;item.value&#125;`);<br>  if (el) &#123;<br>    el.scrollIntoView(&#123; behavior: &#x27;smooth&#x27; &#125;);<br>    console.log(el.offsetTop);<br>  &#125;<br>&#125;<br><br>onMounted(()=&gt;&#123;<br>    sections.value.forEach((item)=&gt;&#123;<br>      const el = content_container.value.querySelector(`#$&#123;item.value&#125;`);<br>      if (el) &#123;<br>        item.scrollTop = el.offsetTop;<br>      &#125;<br>    &#125;)<br>    content_container.value.addEventListener(&#x27;scroll&#x27;, (event) =&gt; &#123;<br>      console.log(content_container.value.scrollTop);<br>      sections.value.forEach((item)=&gt;&#123;<br>        if(Math.abs(item.scrollTop-content_container.value.scrollTop)&lt;50)&#123;<br>          currentValue.value = item.value;<br>        &#125;<br>      &#125;)<br>    &#125;);<br>&#125;)<br><br><br><br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.nav-container&#123;<br>  position: fixed;<br>  margin-left: 35px;<br>  margin-top: 50px;<br>&#125;<br><br>.nav-item&#123;<br>  position: relative;<br>  display: flex;<br>  background: #60439a;<br>  width: 80px;<br>  height: 80px;<br>  margin-bottom: 10px;<br>  justify-content: center;<br>  align-items: center;<br>  border-radius: 50%;<br>  color: white;<br>&#125;<br><br>.nav-item-mask&#123;<br>  content: &#x27;&#x27;;<br>  position: absolute;<br>  background: linear-gradient(<br>    rgba(0, 0, 0, 0.2) 5%,<br>    rgba(0, 0, 0,0.5)<br>  );<br>  width: 80px;<br>  height: 80px;<br>  top: 0px;<br>  left: 0px;<br>&#125;<br><br>  .active&#123;<br>    background-color: #725bdc;<br>    color: white;<br>  &#125;<br><br>.main &#123;<br>  display: flex;<br>  background-color: #121212;<br>  color: #d5d5d5;<br><br>  .content &#123;<br>    flex: 1;<br>    height: 78vh;<br>    overflow-y: auto;<br>    padding: 30px 150px 30px 150px;<br>    line-height:1.5em;<br>  &#125;<br><br>  .container&#123;<br>    background-color: #1f2020;<br>    padding: 25px;<br>    border-radius: 15px;<br>    border: 1px rgba(255,255,255,0.05) solid;<br>  &#125;<br><br>  .content-item &#123;<br>    margin-bottom: 30px;<br> <br>    &amp;-p &#123;<br>      padding: 2px 0;<br>    &#125;<br>  &#125;<br>  .content-item-name &#123;<br>    font-weight: bold;<br>    padding: 30px 0 20px 0;<br>  &#125;<br>  .name &#123;<br>    margin-bottom: 10px;<br>  &#125;<br>&#125;<br>&lt;/style&gt;<br><br></code></pre></td></tr></table></figure><hr><p><strong>Reference</strong></p><p><a href="https://www.cnblogs.com/zhiyiYo/p/16003255.html">如何使用 Vue3 实现文章目录功能</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx服务器通过地址访问页面出现404错误</title>
    <link href="/2024/04/02/Nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E5%9C%B0%E5%9D%80%E8%AE%BF%E9%97%AE%E9%A1%B5%E9%9D%A2%E5%87%BA%E7%8E%B0404%E9%94%99%E8%AF%AF/"/>
    <url>/2024/04/02/Nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E5%9C%B0%E5%9D%80%E8%AE%BF%E9%97%AE%E9%A1%B5%E9%9D%A2%E5%87%BA%E7%8E%B0404%E9%94%99%E8%AF%AF/</url>
    
    <content type="html"><![CDATA[<h3 id="出现问题">出现问题</h3><p>在将Vue项目部署到服务器后发现在访问页面的时候只能访问默认页面和通过项目内跳转其他页面，如果直接通过地址访问就会出现404 Not Found而在本地Vue项目运行时直接通过地址访问并没有出错，说明问题不在Route而是在Nginx服务器的设置中</p><h3 id="解决方案">解决方案</h3><p>在原本的Nginx配置中，设置的内容如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">location</span> / &#123;<br>root   /usr/<span class="hljs-keyword">share</span>/nginx/html;<br><span class="hljs-keyword">index</span>   dist/<span class="hljs-keyword">index</span>.html;<br>&#125;<br></code></pre></td></tr></table></figure><p>直接理解就是当访问根地址<code>/</code>时，跳转到dist文件夹下的index.html文件，而其他页面在访问时nginx会找不到对应的文件，所以显示找不到，将配置修改成如下即可：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> / &#123;<br><span class="hljs-attribute">root</span>   /usr/share/nginx/html;<br><span class="hljs-attribute">index</span>   dist/index.html;<br><span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ /dist/index.html;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中的<code>try_files</code>是Nginx的一个指令，用于指定一个文件的查找顺序，并且在文件不存在时执行相应的操作。通过添加这个<code>try_files</code>指令，可以告诉Nginx首先尝试查找请求的URI对应的文件（<code>$uri</code>），如果找到了，就直接返回该文件。如果没有找到，Nginx会尝试查找与请求的URI对应的目录（<code>$uri/</code>），如果找到了目录，则尝试寻找该目录下的默认文件（通常是<code>index.html</code>或者其他指定的默认文件）。如果前两步都没有找到相应的文件或目录，Nginx会将请求重定向到<code>/dist/index.html</code>。</p><p>因为采用Vue开发单页应用程序（SPA）时，只会生成一个index.html文件作为整个单页应用程序的入口，所以直接访问URL时会出现404错误，因为实际上这些路径是由前端路由处理的。通过将所有这些路径都重定向到单页应用程序的入口文件（例如<code>index.html</code>），程序才可以正确地处理这些路由并渲染相应的页面内容。</p><h3 id="补充内容">补充内容</h3><p><code>vue-router</code> 默认是hash模式，使用<code>url</code>的<code>hash</code>来模拟一个完整的url，当url改变的时候，页面不会重新加载。但是如果不想使用hash这种以#号结尾的路径的话，就可以使用路由的history的模式。比如如下网址：使用hash模式的话，那么访问的地址就是 <a href="http://localhost:8080/test/#/">http://localhost:8080/test/#/</a> ，而如果路由使用 <code>history</code>的话，那么访问的路径变成就变成了 <a href="http://localhost:8080/test">http://localhost:8080/test</a></p><p>不过<code>history</code>的这种模式需要后台配置支持。比如当访问项目的主页的时候，一切正常，可以访问，但是当我们刷新页面或者直接访问路径的时候就会返回404，那是因为在<code>history</code>模式下，只是动态的通过js操作<code>window.history</code>来改变浏览器地址栏里的路径，并没有发起http请求，而当直接在浏览器里输入这个地址来访问的时候，就需要对服务器发起http请求来获取该地址对应的网页内容，但是这个目标在服务器上又不存在，所以会返回404</p>]]></content>
    
    
    
    <tags>
      
      <tag>error</tag>
      
      <tag>服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS字符串操作连用问题</title>
    <link href="/2024/03/20/JS%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C%E8%BF%9E%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <url>/2024/03/20/JS%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C%E8%BF%9E%E7%94%A8%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="问题">问题</h3><p>有字符串“…/…/img/example.jpg”，想要提取出文件名example，使用js代码replace替换<code>../../img/</code>，再使用substring提取文件名时出现问题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> str = <span class="hljs-string">&#x27;../../img/example.jpg&#x27;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;../../img/&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)).<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>,str.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;.&#x27;</span>))<br><span class="hljs-comment">// example.jpg</span><br></code></pre></td></tr></table></figure><p>无法去除后缀名，而当两者分开使用时可以正常出结果</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> str = <span class="hljs-string">&#x27;../../img/example.jpg&#x27;</span><br><span class="hljs-keyword">const</span> str_temp = str.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;../../img/&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str_temp.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>,str_temp.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;.&#x27;</span>))<br><span class="hljs-comment">// example</span><br></code></pre></td></tr></table></figure><h2 id="原因">原因</h2><p>JS的replace和substring不对原字符串进行操作<br>所以在后者使用的<code>lastIndexOf</code>中仍读取的变量<code>str</code>仍是原数据，也就是结果为17，而进行了<code>replace</code>操作后的文本的读取结果应该为7</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&#x27;../../img/example.jpg&#x27;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;.&#x27;</span>)) <br><span class="hljs-comment">// 17</span><br><br>str = str.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;../../img/&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;.&#x27;</span>)) <br><span class="hljs-comment">// 7</span><br></code></pre></td></tr></table></figure><p>所以原代码的结果就是在replace后的<code>example.jpg</code>中读取<code>(0,17)</code>的字符串，自然也就是全部了</p><h2 id="解决方案">解决方案</h2><ol><li>分开写，用一个临时变量进行存储</li><li>在substring中再使用一次replace操作<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">x.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;../../img/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, x.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;../../img/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;.&#x27;</span>));<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL中JSON数据的查找和更新</title>
    <link href="/2024/02/17/MySQL%E4%B8%ADJSON%E6%95%B0%E6%8D%AE%E7%9A%84%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%B4%E6%96%B0/"/>
    <url>/2024/02/17/MySQL%E4%B8%ADJSON%E6%95%B0%E6%8D%AE%E7%9A%84%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%B4%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<p>设MySQL中JSON字段<code>info</code>的格式如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;小明&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;height&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">163</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> <span class="hljs-string">&#x27;t1&#x27;</span> (<br><span class="hljs-string">&#x27;id&#x27;</span> <span class="hljs-type">int</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br><span class="hljs-string">&#x27;info&#x27;</span> json <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br><span class="hljs-keyword">PRIMARY</span> KEY (<span class="hljs-string">&#x27;id&#x27;</span>)<br>)ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_unicode_ci;<br></code></pre></td></tr></table></figure><h2 id="查找">查找</h2><h3 id="1-查找JSON中的某个字段">1. 查找JSON中的某个字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> info<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span><span class="hljs-string">&#x27;$.name&#x27;</span> <span class="hljs-keyword">from</span> t1 <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br><span class="hljs-comment">-- 或者</span><br><span class="hljs-keyword">select</span> JSON_EXTRACT(info,<span class="hljs-string">&#x27;$.name&#x27;</span>) <span class="hljs-keyword">from</span> t1 <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h3 id="2-根据JSON中的字段进行查找">2. 根据JSON中的字段进行查找</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t1 <span class="hljs-keyword">where</span> info<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span><span class="hljs-string">&#x27;$.name&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;小明&#x27;</span>;<br><span class="hljs-comment">-- 或者</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t1 <span class="hljs-keyword">where</span> JSON_EXTRACT(info,<span class="hljs-string">&#x27;$.name&#x27;</span>) <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;小明&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="更新">更新</h2><h3 id="1-修改JSON中某个字段的值">1. 修改JSON中某个字段的值</h3><p><code>JSON_REPLACE(JSON列名，JSON字段名，修改值)</code><br><code>JSON_SET(JSON列名，JSON字段名，修改值)</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> t1 <span class="hljs-keyword">set</span> info <span class="hljs-operator">=</span> JSON_REPLACE(info,<span class="hljs-string">&#x27;$.age&#x27;</span>,<span class="hljs-number">16</span>) <span class="hljs-keyword">where</span> info<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span><span class="hljs-string">&#x27;$.name&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;小明&#x27;</span>;<br><span class="hljs-comment">-- 或者</span><br><span class="hljs-keyword">update</span> t1 <span class="hljs-keyword">set</span> info <span class="hljs-operator">=</span> JSON_SET(info,<span class="hljs-string">&#x27;$.age&#x27;</span>,<span class="hljs-number">16</span>) <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h3 id="2-向JSON中添加一个字段">2. 向JSON中添加一个字段</h3><p><code>JSON_INSERT(JSON列名，添加的JSON字段名，值)</code><br><code>JSON_SET(JSON列名，添加的JSON字段名，值)</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> t1 <span class="hljs-keyword">set</span> info <span class="hljs-operator">=</span> JSON_INSERT(info,<span class="hljs-string">&#x27;$.weight&#x27;</span>,<span class="hljs-number">34</span>) <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br><span class="hljs-comment">-- 或者</span><br><span class="hljs-keyword">update</span> t1 <span class="hljs-keyword">set</span> info <span class="hljs-operator">=</span> JSON_SET(info,<span class="hljs-string">&#x27;$.weight&#x27;</span>,<span class="hljs-number">34</span>) <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p>即，<code>JSON_SET</code>函数既可以更新也可以添加，当所给字段存在时就是更新，当所给字段不存在时就是添加</p>]]></content>
    
    
    <categories>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH connect to host github.com port 22 Connection refused</title>
    <link href="/2024/01/17/SSH%20connect%20to%20host%20github.com%20port%2022%20Connection%20refused/"/>
    <url>/2024/01/17/SSH%20connect%20to%20host%20github.com%20port%2022%20Connection%20refused/</url>
    
    <content type="html"><![CDATA[<p>在个人电脑上使用Git命令来操作GitHub上的项目，突然提示如下错误<code>ssh: connect to host github.com port 22: Connection refused</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git pull<br>ssh: connect to host github.com port 22: Connection refused<br>fatal: Could not <span class="hljs-built_in">read</span> from remote repository.<br>​<br>Please make sure you have the correct access rights<br>and the repository exists.<br></code></pre></td></tr></table></figure><p>提示连接GitHub的22端口被拒绝，用浏览器访问Github发现正常访问，说明不是Github出了问题，怀疑可能是Github的22端口被屏蔽了，因此改用Github的443端口进行访问。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ vim ~/.ssh/config<br><br><span class="hljs-comment"># Add section below to it</span><br>Host github.com<br>  Hostname ssh.github.com<br>  Port 443<br></code></pre></td></tr></table></figure><p>通过修改SSH的config文件，让SSH在访问Github时使用443端口，再进行<code>git pull</code>操作发现可以正常下载数据。</p><hr><p>Tips：</p><ol><li>使用<code>ssh -T git@github.com</code>来测试和GitHub的网络通信是否正常，如果提示<code>Hi xxxxx! You've successfully authenticated, but GitHub does not provide shell access.</code> 就表示一切正常。</li><li><code>ssh -v</code>命令，<code>-v</code>表示verbose，会打出详细日志。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -vT git@github.com<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>error</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue中自定义变量、ref和readonly定义变量的区别</title>
    <link href="/2023/12/30/vue%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E3%80%81ref%E5%92%8Creadonly%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <url>/2023/12/30/vue%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E3%80%81ref%E5%92%8Creadonly%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<p>在由选项式API转向组合式API时，发现响应式数据的定义往往通过ref来实现，但是直接定义变量的方式也能够在页面中实现显示，而后又有readonly来进行变量定义的方式，因此实验了一下其中的区别。</p><h3 id="自定义变量">自定义变量</h3><p>使用自定义变量时直接进行定义即可<code>let customVal:number = 10</code></p><ol><li>自定义变量的值可以直接在模板中显示（包括文本和输入框等）</li><li>点击按钮改变自定义变量的值时，后台数据会发生变化，但页面不会刷新，即显示的还是原来的值</li><li>通过输入框改变值时（v-model绑定）可以将数值传输到后台数据并更改其值。</li></ol><p><img src="http://images.starnight.top/img/Pasted%20image%2020231231002900.png" alt=""></p><h3 id="ref定义变量">ref定义变量</h3><p>使用ref定义变量时需要使用ref()函数<code>let refVal:Ref&lt;number&gt; = ref(10)</code></p><ol><li>ref变量的值可以直接在模板中显示（包括文本和输入框等）</li><li>点击按钮改变自定义变量的值时，后台和页面数据都发生变化，触发监听器</li><li>通过输入框改变值时（v-model绑定）可以将数值传输到后台数据并更改其值，触发监听器</li></ol><blockquote><p>vue中同样可以使用reactive来定义响应式变量，不过reactive只能定义对象、数组等类型，而ref既可以接受对象类型又可以接受原始数据类型（number，string，boolean等），所以reactive相当于是ref的子集，ref在接受对象类型的时候内部也是通过reactive来实现。</p></blockquote><p><img src="http://images.starnight.top/img/Pasted%20image%2020231231003237.png" alt=""></p><h3 id="readonly定义对象">readonly定义对象</h3><p>使用readonly定义变量时需要使用readonly()函数<code>let readonlyVal:Readonly&lt;&#123;value:number&#125;&gt; = readonly(&#123;value:10&#125;)</code></p><ol><li>readonly变量的值可以直接在模板中显示，但只能作为文本显示，而不能投射到表单组件，即input等。</li><li>readonly变量只读，无法进行修改，后台试图修改readonly变量的操作会直接报错（编译时异常）</li><li>无法在输入框中正常显示也无法修改</li></ol><p><img src="https://images.starnight.top/img/Pasted%20image%2020231231004101.png" alt=""></p><h3 id="代码">代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> &#123; ref,readonly, <span class="hljs-title class_">Ref</span>, watch &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 自定义变量</span></span><br><span class="language-javascript"><span class="hljs-keyword">let</span> customVal = <span class="hljs-number">10</span>;</span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeCustomValValue</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">  customVal++;</span><br><span class="language-javascript">  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;info&#x27;</span>).<span class="hljs-property">innerText</span>=<span class="hljs-string">&quot;现在customVal的值为&quot;</span>+customVal;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"><span class="hljs-title function_">watch</span>(<span class="hljs-function">()=&gt;</span>customVal,<span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;customTip&#x27;</span>).<span class="hljs-property">innerText</span>=<span class="hljs-string">&quot;customVal的值发生变化&quot;</span>;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">//使用ref定义变量</span></span><br><span class="language-javascript"><span class="hljs-keyword">let</span> <span class="hljs-attr">refVal</span>:<span class="hljs-title class_">Ref</span>&lt;number&gt; = <span class="hljs-title function_">ref</span>(<span class="hljs-number">10</span>);</span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeRefValValue</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">  refVal.<span class="hljs-property">value</span>++;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"><span class="hljs-title function_">watch</span>(refVal,<span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;refTip&#x27;</span>).<span class="hljs-property">innerText</span>=<span class="hljs-string">&quot;refVal的值发生变化&quot;</span>;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">//使用readOnly定义变量</span></span><br><span class="language-javascript"><span class="hljs-keyword">let</span> <span class="hljs-attr">readonlyVal</span>:<span class="hljs-title class_">Readonly</span>&lt;&#123;<span class="hljs-attr">value</span>:number&#125;&gt; = <span class="hljs-title function_">readonly</span>(&#123;<span class="hljs-attr">value</span>:<span class="hljs-number">10</span>&#125;);</span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeReadOnlyValValue</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">  <span class="hljs-keyword">try</span>&#123;</span><br><span class="language-javascript">    readonlyVal.<span class="hljs-property">value</span>++;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript">  <span class="hljs-keyword">catch</span>(e)&#123;</span><br><span class="language-javascript">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;error&#x27;</span>).<span class="hljs-property">innerText</span>=e;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"><span class="hljs-title function_">watch</span>(readonlyVal,<span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;readonlyTip&#x27;</span>).<span class="hljs-property">innerText</span>=<span class="hljs-string">&quot;readonlyVal的值发生变化&quot;</span>;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>自定义变量<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeCustomValValue&quot;</span>&gt;</span><br>      修改数据<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;output&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>数据值为：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;customVal&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;customTip&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>ref定义变量<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeRefValValue&quot;</span>&gt;</span><br>      修改数据<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;output&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>数据值为：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;refVal&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;refTip&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>readOnly定义变量<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeReadOnlyValValue&quot;</span>&gt;</span><br>      修改数据<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;output&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>数据值为：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;readonlyVal&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;readonlyTip&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.container</span>&#123;</span><br><span class="language-css">  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#F1F1F1</span>;</span><br><span class="language-css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">95%</span>;</span><br><span class="language-css">  <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">  <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">  <span class="hljs-attribute">justify-content</span>: space-between;</span><br><span class="language-css">  <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span> <span class="hljs-number">20px</span>;</span><br><span class="language-css">  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.button</span>&#123;</span><br><span class="language-css">  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">20%</span>;</span><br><span class="language-css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">20%</span>;</span><br><span class="language-css">  <span class="hljs-attribute">height</span>: <span class="hljs-number">20%</span>;</span><br><span class="language-css">  <span class="hljs-attribute">background-color</span>: white;</span><br><span class="language-css">  <span class="hljs-attribute">border</span>: none;</span><br><span class="language-css">  <span class="hljs-attribute">box-shadow</span>:  <span class="hljs-number">0px</span> <span class="hljs-number">0px</span> <span class="hljs-number">15px</span> lightgray;</span><br><span class="language-css">  <span class="hljs-attribute">cursor</span>: pointer;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.button</span><span class="hljs-selector-pseudo">:hover</span>&#123;</span><br><span class="language-css">  <span class="hljs-attribute">background-color</span>: lightcyan;</span><br><span class="language-css">  <span class="hljs-attribute">transition</span>: background-color <span class="hljs-number">0.3s</span> ease-in-out;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.button</span><span class="hljs-selector-pseudo">:active</span> &#123;</span><br><span class="language-css">  <span class="hljs-attribute">background-color</span>: skyblue;</span><br><span class="language-css">  <span class="hljs-attribute">transition</span>: background-color <span class="hljs-number">0.3s</span> ease-in-out;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.output</span>&#123;</span><br><span class="language-css">  <span class="hljs-attribute">align-self</span>:self-end;</span><br><span class="language-css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">40%</span>;</span><br><span class="language-css">  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">  <span class="hljs-attribute">background-color</span>: white;</span><br><span class="language-css">  <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">  <span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="language-css">  <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">  <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS遍历JSON输出Mysql拆分JSON语句</title>
    <link href="/2023/11/10/JS%E9%81%8D%E5%8E%86JSON%E8%BE%93%E5%87%BAMysql%E6%8B%86%E5%88%86JSON%E8%AF%AD%E5%8F%A5/"/>
    <url>/2023/11/10/JS%E9%81%8D%E5%8E%86JSON%E8%BE%93%E5%87%BAMysql%E6%8B%86%E5%88%86JSON%E8%AF%AD%E5%8F%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="背景">背景</h3><p>数据库存储有这类JSON数据，希望在输出时将每个子项都单独输出并根据key值重命名</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs json">softtissue<span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>nasalBase<span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>Col_Sn_Ls<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>N_Prn_Sn<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>ZyR_Prn_ZyL<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>Sn_N_Pg<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>A_NPg<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>Col_Sn<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>Prn_Sn<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>AIR_AIL<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>AcR_AcL<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>other<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>upperLipAndOralnasalRegion<span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>Ls_E<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>A_A<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>Ls_U1<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>Chr_Ls_ChL<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>division<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>N_Pg_H<span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>other<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>frontalProfile<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>lateralProfile<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>facialSymmetry<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>chinDeviation<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>verbalLine<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>这样就会用到一个MySQL命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">JSON_UNQUOTE(JSON_EXTRACT(softtissue.nasalBase, &#x27;$.Col_Sn_Ls&#x27;)) AS &#x27;nasalBase_Col_Sn_Ls&#x27;,<br></code></pre></td></tr></table></figure><p>但是如果针对每一个属性都手写这个代码的话过于麻烦，因此考虑通过js遍历JSON，自动拼接生成此类语句</p><h3 id="代码">代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs js">str = <span class="hljs-string">&quot;&quot;</span>;<br><br><span class="hljs-comment">//驼峰转下划线</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">camelToUnderscore</span>(<span class="hljs-params">str</span>) &#123; <span class="hljs-keyword">return</span> str.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[A-Z]/g</span>, <span class="hljs-function"><span class="hljs-params">match</span> =&gt;</span> <span class="hljs-string">&#x27;_&#x27;</span> + match.<span class="hljs-title function_">toLowerCase</span>()); &#125;<br><br><span class="hljs-comment">//遍历最外层json的key值</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> softtissue)&#123;<br><span class="hljs-comment">//进入子json，遍历其key值</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> subkey <span class="hljs-keyword">in</span> softtissue[key])&#123;<br>    <span class="hljs-comment">//拼接文本，其中‘softtissue’为数据表名称</span><br>        str = str + <span class="hljs-string">&quot;JSON_UNQUOTE(JSON_EXTRACT(softtissue.&quot;</span> + <span class="hljs-title function_">camelToUnderscore</span>(key) + <span class="hljs-string">&quot;, &#x27;$.&quot;</span> + subkey + <span class="hljs-string">&quot;&#x27;)) AS &#x27;&quot;</span> + <span class="hljs-title function_">camelToUnderscore</span>(key) + <span class="hljs-string">&quot;_&quot;</span> + subkey + <span class="hljs-string">&quot;&#x27;,\n&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//格式化输出拼接后的文本</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str);<br><span class="hljs-comment">//得到的部分输出</span><br><span class="hljs-comment">//JSON_UNQUOTE(JSON_EXTRACT(softtissue.nasalBase, &#x27;$.Col_Sn_Ls&#x27;)) AS &#x27;nasalBase_Col_Sn_Ls&#x27;,</span><br><span class="hljs-comment">//JSON_UNQUOTE(JSON_EXTRACT(softtissue.nasalBase, &#x27;$.N_Prn_Sn&#x27;)) AS &#x27;nasalBase_N_Prn_Sn&#x27;,</span><br><span class="hljs-comment">//JSON_UNQUOTE(JSON_EXTRACT(softtissue.nasalBase, &#x27;$.ZyR_Prn_ZyL&#x27;)) AS &#x27;nasalBase_ZyR_Prn_ZyL&#x27;,</span><br><span class="hljs-comment">//JSON_UNQUOTE(JSON_EXTRACT(softtissue.nasalBase, &#x27;$.Sn_N_Pg&#x27;)) AS &#x27;nasalBase_Sn_N_Pg&#x27;,</span><br><span class="hljs-comment">//....</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>mysql</tag>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH端口转发</title>
    <link href="/2023/11/09/SSH%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    <url>/2023/11/09/SSH%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h3 id="背景">背景</h3><p>web部署在内网服务器上，而本机访问内网服务器首先需要通过堡垒机，再使用ssh连接内网服务器，但无法直接通过ip地址访问web页面，通过ssh进行端口转发来实现这一点。</p><h3 id="操作">操作</h3><p>首先登陆堡垒机，确保能够ssh连接到内网服务器</p><h4 id="ssh连接服务器">ssh连接服务器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh user@hostname -p xxxx<br><span class="hljs-meta prompt_"># </span><span class="language-bash">user为要登录的用户，hostname为主机ip或域名，通过-p来指定特定端口</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">示例</span><br>ssh root@127.0.0.1 -p 58759<br></code></pre></td></tr></table></figure><h4 id="配置ssh">配置ssh</h4><p>首先进入.ssh文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd .ssh<br></code></pre></td></tr></table></figure><p>查看是否存在config文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim config<br></code></pre></td></tr></table></figure><p>如果不存在则通过vim添加内容</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">Host</span> <span class="hljs-string">*</span><br><span class="hljs-attr">HostKeyAlgorithms</span> <span class="hljs-string">+ssh-rsa</span><br><span class="hljs-attr">KexAlgorithms</span> <span class="hljs-string">+diffie-hellman-group1-sha1</span><br></code></pre></td></tr></table></figure><p>config文件中添加的内容随具体情况而定，遇到<code>Unable to negotiate with 127.0.0.1 port 58759:no matching key exchange method found.Their offer:diffie-hellman-group1</code> 就添加<code>KexAlgorithms</code>参数，遇到<code>Unable to negotiate with XXX port : no matching host key type found. Their offer: ssh-rsa</code> 就添加<code>HostKeyAlgorithms</code>参数<br>之后就可以通过ssh命令连接服务器</p><h4 id="ssh端口转发">ssh端口转发</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh -f -N -L localhost:8088:127.0.0.1:8088 root@127.0.0.1 -p 58759<br></code></pre></td></tr></table></figure><p>这行命令是一个SSH端口转发的命令，用于建立本地端口转发，将本地端口8088上的流量通过SSH隧道传输到服务器127.0.0.1上的127.0.0.1主机的8088端口。（<code>localhost:8088</code>是本机端口，第一个<code>127.0.0.1:8088</code>是web页面的访问地址，第二个<code>127.0.0.1 -p 58759</code>是本机ssh连接内网服务器的地址和端口）</p><p>下面是每个选项和参数的解释：</p><ol><li><code>-f</code>: 这是一个SSH选项，它表示在后台运行SSH客户端。这意味着命令会立即返回，而SSH会在后台运行，维护端口转发。</li><li><code>-N</code>: 这也是SSH选项，它表示不执行任何远程命令。通常，SSH会连接到远程主机并执行一个shell或其他命令，但 <code>-N</code> 选项告诉SSH只创建连接而不执行远程命令。</li><li><code>-L localhost:12345:192.168.88.8:8888</code>: 这是本地端口转发的设置。它告诉SSH将本地主机的localhost（127.0.0.1）上的端口12345与远程主机10.20.20.20上的192.168.88.8的8888端口进行绑定。这意味着当您连接到本地主机的12345端口时，流量将通过SSH隧道传输到远程主机上的192.168.88.8的8888端口。</li><li><code>user@10.20.20.20</code>: 这是SSH连接的目标远程主机。<code>user</code>是远程主机上的用户名，<code>10.20.20.20</code>是远程主机的IP地址。</li><li><code>-p 22</code>: 这是SSH连接使用的端口号，通常是SSH默认的22端口。如果远程主机上的SSH服务器在不同的端口上运行，可以使用 <code>-p</code> 选项指定该端口号。</li></ol>]]></content>
    
    
    <categories>
      
      <category>服务器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>One-hot、Multi-hot</title>
    <link href="/2023/11/07/One-hot%EF%BC%8CMulti-hot/"/>
    <url>/2023/11/07/One-hot%EF%BC%8CMulti-hot/</url>
    
    <content type="html"><![CDATA[<p>one-hot 表示特征只能有一个1，无论最后编码的向量维度的维度多少，比如幼年，青年，中年，老年；</p><p><em>eg，小明是青年人。[0,1,0,0]</em></p><p>而multihot表示特征可以多选，多个1出现；比如性格特征：平和，严谨，乐观……；</p><p><em>eg：小明：是一个平和，乐观但粗心的人；[1,0,1]；</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 使用sklearn自带的编码器</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> LabelBinarizer,MultiLabelBinarizer<br>x = np.array([[<span class="hljs-string">&quot;A&quot;</span>],[<span class="hljs-string">&quot;B&quot;</span>],[<span class="hljs-string">&quot;C&quot;</span>],[<span class="hljs-string">&quot;D&quot;</span>],[<span class="hljs-string">&quot;A&quot;</span>]])<br>y = [[<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>],[<span class="hljs-number">2</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]]<br><br>LabelBinarizer().fit_transform(x)<br><span class="hljs-comment"># 输出</span><br>array([[<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br>       [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br>       [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>],<br>       [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>],<br>       [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>]])<br><br>MultiLabelBinarizer().fit_transform(y)<br><span class="hljs-comment"># 输出</span><br>array([[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>],<br>       [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br>       [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>],<br>       [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>],<br>       [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>]])<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>深度学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>projection head 映射头</title>
    <link href="/2023/11/07/Prejection%20Head/"/>
    <url>/2023/11/07/Prejection%20Head/</url>
    
    <content type="html"><![CDATA[<p>projection head 是一种在自监督学习中常用的技术。它是指在预训练模型的最后一层添加一个投影头（projection head），用于将模型的高维隐藏表示投影到低维空间中。通过这样的方式，可以将原始输入数据转换为更紧凑、更具有语义信息的表示。投影头的设计通常包括一个线性变换和一个非线性激活函数，它们帮助模型从原始数据中提取有用的特征。投影头的输出可以用于各种下游任务，如分类、聚类或生成等。</p><h4 id="Prejection-head">Prejection head</h4><p>Projection head 是指将模型的隐藏层特征投影到另一个向量空间中的一层神经网络。这个向量空间通常是一个低维空间，可以减少特征的维数并提高模型的效率。在自然语言处理中，projection head 通常用于将语言模型的隐藏层特征转换为具有特定语义含义的向量表示，例如将文本句子转换为情感极性向量。</p><h4 id="对比学习Prejection-head">对比学习Prejection head</h4><p>Projection head是对比学习（contrastive learning）中的一个重要概念。对比学习是一种无监督学习方法，通过最大化正样本（相似样本）之间的相似性，最小化负样本（不相似样本）之间的相似性来学习特征表示。而projection head则是对输入数据进行特征提取的组件。</p><p>在对比学习中，首先通过一个编码器（encoder）将输入数据映射到一个低维特征空间，这个编码器可以是一个卷积神经网络（CNN）或者一个自编码器（autoencoder）。然后，通过projection head对这些编码后的特征进行进一步处理，将其映射到另一个低维特征空间。这个映射过程可以通过全连接层、多层感知机（MLP）等方式实现。</p><p>projection head的作用是将编码器提取的特征进行降维和重组，以便更好地捕捉样本之间的差异。在对比学习中，通常会使用一种技术叫做正负样本对构建（positive-negative pair construction）。给定一个样本，它会被复制两次，分别作为正样本和负样本。然后，这两个样本分别经过编码器和projection head得到两组特征向量。通过比较正样本的特征向量和负样本的特征向量之间的相似度，可以计算出一个损失函数，用于优化模型的参数。</p><p>总结一下，projection head在对比学习中起到了==对特征进行降维和重组的作用==，它通过将编码器提取的特征映射到另一个低维特征空间，以便更好地区分正样本和负样本。</p>]]></content>
    
    
    <categories>
      
      <category>深度学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Zero-shot、Few-shot和One-shot</title>
    <link href="/2023/11/01/Zero-shot%E3%80%81Few-shot%E5%92%8COne-shot/"/>
    <url>/2023/11/01/Zero-shot%E3%80%81Few-shot%E5%92%8COne-shot/</url>
    
    <content type="html"><![CDATA[<h3 id="One-shot">One-shot</h3><p>公司门禁用了人脸识别，你只提供一张照片，门禁就能认识各个角度的你，这就是 one-shot。可以把 one-shot 理解为<strong>用 1 条数据 finetune 模型。</strong></p><h3 id="Zero-shot">Zero-shot</h3><p>即，利用已有的数据和知识，来推理辨认模型从没见过的数据，也就是“0条没见过的数据”</p><h4 id="例子：">例子：</h4><p>小明和爸爸，到了动物园，看到了马，然后爸爸告诉他，这就是马；之后，又看到了老虎，告诉他：“看，这种身上有条纹的动物就是老虎。”；最后，又带他去看了熊猫，对他说：“你看这熊猫是黑白色的。”然后，爸爸给小明安排了一个任务，让他在动物园里找一种他从没见过的动物，叫斑马，并告诉了小明有关于斑马的信息：“斑马有着马的轮廓，身上有像老虎一样的条纹，而且它像熊猫一样是黑白色的。”最后，小明根据爸爸的提示，在动物园里找到了斑马<br><img src="https://images.starnight.top/img/Pasted%20image%2020231101142939.png" alt=""></p><h4 id="定义：">定义：</h4><ol><li>有训练集数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>t</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_{tr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>及其标签<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mi>t</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Y_{tr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，包含了模型需要学习的类别（马、老虎、熊猫）</li><li>有测试集数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>t</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_{te}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>及其标签<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mi>t</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Y_{te}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，包含了模型需要识别的类别（斑马）</li><li>有训练集数据和测试集数据的描述<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>t</mi><mi>r</mi></mrow></msub><mtext>，</mtext><msub><mi>A</mi><mrow><mi>t</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{tr}，A_{te}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，将每个类别<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>∈</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">y_i \in Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，都表示成一个语义向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>∈</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">a_i \in A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>的形式，这个向量的每个维度都是一个具体的属性，例如有嘴巴，有尾巴，有眼睛…，当这个类包含这个属性时，该维度的值设为非零值<img src="https://images.starnight.top/img/Pasted%20image%2020231101144946.png" alt=""></li><li>希望使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>t</mi><mi>r</mi></mrow></msub><mtext>，</mtext><msub><mi>A</mi><mrow><mi>t</mi><mi>r</mi></mrow></msub><mtext>和</mtext><msub><mi>Y</mi><mrow><mi>t</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_{tr}，A_{tr}和Y_{tr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>来训练模型，然后希望模型能够根据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>t</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{te}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>来识别<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>t</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_{te}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，就是Zero-shot的目的</li></ol><h4 id="方法：">方法：</h4><ol><li>将图片数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>通过GoogleNet等模型提取图片特征数据，称之为特征空间</li><li>将类别的语义化表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>，称为语义空间</li><li>需要做的就是将特征空间映射到语义空间，或者将语义空间映射到特征空间，例如使用岭回归的方法</li><li>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>X</mi><mrow><mi>t</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_i \in X_{te}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>特征空间映射到语义空间后，计算离它最近的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>A</mi><mrow><mi>t</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_i \in A_{te}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则该样本对应的标签即为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>所对应的标签<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ol><h3 id="Few-shot">Few-shot</h3><p>few-shot即是因为Zero-shot的效果不尽人意，因此人为地标注了少量(few)优质数据加入训练以提高模型准确率。</p><hr><p><a href="https://www.zhihu.com/tardis/zm/art/34656727?source_id=1005">零次学习（Zero-Shot Learning）入门 (zhihu.com)</a><br><a href="https://vision.cs.uiuc.edu/attributes/">数据集案例Describing Objects by their Attributes (uiuc.edu)</a></p>]]></content>
    
    
    <categories>
      
      <category>深度学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>范数</title>
    <link href="/2023/11/01/%E8%8C%83%E6%95%B0/"/>
    <url>/2023/11/01/%E8%8C%83%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="范数">范数</h2><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">1</span></span></span></span>范数</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">1</span></span></span></span>范数表示向量元素的绝对值之和：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>1</mn></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">||x||_1=\sum_{i=1}^n|x_i|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><br>代码中可以通过如下实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.<span class="hljs-built_in">abs</span>(u).<span class="hljs-built_in">sum</span>()<br></code></pre></td></tr></table></figure><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">l2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">2</span></span></span></span>范数</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">l2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">2</span></span></span></span>范数表示向量元素平方和的平方根：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub><mo>=</mo><msqrt><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup></mrow></msqrt></mrow><annotation encoding="application/x-tex">||x||_2=\sqrt{\sum_{i=1}^n x_i^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.3027em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9373em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8973em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3027em;"><span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">l2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">2</span></span></span></span>范数常常省略下标2，也就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">||x||=||x||_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>代码中可以通过如下实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.norm(u)<br></code></pre></td></tr></table></figure><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span>范数</strong><br>对于矩阵而言，其<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>r</mi><mi>o</mi><mi>b</mi><mi>e</mi><mi>n</mi><mi>i</mi><mi>u</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">Frobenius</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">b</span><span class="mord mathnormal">e</span><span class="mord mathnormal">ni</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span></span></span></span>范数类似于向量的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">l2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">2</span></span></span></span>范数，是矩阵元素的平方和的平方根：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mi>F</mi></msub><mo>=</mo><msqrt><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow><mn>2</mn></msubsup></mrow></msqrt></mrow><annotation encoding="application/x-tex">||x||_F=\sqrt{\sum_{i=1}^m\sum_{j=1}^n x_{ij}^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.6708em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1692em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1292em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.88em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6708em;"><span></span></span></span></span></span></span></span></span><br>在代码中也同样通过norm()函数直接求得</p><h2 id="损失函数">损失函数</h2><p><strong>平方误差函数</strong><br>当样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的预测值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0191em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span>，其相应的真实标签为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">y^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0191em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span>时，平方误差可以定义为以下公式：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>l</mi><mi>i</mi></msup><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msup><mo>−</mo><msup><mi>y</mi><mi>i</mi></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">l^i(w,b)=\frac{1}{2}(\hat{y}^i-y^i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1247em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1247em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>]]></content>
    
    
    <categories>
      
      <category>深度学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue创建非引用类型的对象</title>
    <link href="/2023/11/01/Vue%E5%88%9B%E5%BB%BA%E9%9D%9E%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AF%B9%E8%B1%A1/"/>
    <url>/2023/11/01/Vue%E5%88%9B%E5%BB%BA%E9%9D%9E%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<h3 id="场景描述">场景描述</h3><p>在Vue的data中定义了一个对象，在将该对象传输给后端时需要做一些修改，因此新建了一个对象让他等于该对象，之后对新建的对象进行修改，此时会导致原有对象的属性也会改变。</p><p><strong>显示的页面</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>    姓名：&#123;&#123;user.name&#125;&#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>    年龄：&#123;&#123;user.age&#125;&#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;update&quot;</span>&gt;</span><br>    复制对象，修改内容<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>JS</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">user</span>:&#123;<br>        <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;李四&quot;</span>,<br>        <span class="hljs-attr">age</span>:<span class="hljs-number">17</span><br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">methods</span>:&#123;<br>    <span class="hljs-title function_">update</span>(<span class="hljs-params"></span>)&#123;<br>      <span class="hljs-keyword">let</span> newUser = <span class="hljs-variable language_">this</span>.<span class="hljs-property">user</span>;<br>      newUser.<span class="hljs-property">name</span> = <span class="hljs-string">&quot;张三&quot;</span>;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>显示效果</strong></p><p><img src="https://images.starnight.top/img/Pasted%20image%2020230520201502.png" alt=""></p><h3 id="问题描述">问题描述</h3><p>可以看到，在update方法中新设了一个对象，之后对该对象进行了修改，而呈现的结果是原对象仍然也发生了改变</p><p><img src="https://images.starnight.top/img/Pasted%20image%2020230520201634.png" alt=""></p><h3 id="问题解决">问题解决</h3><p>使用<code>JSON.parse()</code>和<code>JSON.stringify()</code>方法来创建对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> jsonStr = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(user);<br><span class="hljs-keyword">var</span> newUser = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(jsonStr);<br></code></pre></td></tr></table></figure><h3 id="拓展">拓展</h3><p>对于深拷贝和浅拷贝，以及该问题的其他实现方法（第三方库Lodash）参考文章<br><a href="https://www.cnblogs.com/hutuzhu/p/10119698.html">在vue中子组件修改props引发的对js深拷贝和浅拷贝的思考 - 沉默术士 - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mysql删除数据库及导入sql文件</title>
    <link href="/2023/08/21/Mysql%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%8A%E5%AF%BC%E5%85%A5sql%E6%96%87%E4%BB%B6/"/>
    <url>/2023/08/21/Mysql%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%8A%E5%AF%BC%E5%85%A5sql%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="添加数据库">添加数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create database xxxx;<br></code></pre></td></tr></table></figure><h3 id="删除数据库">删除数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop database xxxx;<br></code></pre></td></tr></table></figure><h3 id="读取sql文件">读取sql文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#进入mysql命令行<br>mysql -u root -p<br>#选中数据库<br>use xxxx;<br>#导入sql文件，定位到sql文件路径<br>source ~/~/xxxx.sql<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue跨组件v-model实现</title>
    <link href="/2023/05/20/Vue%E8%B7%A8%E7%BB%84%E4%BB%B6v-model%E5%AE%9E%E7%8E%B0/"/>
    <url>/2023/05/20/Vue%E8%B7%A8%E7%BB%84%E4%BB%B6v-model%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="官网实现方法">官网实现方法</h3><p>[Vue官网](<a href="https://cn.vuejs.org/guide/components/v-model.html">组件 v-model | Vue.js (vuejs.org)</a>)提供了跨组件间使用<code>v-model</code>进行双向绑定的方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--父组件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">CustomInput</span> <span class="hljs-attr">v-model:</span>&quot;<span class="hljs-attr">inputText</span>&quot; /&gt;</span><br><br><span class="hljs-comment">&lt;!--子组件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"> </span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123; </span><br><span class="language-javascript"><span class="hljs-attr">props</span>: [<span class="hljs-string">&#x27;modelValue&#x27;</span>], </span><br><span class="language-javascript"><span class="hljs-attr">emits</span>: [<span class="hljs-string">&#x27;update:modelValue&#x27;</span>] &#125; </span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;modelValue&quot;</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;$emit(&#x27;update:modelValue&#x27;, $event.target.value)&quot;</span> /&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure><p>即父组件通过<code>props</code>传递参数<code>modelValue</code>，在子组件中将其绑定给输入框的<code>value</code>属性，这样就可以在子组件中显示<code>modelValue</code>的值，即vue中的单向绑定<code>v-bind</code>，然后给输入框的<code>input</code>事件注册一个自定义事件，通过<code>$emit</code>来触发父组件中的预设事件，更新<code>modelValue</code>的值，从而实现双向绑定</p><p>这里的<code>modelValue</code>是默认值，可以通过给<code>v-model</code>指定参数来更改这个名字</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--父组件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">CustomInput</span> <span class="hljs-attr">v-model:title</span>=<span class="hljs-string">&quot;bookTitle&quot;</span> /&gt;</span><br><br><span class="hljs-comment">&lt;!--子组件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"> </span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123; </span><br><span class="language-javascript"><span class="hljs-attr">props</span>: [<span class="hljs-string">&#x27;title&#x27;</span>], </span><br><span class="language-javascript"><span class="hljs-attr">emits</span>: [<span class="hljs-string">&#x27;update:title&#x27;</span>] </span><br><span class="language-javascript">&#125; </span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;title&quot;</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;$emit(&#x27;update:title&#x27;, $event.target.value)&quot;</span> /&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="问题及解决办法">问题及解决办法</h3><p>在项目里，我的子组件中使用的不是原生的<code>input</code>组件，而是Element的<code>el-input</code>组件，在通过上述代码进行双向绑定时，可以实现想要的效果，但是在控制台会不停的报错，如下图所示<br><img src="https://images.starnight.top/img/vue_element_plus_error.png" alt=""><br>对此询问了ChatGPT，得到的解释是</p><blockquote><p>当在Vue中使用<code>el-input</code>组件进行跨组件的<code>v-model</code>绑定时，可能会在控制台中看到一些报错信息。这是因为<code>el-input</code>组件并不是Vue的官方组件，而是Element UI库中的组件。<br>Element UI的<code>el-input</code>组件本身并不支持使用<code>v-model</code>进行跨组件的双向绑定。它只是一个输入框组件，它的<code>value</code>属性用于接收输入框的值，而不是作为一个双向绑定的<code>v-model</code>属性。</p></blockquote><p>因此看来不能使用其value属性来进行传值，而对于方法中的<code>$event.target.value</code>的解释如下：</p><ul><li>在Vue中，<code>$event</code>是一个特殊的变量，用于访问触发事件时的事件对象。在事件处理方法中，可以通过<code>$event</code>来访问该事件对象，并获取相关的信息。</li><li><code>$event.target</code>表示事件的目标元素，即事件被触发时实际发生事件的DOM元素。对于输入框等表单元素，<code>$event.target</code>通常指向触发事件的输入框元素本身。</li><li><code>$event.target.value</code>表示目标元素的值。对于输入框元素，<code>value</code>属性表示输入框当前的值。通过<code>$event.target.value</code>可以获取输入框的值。</li></ul><p>也就是说<code>$event.target.value</code>即是修改后的数值，在项目中我传递过来的参数并不是一个简单的<code>String</code>值，而是一个<code>JSON</code>对象，同时在<code>el-input</code>中与该对象中的数值进行了<code>v-model</code>双向绑定，那么我直接将修改后的<code>JSON</code>对象作为数值回传即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--父组件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">BasicInfoComponent</span> <span class="hljs-attr">v-model:basicInfo</span>=<span class="hljs-string">&quot;basicInfo&quot;</span>/&gt;</span><br><br><span class="hljs-comment">&lt;!--子组件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">el-input</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;$emit(&#x27;update:basicInfo&#x27;,basicInfo)&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;basicInfo.age&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;</span><br><span class="language-javascript"><span class="hljs-attr">props</span>:[<span class="hljs-string">&#x27;basicInfo&#x27;</span>],</span><br><span class="language-javascript"><span class="hljs-attr">emits</span>:[<span class="hljs-string">&#x27;update:basicInfo&#x27;</span>]</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>烟草仓储管理系统开发笔记（六）</title>
    <link href="/2022/05/04/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/"/>
    <url>/2022/05/04/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1>简述</h1><p>好久没写笔记了，这段时间效率不是很高，中间的五一假期也没有推进进度，所以总体完成的内容不是很多，内容不多，遇到的问题却还不少💢数来这段时间主要完成的内容有：实现RecycleView中Item的添加、移动动画；重新完成了订单管理部分的界面设计；修改了库存管理部分的一些设计；正式引入的数据库，删去假数据；实现了图片的启动时加载；引入viewModel管理数据；完成了订单管理信息和库存信息的联动</p><h1>RecycleView中的Item动画</h1><p>首先时RecycleView中的添加删除Item时的动画，因为我每次添加删除数据都是从数据库获取，并且有个撤销操作，需要将数据插回到原来的位置，而这个位置不同的Item是不一样的，因此无法直接使用BRVAH提供的addData方法，此外，即使使用addData方法实现了表面的数据恢复，但由于数据库中使用的是insert方法，因此在数据库中的数据并没有插入到原有位置，而是插入到了最下方，这最终导致的问题是adapter中的数据和数据库中的数据不一致，直观的表现形式就是：“顺序为ABC，删除了B又撤销时，页面显示的为ABC，而实际的数据顺序是ACB，导致点击B Item时，显示的数据是C的。尝试了很多方法都没能实现，最后就采用setList方法重置数据，放弃动画了。</p><p>后来在查看新版本的BRV时发现其可以提供我想要的实现形式，于是进行了尝试，但最终没能成功，不过这次尝试也让我又去查看了一遍BRVAH的代码，因为我发现BRV中的这部分内容貌似是直接从BRVAH中继承来的，所以BRVAH中应该也提供了这种实现形式，最终我发现了其中DiffUtil部分的内容（中文版文档还是2.9版本的，其中也没有写相关内容，Wiki中就只有一个DiffUtil的链接，连一个字的介绍都没有==）最终通过该模块实现了我想要的实现形式</p><h2 id="1-新建自己的DiffCallback类">1. 新建自己的DiffCallback类</h2><p>以用户管理为例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserDiffCallback</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">DiffUtil</span>.ItemCallback&lt;User&gt; &#123;  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * Determine if it is the same item     * &lt;p&gt;  </span><br><span class="hljs-comment">     * 判断是否是同一个item  </span><br><span class="hljs-comment">     *     * <span class="hljs-doctag">@param</span> oldItem New data  </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> newItem old Data  </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span>  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">areItemsTheSame</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> User oldItem, <span class="hljs-meta">@NonNull</span> User newItem)</span> &#123;  <br>        <span class="hljs-keyword">return</span> oldItem.getId().equals(newItem.getId());  <br>    &#125;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * When it is the same item, judge whether the content has changed.     * &lt;p&gt;  </span><br><span class="hljs-comment">     * 当是同一个item时，再判断内容是否发生改变  </span><br><span class="hljs-comment">     *  </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> oldItem New data  </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> newItem old Data  </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span>  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">areContentsTheSame</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> User oldItem, <span class="hljs-meta">@NonNull</span> User newItem)</span> &#123;  <br>        <span class="hljs-keyword">return</span> oldItem.getUsername().equals(newItem.getUsername())  <br>                &amp;&amp; oldItem.getPassword().equals(newItem.getPassword())  <br>                &amp;&amp; oldItem.getPermission() == newItem.getPermission();  <br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure><p>该DiffCallback类用于判断数据是否发现了变化，即是否Diff了。</p><h2 id="2-为Adapter设置DiffCallback">2. 为Adapter设置DiffCallback</h2><p>为Adapter绑定DiffCallback类，即adapter中的数据根据那个DiffCallback类判断变化，实际代码就一句话</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//设置diffCallback  </span><br>adapter.setDiffCallback(<span class="hljs-keyword">new</span> <span class="hljs-title class_">UserDiffCallback</span>());<br></code></pre></td></tr></table></figure><h2 id="3-更新数据">3. 更新数据</h2><p>通过新的<code>setDiffNewData</code>方法来设置数据，而不再是<code>setList</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">userViewModel.getAllUserLive().observe(getActivity(), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Observer</span>&lt;List&lt;User&gt;&gt;() &#123;  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onChanged</span><span class="hljs-params">(List&lt;User&gt; users)</span> &#123;  <br>        <span class="hljs-keyword">if</span> (adapter.getData().size() == <span class="hljs-number">0</span>)  <br>            adapter.setNewInstance(users);  <br>        <span class="hljs-comment">//通过setDiffNewData来通知adapter数据发生变化，并保留动画  </span><br>        adapter.setDiffNewData(users);  <br>        adapter.setList(users);  <br>    &#125;  <br>&#125;);<br></code></pre></td></tr></table></figure><p>这里的setList方法是我在Adapter进行重写，不再刷新数据，只是将users数组传递到Adapter中而已（这一个漏网之鱼，后面的类都改成setMyList了==）</p><p>这样就恢复了添加删除Item时的动画。</p><h1>订单管理</h1><p>之前的订单管理的设计思路是可以展开的条目，即列表中显示的为简单的主要信息，点击条目时下方展开一个新的视图，显示详细的信息，那会儿我花了好长的时间来实现，虽然最终成了，但终究还是有点小问题，而且虽然硬盘损坏，这部分内容也都没了。于是我又想着能不能有更好的呈现方式，后来看到淘宝的购物车界面，发现了里面的一个个购物记录卡片中也显示了很多的信息，也符合”订单“这种设定，于是就想着能不能做个类似淘宝购物车的卡片用于呈现数据。</p><h2 id="主界面">主界面</h2><p><img src="https://images.starnight.top/img/20220504233946.png" alt=""></p><p>卡片中去掉了各种提示标签，像“订单号：”，“用户名：”这种，显得臃肿，改为直接显示数据，通过颜色的明暗来分主次。其中的状态框，根据订单的当前状态不同，有不同的显示效果，更加直观地展示订单的进度。采购订单分为四个状态：申请中、已拒绝、运输中、已完成。销售订单分为五个状态：申请中、待发货、已拒绝、运输中、已完成。订单管理界面的整体框架跟其他页面一致，只是RecycleView中的Item样式不同而已。<br><img src="https://images.starnight.top/img/20220504234343.png" alt=""></p><h2 id="添加对话框">添加对话框</h2><p>添加订单的对话框中就是输入一些基本信息<br><img src="https://images.starnight.top/img/20220504234518.png" alt=""></p><p>其中经办人信息默认锁定为当前用户，不允许更改，采购日期设定为当天，用户选择购买的原料名称、原料型号、供货商以及数量和价格，其余信息不再此时添加。其中的名称和型号的下拉框采用了二级联动，即当用户选择完原料名称后，根据名称查询数据库得到该名称下的型号列表，将型号列表填充到型号下拉框中，这里也遇到了一些的<a href="obsidian://open?vault=Obsidian&amp;file=E%20-%20Output%2F%E6%AF%95%E8%AE%BE%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0%2FAndroid%20Spinner%E4%BA%8C%E7%BA%A7%E8%81%94%E5%8A%A8">问题</a>。</p><p>在点击确定后便向数据库中添加一条采购订单记录，订单状态为”申请中“，等待管理员审核。</p><h2 id="修改对话框">修改对话框</h2><p><img src="https://images.starnight.top/img/20220504235328.png" alt=""></p><p>在修改对话框中，订单信息显示得更加完整，在此处用户可以修改上述的基本信息，但入库日期和管理员批注无法修改，入库日期等待库存管理中入库时更新，管理员批注只有管理员可以操作。此外，在Adapter中根据订单状态进行了判断，如果订单状态是申请中和已拒绝，则ok按钮显示的文本是”重新提交“，实现的功能是将订单状态修改为申请中，重新进行申请，如果订单状态是运输中和已完成，则ok按钮显示的文本是”确定“，此时用户不能修改订单内容。</p><h1>库存管理</h1><p>库存管理部分相对于之前所完成的内容没有太多的改动，主要就是工具栏的改动。<br>发现了一个设计的致命漏洞💣例如产品，只提供了确认订单的功能，也就是产品只有出而没有入，哪怕只是增加库存都不行😑，同理，原料只有入而没有出，库存只会越积越多。就非常地不合理。所以将确认订单按钮改成了入库和出库。<br><img src="https://images.starnight.top/img/20220505105457.png" alt=""></p><h2 id="产品部分">产品部分</h2><p>在产品部分，点击入库时只需要选择产品，并填写数量和存放区域即可，点击确认后库存数量便增加对应的量。而出库时，则是选择“待发货”状态的订单，读取订单信息并显示在对话框中，设定出库时间，当点击确定时，从库存数量中减去订单所需的产品数，在运输中数量中加上订单的产品数，同时将销售订单界面中对应的订单项的状态改为“运输中”（即联动部分内容）<br><img src="https://images.starnight.top/img/20220505105821.png" alt=""></p><p><img src="https://images.starnight.top/img/20220505105850.png" alt=""></p><h2 id="原料部分">原料部分</h2><p>原料部分则和产品部分相反，原料部分的出库部分比较简单，就是要出库的原料以及出库数量即可，点击确认后库存数量便减去对应的量。入库部分则对应订单管理，选择“运输中”状态的订单，读取订单信息并显示在对话框中，设定入库时间和存放区域，点击确定时，便从运输中数量中减去对应的原料数，并在库存数量中加上对应的量，同时将采购订单中对应的订单项状态修改为“已完成”<br><img src="https://images.starnight.top/img/20220505110230.png" alt=""></p><p><img src="https://images.starnight.top/img/20220505110351.png" alt=""></p><h1>Room、viewModel</h1><p>Room数据表设计大体和<a href="obsidian://open?vault=Obsidian&amp;file=E%20-%20Output%2F%E6%AF%95%E8%AE%BE%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0%2F%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89">第一部分</a>类似，添加了几个字段，例如产品的图片地址等，这里不写了。主要还是整个Room数据的流程。</p><h2 id="1-创建Entity、Dao、Database">1. 创建Entity、Dao、Database</h2><p>这些部分内容都在<a href="obsidian://open?vault=Obsidian&amp;file=E%20-%20Output%2F%E6%AF%95%E8%AE%BE%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0%2F%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89">第一部分</a>完成了。</p><h2 id="2-创建ViewModel类">2. 创建ViewModel类</h2><p>所有对页面数据的访问全都放在ViewModel类中，在Fragment中调用ViewModel中的方法来对数据进行操作。在ViewModel中存储一个对应的Dao对象，通过调用dao中的方法来对数据库进行操作，同时在ViewModel中实现部分多线程，因为对数据库的操作不能在主线程中执行。<br>以ProductViewModel为例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductViewModel</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AndroidViewModel</span> &#123;  <br>    <span class="hljs-keyword">private</span> ProductDao dao;  <br>    <span class="hljs-keyword">private</span> LiveData&lt;List&lt;Product&gt;&gt; listLive;  <br>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ProductViewModel</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> Application application)</span> &#123;  <br>        <span class="hljs-built_in">super</span>(application);  <br>        dao = TestDatabase.Companion.getINSTANCE(application).productDao();  <br>        listLive = dao.getAllProduct();  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insertProduct</span><span class="hljs-params">(Product... products)</span> &#123;  <br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProductViewModel</span>.InsertAsyncTask(dao).execute(products);  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">updateProduct</span><span class="hljs-params">(Product... products)</span> &#123;  <br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProductViewModel</span>.UpdateAsyncTask(dao).execute(products);  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">deleteProduct</span><span class="hljs-params">(Product... products)</span> &#123;  <br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProductViewModel</span>.DeleteAsyncTask(dao).execute(products);  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> List&lt;String&gt; <span class="hljs-title function_">getProductNameList</span><span class="hljs-params">()</span>&#123;  <br>        <span class="hljs-keyword">return</span> dao.getProductNameList();  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> List&lt;String&gt; <span class="hljs-title function_">getProductModelListByName</span><span class="hljs-params">(String name)</span>&#123;  <br>        <span class="hljs-keyword">return</span> dao.getProductModelListByName(name);  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> Double <span class="hljs-title function_">getPriceByModel</span><span class="hljs-params">(String model)</span>&#123;  <br>        <span class="hljs-keyword">return</span> dao.getProductByModel(model).getPrice();  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> Product <span class="hljs-title function_">getProductByModel</span><span class="hljs-params">(String model)</span>&#123;<span class="hljs-keyword">return</span> dao.getProductByModel(model);&#125;  <br>  <br>    <span class="hljs-keyword">public</span> LiveData&lt;List&lt;Product&gt;&gt; <span class="hljs-title function_">getAllProductLive</span><span class="hljs-params">()</span> &#123;  <br>        <span class="hljs-keyword">return</span> listLive;  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> List&lt;Product&gt; <span class="hljs-title function_">getAllProductNoLive</span><span class="hljs-params">()</span>&#123;  <br>        <span class="hljs-keyword">return</span> dao.getAllProductNoLive();  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InsertAsyncTask</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AsyncTask</span>&lt;Product, Void, Void&gt; &#123;  <br>        <span class="hljs-keyword">private</span> ProductDao dao;  <br>  <br>        <span class="hljs-keyword">public</span> <span class="hljs-title function_">InsertAsyncTask</span><span class="hljs-params">(ProductDao dao)</span> &#123;  <br>            <span class="hljs-built_in">this</span>.dao = dao;  <br>        &#125;  <br>  <br>        <span class="hljs-meta">@Override</span>  <br>        <span class="hljs-keyword">protected</span> Void <span class="hljs-title function_">doInBackground</span><span class="hljs-params">(Product... products)</span> &#123;  <br>            <span class="hljs-keyword">try</span> &#123;  <br>                dao.insertProduct(products);  <br>                PopTip.show(<span class="hljs-string">&quot;添加成功&quot;</span>);  <br>            &#125; <span class="hljs-keyword">catch</span> (Exception exception) &#123;  <br>                exception.printStackTrace();  <br>                PopTip.show(<span class="hljs-string">&quot;添加出错&quot;</span>);  <br>            &#125;  <br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;  <br>        &#125;  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UpdateAsyncTask</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AsyncTask</span>&lt;Product, Void, Void&gt; &#123;  <br>        <span class="hljs-keyword">private</span> ProductDao dao;  <br>  <br>        <span class="hljs-keyword">public</span> <span class="hljs-title function_">UpdateAsyncTask</span><span class="hljs-params">(ProductDao dao)</span> &#123;  <br>            <span class="hljs-built_in">this</span>.dao = dao;  <br>        &#125;  <br>  <br>        <span class="hljs-meta">@Override</span>  <br>        <span class="hljs-keyword">protected</span> Void <span class="hljs-title function_">doInBackground</span><span class="hljs-params">(Product... products)</span> &#123;  <br>            <span class="hljs-keyword">try</span> &#123;  <br>                dao.updateProduct(products);  <br>                PopTip.show(<span class="hljs-string">&quot;修改成功&quot;</span>);  <br>            &#125; <span class="hljs-keyword">catch</span> (Exception exception) &#123;  <br>                exception.printStackTrace();  <br>                PopTip.show(<span class="hljs-string">&quot;修改出错&quot;</span>);  <br>            &#125;  <br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;  <br>        &#125;  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DeleteAsyncTask</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AsyncTask</span>&lt;Product, Void, Void&gt; &#123;  <br>        <span class="hljs-keyword">private</span> ProductDao dao;  <br>  <br>        <span class="hljs-keyword">public</span> <span class="hljs-title function_">DeleteAsyncTask</span><span class="hljs-params">(ProductDao dao)</span> &#123;  <br>            <span class="hljs-built_in">this</span>.dao = dao;  <br>        &#125;  <br>  <br>        <span class="hljs-meta">@Override</span>  <br>        <span class="hljs-keyword">protected</span> Void <span class="hljs-title function_">doInBackground</span><span class="hljs-params">(Product... products)</span> &#123;  <br>            dao.deleteProduct(products);  <br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;        <br>        &#125;  <br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure><p>因为<code>getAllProductLive</code>方法返回的LiveData类型的数据，所以系统在底层已经实现了子线程的操作，本身就是线程安全的，所以不需要再自己实现，而Insert等方法就需要自己实现，这里使用AsyncTask(虽然已经被弃用了)，自定义对应的操作类，继承AsyncTask，在构造方法中传入dao对象，在doInBackground方法中执行对应的操作。然后ViewModel中提供一个公共方法供外部调用，在方法中新建操作类并执行其操作。<br><strong>错误处理</strong><br>在Dao的Insert等方法中添加注解<code>@Throws(Exception::class)</code>，通过注解来抛出错误，在doInBackground中捕获错误并做出对应的操作。</p><h2 id="3-在Fragment中使用基础增删改查方法">3. 在Fragment中使用基础增删改查方法</h2><p>在Fragment中首先声明viewModel对象，然后在onViewCreated方法中，通过ViewModelProvider对viewModel进行初始化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">ProductViewModel viewModel;<br>....<br><span class="hljs-comment">//在onViewCreated方法中初始化</span><br>viewModel = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ViewModelProvider</span>(<span class="hljs-built_in">this</span>).get(ProductViewModel.class);<br></code></pre></td></tr></table></figure><p>接下来当需要对数据进行修改时调用viewModel提供的公共方法即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Product</span> <span class="hljs-variable">product</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Product</span>(name,model,image,price,usedMaterial);  <br>viewModel.insertProduct(product);<br></code></pre></td></tr></table></figure><h2 id="4-在Fragment中使用非基础增删改查方法">4. 在Fragment中使用非基础增删改查方法</h2><p>根据需求不同，我们往往需要查询不同的数据，而不是只有返回全部数据的方法。例如在上述的“<a href="obsidian://open?vault=Obsidian&amp;file=E%20-%20Output%2F%E6%AF%95%E8%AE%BE%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0%2FAndroid%20Spinner%E4%BA%8C%E7%BA%A7%E8%81%94%E5%8A%A8">Spinner二级联动</a>”中，就需要先查询所有的产品名称，再根据名称查询型号列表。所以我们需要在Dao中添加对应的方法</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Query(<span class="hljs-string">&quot;SELECT name FROM product GROUP BY name&quot;</span>)</span>  <br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">getProductNameList</span><span class="hljs-params">()</span></span>:List&lt;String&gt;  <br>  <br><span class="hljs-meta">@Query(<span class="hljs-string">&quot;SELECT model FROM product WHERE name=:name&quot;</span>)</span>  <br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">getProductModelListByName</span><span class="hljs-params">(name:<span class="hljs-type">String</span>)</span></span>:List&lt;String&gt;  <br>  <br><span class="hljs-meta">@Query(<span class="hljs-string">&quot;SELECT * FROM product WHERE model=:model&quot;</span>)</span>  <br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">getProductByModel</span><span class="hljs-params">(model:<span class="hljs-type">String</span>)</span></span>:Product<br></code></pre></td></tr></table></figure><p>此处返回的数据不再是LiveData，就需要自己实现子线程查询，而这个通过viewModel中的AsyncTask又似乎不能实现，我还不知道怎么能通过viewModel中的AsyncTask向Fragment传递数据，所以最后还是在Fragment中采用New Thread的形式来执行这些方法，并赋值给Fragment中对应的变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;  <br>        productNameList = productViewModel.getProductNameList();  <br>        customerList = customerViewModel.getNameList();  <br>    &#125;  <br>&#125;).start();<br></code></pre></td></tr></table></figure><h1>图片的启动时加载</h1><p>该部分内容可见<a href="obsidian://open?vault=Obsidian&amp;file=E%20-%20Output%2F%E6%AF%95%E8%AE%BE%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0%2FAndroid%E8%AF%BB%E5%8F%96%E7%9B%B8%E5%86%8C%E5%9B%BE%E7%89%87%E5%B9%B6%E6%98%BE%E7%A4%BA">Android读取相册图片并显示</a></p><h1>订单管理信息和库存信息联动</h1><p>要实现在订单信息管理界面中修改库存信息，则需要在订单信息管理的Adapter中传入库存信息的ViewModel类，然后在Adapter中调用库存信息的ViewModel中的对应的方法即可。同理在库存信息中修改订单状态也需要在库存信息页面中传入订单的ViewModel，并修改订单的入\出库时间和订单状态，然后调用ViewModel中的更新方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">order[<span class="hljs-number">0</span>].setState(SaleOrder.STATE_DELIVERY);  <br>order[<span class="hljs-number">0</span>].setDeliveryDate(deliveryDate);  <br>saleOrderViewModel.updateSaleOrder(order);  <br>  <br>inventory[<span class="hljs-number">0</span>].setHostCount(inventory[<span class="hljs-number">0</span>].getHostCount()-count);  <br>inventory[<span class="hljs-number">0</span>].setDeliveryCount(inventory[<span class="hljs-number">0</span>].getDeliveryCount()+count);  <br>viewModel.updateInventory(inventory[<span class="hljs-number">0</span>]);<br></code></pre></td></tr></table></figure><h1>遇到的问题</h1><h2 id="Only-the-original-thread-that-created-a-view-hierarchy-can-touch-its-views">Only the original thread that created a view hierarchy can touch its views.</h2><p>这里的报错原因是在子线程中直接操作UI，还是Spinner二级联动中出现的问题，因为需要根据第一个Spinner中的名称来查询型号列表并填充到第二个Spinner中，所以我直接开了子线程执行查询和填充操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;  <br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> spinnerName.getSelectedItem().toString();  <br>        materialModelList =  materialViewModel.getMaterialModelListByName(name);<br>        ArrayAdapter&lt;String&gt; modelAdapter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayAdapter</span>&lt;String&gt;(getContext(), com.lihang.R.layout.support_simple_spinner_dropdown_item,modelList);  <br>spinnerModel.setAdapter(modelAdapter);   <br>    &#125;  <br>&#125;).start();<br></code></pre></td></tr></table></figure><p>这里我直接通过<code>spinnerModel.setAdapter()</code>对UI进行了操作，所以报了这个错（不知为啥我之前这么用也没报错==）<br><strong>解决方法</strong><br>使用Handler来对UI进行操作，在子线程中运行完成时通过Message来传递数据给Handler，Handler接收到信息后更新UI</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Handler</span> <span class="hljs-variable">mHandler</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Handler</span>(Looper.myLooper())&#123;  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleMessage</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> Message msg)</span> &#123;  <br>        <span class="hljs-built_in">super</span>.handleMessage(msg);  <br>        <span class="hljs-keyword">if</span>(msg.what == SET_SECOND_SPINNER)&#123;  <br>            List&lt;String&gt; modelList = msg.getData().getStringArrayList(<span class="hljs-string">&quot;modelList&quot;</span>);  <br>            ArrayAdapter&lt;String&gt; modelAdapter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayAdapter</span>&lt;String&gt;(getContext(), com.lihang.R.layout.support_simple_spinner_dropdown_item,modelList);  <br>            spinnerModel.setAdapter(modelAdapter);  <br>        &#125;  <br>    &#125;  <br>&#125;;  <br>spinnerName.setOnItemSelectedListener(<span class="hljs-keyword">new</span> <span class="hljs-title class_">AdapterView</span>.OnItemSelectedListener() &#123;  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onItemSelected</span><span class="hljs-params">(AdapterView&lt;?&gt; adapterView, View view, <span class="hljs-type">int</span> i, <span class="hljs-type">long</span> l)</span> &#123;  <br>        materialModelList.clear();  <br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;  <br>            <span class="hljs-meta">@Override</span>  <br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;  <br>                <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> spinnerName.getSelectedItem().toString();  <br>                materialModelList =  materialViewModel.getMaterialModelListByName(name);  <br>                <span class="hljs-type">Message</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> Message.obtain();  <br>                message.what = SET_SECOND_SPINNER;;  <br>                <span class="hljs-type">Bundle</span> <span class="hljs-variable">bundle</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Bundle</span>();  <br>                bundle.putStringArrayList(<span class="hljs-string">&quot;modelList&quot;</span>, (ArrayList&lt;String&gt;) materialModelList);  <br>                message.setData(bundle);  <br>                mHandler.sendMessage(message);  <br>            &#125;  <br>        &#125;).start();  <br>    &#125;  <br>  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onNothingSelected</span><span class="hljs-params">(AdapterView&lt;?&gt; adapterView)</span> &#123; &#125;  <br>&#125;);<br></code></pre></td></tr></table></figure><p>在使用时发现Hanlder被弃用了==，于是查询有没有什么替代，发现直接弃用了Handler的无参构造函数，只要直接指定Looper对象就行了。</p><ul><li>在主线程内运行，指定为主线程的Looper</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Handler</span> <span class="hljs-variable">mhandler</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Handler</span>(Looper.getMainLooper());<br></code></pre></td></tr></table></figure><ul><li>在当前线程内运行，指定为当前线程的Looper</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Handler</span> <span class="hljs-variable">mhandler</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Handler</span>(Looper.myLooper());<br></code></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/BruceZong/article/details/83964218">Android常见报错之 - Only the original thread that created a view hierarchy can touch its views</a><br><a href="https://blog.csdn.net/John_Lenon/article/details/124529515">Android Handler被弃用，那么以后怎么使用Handler，或者类似的功能</a></p></blockquote><h1>ToDo</h1><ul><li>[ ]  登录注册界面</li><li>[ ]  报表分析界面</li><li>[ ]  管理员的权限鉴别</li><li>[ ]  模糊搜索功能</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android Spinner二级联动</title>
    <link href="/2022/05/04/Android%20Spinner%E4%BA%8C%E7%BA%A7%E8%81%94%E5%8A%A8/"/>
    <url>/2022/05/04/Android%20Spinner%E4%BA%8C%E7%BA%A7%E8%81%94%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>遇到一个需求是两个Spinner的联动，第二个Spinner根据第一个Spinner选择的数据来修改内容。更常见的例子就是省市的选择，选中一个省份，再根据选中的省份显示对应的城市列表。<br>我这里则是名称和型号的联动选择，首先选中一个产品名称，再根据选中的产品名显示对应的型号列表。在网上看到的例子中的数据都是程序中直接定义的，而我这里的数据是从数据库中查询得到的，因此又多了一个子线程的内容。</p><h2 id="1-Spinner的设置">1. Spinner的设置</h2><p>也没啥好设置的，就是xml文件中放置两个Spinner</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">TextView</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/textViewNameLabel&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;@string/material_fragment_name&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:textAppearance</span>=<span class="hljs-string">&quot;@style/font_family_pingfang_black&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;20sp&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintBottom_toTopOf</span>=<span class="hljs-string">&quot;@+id/guideline47&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintStart_toStartOf</span>=<span class="hljs-string">&quot;@+id/guideline60&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintTop_toTopOf</span>=<span class="hljs-string">&quot;@+id/guideline47&quot;</span> /&gt;</span>  <br>  <br><span class="hljs-tag">&lt;<span class="hljs-name">Spinner</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/spinnerName&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;0dp&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;30dp&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintBottom_toTopOf</span>=<span class="hljs-string">&quot;@+id/guideline47&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintEnd_toStartOf</span>=<span class="hljs-string">&quot;@+id/guideline61&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintStart_toEndOf</span>=<span class="hljs-string">&quot;@+id/textView2&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintTop_toTopOf</span>=<span class="hljs-string">&quot;@+id/guideline47&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">tools:ignore</span>=<span class="hljs-string">&quot;TouchTargetSizeCheck&quot;</span> /&gt;</span>  <br>  <br><span class="hljs-tag">&lt;<span class="hljs-name">TextView</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/textViewModelLabel&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;@string/material_fragment_model&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:textAppearance</span>=<span class="hljs-string">&quot;@style/font_family_pingfang_black&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;20sp&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintBottom_toTopOf</span>=<span class="hljs-string">&quot;@+id/guideline72&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintStart_toStartOf</span>=<span class="hljs-string">&quot;@+id/guideline60&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintTop_toTopOf</span>=<span class="hljs-string">&quot;@+id/guideline72&quot;</span> /&gt;</span>  <br>  <br><span class="hljs-tag">&lt;<span class="hljs-name">Spinner</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/spinnerModel&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;@style/mySpinnerItemStyle&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;0dp&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;30dp&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:theme</span>=<span class="hljs-string">&quot;@style/mySpinnerItemStyle&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintBottom_toTopOf</span>=<span class="hljs-string">&quot;@+id/guideline72&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintEnd_toStartOf</span>=<span class="hljs-string">&quot;@+id/guideline61&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintStart_toEndOf</span>=<span class="hljs-string">&quot;@+id/textView11&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">app:layout_constraintTop_toTopOf</span>=<span class="hljs-string">&quot;@+id/guideline72&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">tools:ignore</span>=<span class="hljs-string">&quot;TouchTargetSizeCheck&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>显示效果如下<br><img src="https://images.starnight.top/img/20220505121353.png" alt=""></p><h2 id="2-查询名称列表">2. 查询名称列表</h2><p>因为安卓中不能在主线程中访问数据库，所以新开一个线程来进行数据的查询，首先查询名称列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;  <br>        productNameList = productViewModel.getProductNameList();  <br>    &#125;  <br>&#125;).start();<br></code></pre></td></tr></table></figure><p>在程序初始化中即查询名称列表，并赋值给提前声明的变量。</p><h2 id="3-填充名称Spinner">3. 填充名称Spinner</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">spinnerName = v.findViewById(R.id.spinnerName);  <br>spinnerModel = v.findViewById(R.id.spinnerModel);  <br>  <br>ArrayAdapter&lt;String&gt; nameAdapter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayAdapter</span>&lt;String&gt;(getContext(), com.lihang.R.layout.support_simple_spinner_dropdown_item,productNameList);  <br>  <br>spinnerName.setAdapter(nameAdapter);  <br></code></pre></td></tr></table></figure><p>由于型号对应的下拉框还没有数据，所以我们只声明了其Adapter，先不进行填充</p><h2 id="4-填充型号Spinner">4. 填充型号Spinner</h2><p>首先给名称Spinner添加一个选中项变化的观察者，在观察者中，每当选中项发生变化，便根据名称查询型号，并填充到型号Spinner中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java">spinnerName.setOnItemSelectedListener(<span class="hljs-keyword">new</span> <span class="hljs-title class_">AdapterView</span>.OnItemSelectedListener() &#123;  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onItemSelected</span><span class="hljs-params">(AdapterView&lt;?&gt; adapterView, View view, <span class="hljs-type">int</span> i, <span class="hljs-type">long</span> l)</span> &#123;  <br>        materialModelList.clear();  <br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;  <br>            <span class="hljs-meta">@Override</span>  <br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;  <br>                <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> spinnerName.getSelectedItem().toString();  <br>productModelList =  productViewModel.getProductModelListByName(name);<br>                ArrayAdapter&lt;String&gt; modelAdapter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayAdapter</span>&lt;String&gt;(getContext(), com.lihang.R.layout.support_simple_spinner_dropdown_item,modelList);  <br>spinnerModel.setAdapter(modelAdapter);<br>            &#125;  <br>        &#125;).start();  <br>    &#125;  <br>  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onNothingSelected</span><span class="hljs-params">(AdapterView&lt;?&gt; adapterView)</span> &#123; &#125;  <br>&#125;);<br></code></pre></td></tr></table></figure><p>一开始是这么写的，但是系统报了一个错误，<code>Only the original thread that created a view hierarchy can touch its views.</code>，即不能在子线程中操作UI，这里我在子线程中使用<code>SpinnerModel.setAdapter()</code>方法直接操作了UI，所以会报错，于是就需要一个Handler，在Handler中对UI进行操作，而在子线程中则进行查询操作，查询完毕后通过Message将数据传递给Handler，由Handler重新填充型号下拉框。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Handler</span> <span class="hljs-variable">mHandler</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Handler</span>(Looper.myLooper())&#123;  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleMessage</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> Message msg)</span> &#123;  <br>        <span class="hljs-built_in">super</span>.handleMessage(msg);  <br>        <span class="hljs-keyword">if</span>(msg.what == <span class="hljs-number">1</span>)&#123;  <br>            List&lt;String&gt; modelList = msg.getData().getStringArrayList(<span class="hljs-string">&quot;modelList&quot;</span>);  <br>            ArrayAdapter&lt;String&gt; modelAdapter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayAdapter</span>&lt;String&gt;(getContext(), com.lihang.R.layout.support_simple_spinner_dropdown_item,modelList);  <br>            spinnerModel.setAdapter(modelAdapter);  <br>        &#125;  <br>    &#125;  <br>&#125;;  <br>spinnerName.setOnItemSelectedListener(<span class="hljs-keyword">new</span> <span class="hljs-title class_">AdapterView</span>.OnItemSelectedListener() &#123;  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onItemSelected</span><span class="hljs-params">(AdapterView&lt;?&gt; adapterView, View view, <span class="hljs-type">int</span> i, <span class="hljs-type">long</span> l)</span> &#123;  <br>        productModelList.clear();  <br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;  <br>            <span class="hljs-meta">@Override</span>  <br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;  <br>                <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> spinnerName.getSelectedItem().toString();  <br>                productModelList =  productViewModel.getProductModelListByName(name);  <br>                <span class="hljs-type">Message</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> Message.obtain();  <br>                message.what = <span class="hljs-number">1</span>;;  <br>                <span class="hljs-type">Bundle</span> <span class="hljs-variable">bundle</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Bundle</span>();  <br>                bundle.putStringArrayList(<span class="hljs-string">&quot;modelList&quot;</span>, (ArrayList&lt;String&gt;) productModelList);  <br>                message.setData(bundle);  <br>                mHandler.sendMessage(message);  <br>            &#125;  <br>        &#125;).start();  <br>    &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>安卓</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android读取相册图片并显示</title>
    <link href="/2022/05/03/Android%E8%AF%BB%E5%8F%96%E7%9B%B8%E5%86%8C%E5%9B%BE%E7%89%87%E5%B9%B6%E6%98%BE%E7%A4%BA/"/>
    <url>/2022/05/03/Android%E8%AF%BB%E5%8F%96%E7%9B%B8%E5%86%8C%E5%9B%BE%E7%89%87%E5%B9%B6%E6%98%BE%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="Android根据Uri访问图片">Android根据Uri访问图片</h2><p>在新的Android版本中，<code>startActivityForResult</code>方法被启用了，取而代之的是<code>registerForActivityResult</code>方法，<code>registerForActivityResult</code>方法需要在Activity中注册。<br><strong>注册</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> &#123;  <br>    <span class="hljs-built_in">super</span>.onCreate(savedInstanceState);  <br>    intentActivityResultLauncher = registerForActivityResult(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ActivityResultContracts</span>.StartActivityForResult(),<span class="hljs-keyword">new</span> <span class="hljs-title class_">ActivityResultCallback</span>&lt;ActivityResult&gt;()&#123;  <br>        <span class="hljs-meta">@Override</span>  <br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onActivityResult</span><span class="hljs-params">(ActivityResult result)</span> &#123;  <br>            <span class="hljs-keyword">if</span>(result.getResultCode() == Activity.RESULT_OK) &#123;  <br>                <span class="hljs-type">Uri</span> <span class="hljs-variable">uri</span> <span class="hljs-operator">=</span> result.getData().getData();  <br>                <span class="hljs-keyword">if</span>(imageProduct!=<span class="hljs-literal">null</span> &amp;&amp; editTextImagePath!= <span class="hljs-literal">null</span>)&#123;  <br>                    Picasso.with(getContext()).load(uri).into(imageProduct);  <br>                    editTextImagePath.setText(uri.toString());  <br>                &#125;  <br>                adapter.setImage(uri);  <br>            &#125;  <br>        &#125;  <br>    &#125;);  <br>&#125;<br></code></pre></td></tr></table></figure><p>其中intentActivityResultLauncher变量是<code>ActivityResultLauncher&lt;Intent&gt;</code>，这里在之前进行了声明，所以直接使用了。<br><strong>给按钮添加点击事件进行访问</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">imageProduct.setOnClickListener(imageView-&gt;&#123;  <br>    <span class="hljs-type">Intent</span> <span class="hljs-variable">intent</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(Intent.ACTION_OPEN_DOCUMENT, <span class="hljs-literal">null</span>);  <br>    intent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, <span class="hljs-string">&quot;image/*&quot;</span>);  <br>    intentActivityResultLauncher.launch(intent);  <br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="修改，改进">修改，改进</h2><p>这种方式可以正确的读取相册图片，并显示在imageView上，但是有一个问题，在通过这一方式打开相册并选取文件后，照片能够正常显示，但是当第一次打开软件时，这些图片并不能正常显示，只有当执行“打开相册，并选择照片”这一操作后才能正常显示。</p><p>不过问题并不出现在这里，而是读取的链接问题，通过log输出日志可以发现，读取到的Uri地址为<code>content://com.android.providers.downloads.documents/document/raw%3A%2Fstorage%2Femulated%2F0%2FDownload%2Ftest.jpg</code>，这种content Uri无法直接通过Picasso或setImageUri方法来设置图片，需要转化为文件路径，代码如下：<br><strong>获取文件路径</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> String <span class="hljs-title function_">getImagePath</span><span class="hljs-params">(Uri uri, String selection)</span> &#123;  <br>    <span class="hljs-type">String</span> <span class="hljs-variable">path</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;  <br>    <span class="hljs-comment">// 通过Uri和selection来获取真实的图片路径  </span><br>    <span class="hljs-type">Cursor</span> <span class="hljs-variable">cursor</span> <span class="hljs-operator">=</span> getContext().getContentResolver().query(uri, <span class="hljs-literal">null</span>, selection, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);  <br>    <span class="hljs-keyword">if</span> (cursor != <span class="hljs-literal">null</span>) &#123;  <br>        <span class="hljs-keyword">if</span> (cursor.moveToFirst()) &#123;  <br>            path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));  <br>        &#125;  <br>        cursor.close();  <br>    &#125;    <br>    <span class="hljs-keyword">return</span> path;  <br>&#125;<br></code></pre></td></tr></table></figure><p><strong>使用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span>  <br><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">convert</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> MyProductViewHolder holder, Product product)</span> &#123;  <br>    <span class="hljs-comment">//填充数值  </span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">TAG</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Test: file&quot;</span>;  <br>    <span class="hljs-keyword">try</span>&#123;  <br>        <span class="hljs-keyword">if</span>(!product.getImage().equals(<span class="hljs-string">&quot;&quot;</span>))&#123;  <br>            <span class="hljs-keyword">if</span>(DocumentsContract.isDocumentUri(getContext(),Uri.parse(product.getImage())))&#123;  <br>                <span class="hljs-type">Uri</span> <span class="hljs-variable">uri</span> <span class="hljs-operator">=</span> Uri.parse(product.getImage());  <br>                <span class="hljs-type">String</span> <span class="hljs-variable">imagePath</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;  <br>                <span class="hljs-type">String</span> <span class="hljs-variable">docId</span> <span class="hljs-operator">=</span> DocumentsContract.getDocumentId(uri);  <br>                Log.d(TAG, <span class="hljs-string">&quot;docId: &quot;</span> + docId);  <br>                <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;com.android.providers.downloads.documents&quot;</span>.equals(uri.getAuthority())) &#123;  <br>                    <span class="hljs-keyword">if</span> (docId.startsWith(<span class="hljs-string">&quot;raw:&quot;</span>)) &#123;  <br>                        imagePath = docId.replaceFirst(<span class="hljs-string">&quot;raw:&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);  <br>                    &#125; <span class="hljs-keyword">else</span> &#123;  <br>                        <span class="hljs-type">Uri</span> <span class="hljs-variable">contentUri</span> <span class="hljs-operator">=</span> ContentUris.withAppendedId(Uri.parse(<span class="hljs-string">&quot;content://downloads/public_downloads&quot;</span>), Long.parseLong(docId));  <br>                        imagePath = getImagePath(contentUri, <span class="hljs-literal">null</span>);  <br>                    &#125;  <br>                    Log.d(TAG, imagePath);  <br>                &#125;  <br>                <span class="hljs-comment">//Picasso.with(getContext()).load(Uri.parse(imagePath)).into(holder.imageView);  </span><br>                holder.imageView.setImageURI(Uri.parse(imagePath));  <br>            &#125;  <br>            <span class="hljs-keyword">else</span> &#123;  <br>                Picasso.with(getContext()).load(product.getImage()).into(holder.imageView);  <br>            &#125;  <br>        &#125;  <br>        <span class="hljs-keyword">else</span>  <br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Exception</span>();  <br>    &#125;<span class="hljs-keyword">catch</span> (Exception exception)&#123;  <br>        holder.imageView.setImageDrawable(getContext().getDrawable(R.drawable.product_placeholder));  <br>    &#125;  <br>    holder.name.setText(product.getName());  <br>    holder.model.setText(product.getModel());  <br>    holder.material.setText(product.getUsedMaterial());  <br>    holder.price.setText(<span class="hljs-string">&quot;￥&quot;</span>+ String.valueOf(product.getPrice()));  <br>&#125;<br></code></pre></td></tr></table></figure><p>最后得到的，可以通过setImageURI方法设置，并直接访问的文件路径格式为<code>/storage/emulated/0/Download/wallhaven-wyzd56.png</code></p><hr><blockquote><p><a href="https://www.cnblogs.com/MrChen-/p/14607523.html">Android 调用相册返回路径以及返回Uri的总结 - carry莫奈 - 博客园 (cnblogs.com)</a><br><a href="https://blog.csdn.net/androidzmm/article/details/82886392">Android uri转真实路径。_androidzmm的博客-CSDN博客_android uri转路径</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>烟草仓储管理系统开发笔记（五）</title>
    <link href="/2022/04/21/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <url>/2022/04/21/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1>悲报</h1><p>前几天写完的采购订单界面，花了很长的时间去实现树形列表，构思数据的呈现形式，算是写了挺多的内容了，前天晚上明明都暂告一段落了，却忘记了push到GitHub，结果昨天打开电脑，发现存放毕设的硬盘损坏了，系统直接识别不到硬盘了。。。也就是前几天写的采购订单页面全部作废。GitHub上的最新的commit也是两天前的，直接导致昨天心态炸裂，摆了一天。期望着今天硬盘能够奇迹般恢复（毕竟之前有过一次），看来当时就不该心存侥幸，留下这块硬盘，明明都买了新硬盘，但因为硬盘恢复了便也没更换。不过更重要的还是一定要注意备份，要是那天晚上将写完的内容push到GitHub上，那么硬盘损坏倒也无所谓了。</p><p>今天首先着手把产品信息页面调整了一下，并且把库存管理界面给写了，两个订单管理界面也留个几天，万一硬盘又恢复了呢🤡不过真恢复不了也罢，正好之前的方案也存在一些无法解决的问题，这次换一个实现方式，换一个数据的呈现方式。</p><h1>产品信息界面</h1><p>之前的产品信息界面的Item设计始终觉得不美观，辨识度也不太够，因此今天把产品信息界面进行了重新的设计，考虑再三还是为产品加上了图片字段，更加直接地显示产品信息，也方便库存管理中Item的设计，此外，原本觉得页面没有其他颜色，过于单调，加上图片也方便布局和查看，而原料信息则没有进行更新，一是原料图片也没有什么辨识度，二是原料只是为产品服务而已（”使用原料“）<br><img src="https://images.starnight.top/img/20220421224759.png" alt=""></p><p>重新设计后的Item中去除了名称和型号的标识label，直接用加粗的大号字体显示，使层次更加清晰。</p><h1>库存管理界面</h1><p>由于库存信息中有两大块，一个是产品，一个是原料，两者都存储在Inventory数据表中，通过一个字段Type来分辨存放的是原料还是产品，原本设想过在一个页面中放置两个RecycleView，分别显示产品和原料信息，但总觉得不太妥当，最后还是选择了底部导航栏的方式，再用一个Navigation，在库存的Fragment中再嵌套两个Fragment。为了尽可能多的显示产品和原料的库存条目，将原本的头部布局进行了压缩，将菜单按钮和标题等挪到了同一高度。具体界面如下。<br><img src="https://images.starnight.top/img/20220421230047.png" alt=""></p><p>原料界面也是如此，将标题更换一下而已。</p><h2 id="Fragment嵌套导航实现">Fragment嵌套导航实现</h2><p>因为此处的库存界面本身是一个Fragment，在其中再套NavHostFragment时出现了一点问题，首先是创建Fragment，创建menu的xml文件，创建navigation的xml文件，这些都没有问题，但是NavControll的获取出现了问题。在Activity中通过如下代码实现导航。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">NavigationView</span> <span class="hljs-variable">navigationView</span> <span class="hljs-operator">=</span> findViewById(R.id.navigationView);  <br><span class="hljs-type">NavHostFragment</span> <span class="hljs-variable">navHostFragment</span> <span class="hljs-operator">=</span> (NavHostFragment) <br>    getSupportFragmentManager().findFragmentById(R.id.fragmentContainerView);  <br><span class="hljs-type">NavController</span> <span class="hljs-variable">controller</span> <span class="hljs-operator">=</span> navHostFragment.getNavController();  <br>NavigationUI.setupWithNavController(navigationView,controller);<br></code></pre></td></tr></table></figure><p>首先获取到navigationView，通过<code>getSupportFragmentManager()</code>方法获取FragmentContainerView，并通过类型强转为NavHostFragment，最后通过NavHostFragment的<code>getNavControll()</code>方法获取到NavControll，而在Fragment内部的NavHostFragment中，首先就没有<code>getSupportFragmentManager()</code>方法，这是Activity的方法。那么Fragment中用什么呢，在Fragment中有一个方法<code>getChildFragmentManager()</code>，就是用来获取嵌套中的Fragment的FragmentContainer。于是我便参照Activity，在Fragment的onCreate()方法中加入了修改后的代码，结果还是报错，程序找不到NavHostFragment，即<code>findFragmentById</code>方法找到的Fragment是个null，于是我又尝试了其他的方法，结果都没有成功，最后意识到一点，我要查找的Fragment是页面中的组件，而在Fragment的onCreate方法中，页面都还没有创建，自然也就无法找到页面中的组件了，于是把代码挪到了onCreateView中，结果成功实现了想要的效果。具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span>  <br><span class="hljs-keyword">public</span> View <span class="hljs-title function_">onCreateView</span><span class="hljs-params">(LayoutInflater inflater, ViewGroup container,  </span><br><span class="hljs-params">                         Bundle savedInstanceState)</span> &#123;  <br>    <span class="hljs-comment">// Inflate the layout for this fragment  </span><br>    <span class="hljs-type">View</span> <span class="hljs-variable">view</span> <span class="hljs-operator">=</span> inflater.inflate(R.layout.fragment_inventory, container, <span class="hljs-literal">false</span>);  <br>    <span class="hljs-type">BottomNavigationView</span> <span class="hljs-variable">bottomNavigationView</span> <span class="hljs-operator">=</span>view.findViewById(R.id.inventoryBottomNavigationView);  <br>    <span class="hljs-type">NavHostFragment</span> <span class="hljs-variable">navHostFragment</span> <span class="hljs-operator">=</span> (NavHostFragment) <br>        getChildFragmentManager().findFragmentById(R.id.inventoryNavHostFragment);  <br>    <span class="hljs-type">NavController</span> <span class="hljs-variable">controller</span> <span class="hljs-operator">=</span> navHostFragment.getNavController();  <br>    NavigationUI.setupWithNavController(bottomNavigationView,controller);  <br>    <span class="hljs-keyword">return</span> view;  <br>&#125;<br></code></pre></td></tr></table></figure><h2 id="产品信息Item设计与实现">产品信息Item设计与实现</h2><p>库存管理中的产品信息需要的体现的内容有产品的名称和型号，产品的库存情况，由于产品只需要销售，而不需要购入，因此设计了两个数据，一个是库存数量，一个是运输中数量（售出数量），因为是出库，所以颜色设定为红色。而库存数量则设定为蓝色，同时为两个数据加上对应的Iconfont图标。具体实现结果如下：<br><img src="https://images.starnight.top/img/20220421232051.png" alt=""></p><p>由于库存信息中只需要查看，而不需要进行删除操作，因此这里的RecycleView移除了滑动删除功能。这里的item右侧添加了一个向右图标，标志可以点击打开进一步的详细页面，暂时还没写😂，优先级可能没那么高，尽量实现。</p><h2 id="原料信息Item设计与实现">原料信息Item设计与实现</h2><p>原料信息Item和产品信息Item相比，少了图片，此外因为原料是入库，因此将入库的字体颜色设定为绿色。具体实现效果如下：<br><img src="https://images.starnight.top/img/20220421232702.png" alt=""></p><h2 id="公用Adapter">公用Adapter</h2><p>因为原料信息和产品信息的内容几乎相同，唯一的区别只是产品信息有图片，因此两个RecycleView公用一个Adapter，在自定义的ViewHolder中定义所有的组件，包括ImageView，不过因为在原料信息中没有ImageView，所以此时在ViewHolder中findViewById方法找到的是个null，所以在赋值时需要进行判断，根据数据表中设计的Type字段来分辨是产品信息还是原料信息，只有在当前是产品信息时才对ImageView设定图片路径，如果是原料信息则不对ImageView进行操作。</p><p><strong>ViewHolder</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyInventoryViewHolder</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseViewHolder</span> &#123;  <br>    TextView name,model,hostCount,deliveryCount;  <br>    ImageView image;  <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">MyInventoryViewHolder</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> View view)</span> &#123;  <br>        <span class="hljs-built_in">super</span>(view);  <br>        name = view.findViewById(R.id.textViewName);  <br>        model = view.findViewById(R.id.textViewModel);  <br>        hostCount = view.findViewById(R.id.textViewHostCount);  <br>        deliveryCount = view.findViewById(R.id.textViewDeliveryCount);  <br>        image = view.findViewById(R.id.productImageView);  <br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure><p><strong>赋值方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span>  <br><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">convert</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> MyInventoryViewHolder holder, InventoryTest inventory)</span> &#123;  <br>    holder.name.setText(inventory.getName());  <br>    holder.model.setText(inventory.getModel());  <br>    holder.hostCount.setText(String.valueOf(inventory.getHostCount()));  <br>    holder.deliveryCount.setText(String.valueOf(inventory.getDeliveryCount()));  <br>    <span class="hljs-keyword">if</span> (inventory.getType() == InventoryTest.TYPE_PRODUCT)  <br>        <span class="hljs-comment">//设置图片路径  </span><br>        <span class="hljs-comment">//holder.image.setImageURI();  </span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="产品订单送达确认">产品订单送达确认</h2><p>在产品信息界面中，我仍然放置了一个添加按钮，不过这个按钮不是用来添加产品库存信息的，而是进行订单的确认，因为订单存在”运输中“这个状态，而此时订单中的售出数量包含在<code>deliveryCount</code>中，且订单一直为运输中状态，那么订单怎么完成呢，就是在库存界面确认订单送达，则订单状态改为完成，并减去对应的运输中数量。点击按钮后弹出一个底部对话框，对话框中的数据都由TextView呈现，无法修改，用户可做的就是选择要操作的哪个订单（Spinner），以及设定订单完成的时间。具体实现界面如下：<br><img src="https://images.starnight.top/img/20220421233606.png" alt=""></p><p>其中送达日期由两部分组成，第一部分是一个Date类型的输入框，用户可以手动输入，第二部分是一个IconFontTextView，用于显示图标并响应点击事件，原本尝试了EditText的drawableRight属性，但显示效果差强人意，更重要的是，不知道怎么样（能不能）单独实现这个图标的点击事件，所以干脆用IconFontTextView替代。<br>点击日历按钮后跳出自带的日期选择器，使用的是DatePickerDialog，在此处也遇到了两个小问题。</p><h3 id="初始日期的设定">初始日期的设定</h3><p>第一个问题是初始日期的设定，DatePickerDialog默认是1970年那个时间，那显然不方便使用，因此设定了三个变量分别表示年月日，并通过Calendar类获取了当前日期作为初始值。DatePickerDialog的构造函数中需要有一个<code>OnDateSetListener</code>，那就创建一个，当日期选择完成时，将选择的日期分别赋值给三个本地变量，并同步设置送达日期EditText的数值，而此时就出现了问题，因为年月日的三个变量是外部变量，在定义<code>OnDateSetListener</code>时是定义的内部类，而在内部类中要使用外部变量就需要将外部变量定义为final，而定义为final又无法赋值，最后只能用IDE建议的修改方式，将年月日变量修改为final的单容量数组。具体代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java">addButton.setOnClickListener(v-&gt;&#123;  <br>    BottomDialog.show(<span class="hljs-string">&quot;确认送达&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">OnBindView</span>&lt;BottomDialog&gt;(R.layout.dialog_inventory_check_product) &#123;  <br>        <span class="hljs-meta">@Override</span>  <br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onBind</span><span class="hljs-params">(BottomDialog dialog, View v)</span> &#123;  <br>            <span class="hljs-comment">//<span class="hljs-doctag">TODO:</span> 添加“确认”事件  </span><br>            Spinner spinner;  <br>            TextView name,model,customer,count,price,saleDate,calendar;  <br>            EditText deliveryDate;  <br>            <span class="hljs-keyword">final</span> <span class="hljs-type">int</span>[] mYear = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">1</span>];  <br>            <span class="hljs-keyword">final</span> <span class="hljs-type">int</span>[] mMonth = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">1</span>];  <br>            <span class="hljs-keyword">final</span> <span class="hljs-type">int</span>[] mDay = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">1</span>];  <br>            mYear[<span class="hljs-number">0</span>] = Calendar.getInstance(Locale.CHINA).get(Calendar.YEAR);  <br>            mMonth[<span class="hljs-number">0</span>] = Calendar.getInstance(Locale.CHINA).get(Calendar.MONTH);  <br>            mDay[<span class="hljs-number">0</span>] = Calendar.getInstance(Locale.CHINA).get(Calendar.DAY_OF_MONTH);  <br>  <br>            spinner = v.findViewById(R.id.orderSpinner);  <br>            name = v.findViewById(R.id.textViewName);  <br>            model = v.findViewById(R.id.textViewModel);  <br>            customer = v.findViewById(R.id.textViewCustomer);  <br>            count = v.findViewById(R.id.textViewCount);  <br>            price = v.findViewById(R.id.textViewPrice);  <br>            saleDate = v.findViewById(R.id.textViewSaleDate);  <br>            calendar = v.findViewById(R.id.textViewCalendar);  <br>            deliveryDate = v.findViewById(R.id.editTextDeliveryDate);  <br>  <br>            calendar.setOnClickListener(view1-&gt;&#123;  <br>                DatePickerDialog.<span class="hljs-type">OnDateSetListener</span> <span class="hljs-variable">mDateSetListener</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DatePickerDialog</span>.OnDateSetListener() &#123;  <br>                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onDateSet</span><span class="hljs-params">(DatePicker view, <span class="hljs-type">int</span> year, <span class="hljs-type">int</span> monthOfYear, <span class="hljs-type">int</span> dayOfMonth)</span> &#123;  <br>                        mYear[<span class="hljs-number">0</span>] = year;  <br>                        mMonth[<span class="hljs-number">0</span>] = monthOfYear;  <br>                        mDay[<span class="hljs-number">0</span>] = dayOfMonth;  <br>                        deliveryDate.setText(<span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>().append(mYear[<span class="hljs-number">0</span>]).append(<span class="hljs-string">&quot;-&quot;</span>)  <br>                                .append(mMonth[<span class="hljs-number">0</span>] + <span class="hljs-number">1</span>).append(<span class="hljs-string">&quot;-&quot;</span>).append(mDay[<span class="hljs-number">0</span>]));  <br>                    &#125;  <br>                &#125;;  <br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">DatePickerDialog</span>(getActivity(), mDateSetListener, mYear[<span class="hljs-number">0</span>], mMonth[<span class="hljs-number">0</span>], mDay[<span class="hljs-number">0</span>]).show();  <br>            &#125;);  <br>        &#125;  <br>    &#125;).setOkButton(<span class="hljs-string">&quot;确定&quot;</span>).setCancelButton(<span class="hljs-string">&quot;取消&quot;</span>);  <br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="DatePickerDialog显示英文">DatePickerDialog显示英文</h3><p>但是很奇怪，DatePickerDialog默认显示的是英文，没能找到办法修改为中文，在网上查阅了许多也没发现有说这个问题的什么内容，不过有些类似问题倒是提到了”修改程序的默认地址“，也就是说，因为程序的默认地址不是中文区，所以显示不是中文，所以通过设置Local的默认值来修改地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//将系统环境默认设置为中文  </span><br>Locale.setDefault(Locale.SIMPLIFIED_CHINESE);<br></code></pre></td></tr></table></figure><p>这样就可以将DatePickerDialog显示为简体中文，但最后发现其实问题是我的安卓模拟器设置的语言是英文😂，所以DatePickerDialog也就使用的英文，将系统语言改成中文就好了。<br><img src="https://images.starnight.top/img/20220421235246.png" alt=""></p>]]></content>
    
    
    
    <tags>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>烟草仓储管理系统开发笔记（四）</title>
    <link href="/2022/04/18/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <url>/2022/04/18/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>这几天完成了供应商信息界面、产品界面、原料界面和用户管理的界面，由于大致内容相近，所以每个模块不单独讲了。</p><h1>供应商信息、用户管理</h1><p>供应商信息界面和用户管理界面的结构和样式跟客户信息界面相同，都有着头像和信息显示部分，就是Label名称和对话框中的内容有所区别，具体数据还未填入，以客户数据暂做填充。<br>在添加/修改信息的对话框中，用户管理移除了头像的设定，添加了管理员权限的设置，程序根据是否是管理员选择不同的默认头像。其中的用户ID也被设定为不可获取焦点，不允许修改数值。<br><img src="https://images.starnight.top/img/20220419105200.png" alt=""></p><p><img src="https://images.starnight.top/img/20220419105229.png" alt=""></p><h1>产品、原料信息界面</h1><p>产品和原料信息界面相比于客户、供货商界面而言更加简洁（<s>简陋</s>），去掉了头像，只显示产品的基本信息，毕竟本身该界面的作用只是对产品的增删改查，不会有太多的作用，更多的内容还是在库存管理之中，因此这里进行了简化。不过去掉了头像之后，整个页面的色彩显得有些单调，待后续看是否可以稍加优化一下。<br>仅是显示效果上的变化，基本的滑动删除，撤回删除等功能还是保留，具体数据还未填入，同样以客户数据暂做填充。<br><img src="https://images.starnight.top/img/20220419105646.png" alt=""></p><p><img src="https://images.starnight.top/img/20220419105710.png" alt=""></p><h1>遇到的问题</h1><p>今天打开项目运行的时候突然报了个编译错误<code>Could not resolve all files for configuration ':app:debugRuntimeClasspath'</code>，网上查阅资料说是一般是两种原因，1. 引用的包出了问题 2. Gradle版本和插件版本不对应。我寻思着我也没再新导入包，而之前的使用都是好好的，莫不是AS自动更新了Gradle，可去查看后两者也是对应上的，就，莫名的错误。最后重启软件再打开就又好了-.-||</p>]]></content>
    
    
    
    <tags>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>烟草仓储管理系统开发笔记（三）</title>
    <link href="/2022/04/15/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <url>/2022/04/15/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1>IconFont字体的导入</h1><h2 id="正常使用">正常使用</h2><p><a href="https://www.jianshu.com/p/e39b1d506a82">参考内容</a><br>由此本次项目中应该会多处使用到IconFont字体，以及更倾向于在xml文件中直接设置IconFont图标，而不是在Java代码中进行设置，因此采用的是自定义类的方式。</p><p>首先在IconFont网站上挑选好需要的图标，并添加到项目，然后进入到项目文件中将内容下载到本地。下载得到一个压缩包，解压后可以得到一个ttf后缀的文件，将其导入到Android Studio的assets文件夹中，assets文件夹默认没有创建，需要手动新建，文件夹跟java和res位于同一层级。之后在assets文件夹中创建iconfont文件夹，将ttf文件导入到其中。<br><img src="https://images.starnight.top/img/20220415210907.png" alt=""></p><p>然后新建一个自定义类IconFontTextView，继承自AppCompatTextView，重写其中的构造方法，在构造方法中调用一个自己新建的方法，新建的方法通过调用Typeface来渲染字体。具体代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IconFontTextView</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AppCompatTextView</span> &#123;  <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">IconFontTextView</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> Context context)</span> &#123;  <br>        <span class="hljs-built_in">super</span>(context);  <br>        Init(context);  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">IconFontTextView</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> Context context, <span class="hljs-meta">@Nullable</span> AttributeSet attrs)</span> &#123;  <br>        <span class="hljs-built_in">super</span>(context, attrs);  <br>        Init(context);  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">IconFontTextView</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> Context context, <span class="hljs-meta">@Nullable</span> AttributeSet attrs, <span class="hljs-type">int</span> defStyleAttr)</span> &#123;  <br>        <span class="hljs-built_in">super</span>(context, attrs, defStyleAttr);  <br>        Init(context);  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">Init</span><span class="hljs-params">(Context context)</span>&#123;  <br>        <span class="hljs-type">Typeface</span> <span class="hljs-variable">icon</span> <span class="hljs-operator">=</span> Typeface.createFromAsset(context.getAssets(),<span class="hljs-string">&quot;iconfont/iconfont.ttf&quot;</span>);  <br>        setTypeface(icon);  <br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure><p>之后在需要使用IconFont图标的时候，将默认的TextView改成自定义的IconFontTextView，并在其中填写IconFont代码即可。</p><h2 id="菜单中使用">菜单中使用</h2><p>之前想着将抽屉菜单中的图标也用IconFont图标进行替换，但是菜单中的文本只是<code>&lt;Item&gt;</code>标签，也无法使用<code>&lt;TextView&gt;</code>标签，自然无法用自定义的IconFontTextView来替换了，因此行不通，最后只能将图标一个个以svg的形式下载下来，再从本地文件中导入到Android Studio中，通过Icon属性，将图标设置到菜单中。<br><img src="https://images.starnight.top/img/20220415211533.png" alt=""></p><h1>客户信息界面实现</h1><h2 id="基本框架设计">基本框架设计</h2><p>总体想的以简洁的信息展示为主，大致结构布局如下<br><img src="https://images.starnight.top/img/20220415212231.png" alt=""><br>其中的Header块内容很简单，为一个菜单中对应的IconFont图标和对应的页面名称，通过中英文的搭配使整体更美观一点。<br><img src="https://images.starnight.top/img/20220415213048.png" alt=""></p><h2 id="Item设计实现">Item设计实现</h2><p>其中Item部分设计主要分为两部分，左侧为一个ImageView，设想是添加客户的Logo，右侧则是垂直方向的三行文本框，用于显示客户信息。每个Item设定为圆角矩形，这一块原本想使用<a href="https://github.com/lihangleo2/ShadowLayout">ShadowLayout</a>来实现，但在使用时出现了一些兼容性问题<a href="**ShadowLayout%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98**">^ShadowLayout</a>，导致编译无法通过，所以改为使用上篇中提到的<a href="https://github.com/RuffianZhong/RWidgetHelper">RWidgetHelper</a>来实现，最终Item的呈现结果如下：<br><img src="https://images.starnight.top/img/20220415212837.png" alt=""></p><h2 id="SearchBar实现">SearchBar实现</h2><p>在之前重新学习时做的一个单词本Demo，那里使用到的搜索按钮自带动画，点击可以伸开搜索框填满整个标题栏，这里感觉很适合。因此尝试了一下，将一个Toolbar组件拖至RecycleView上方，将长度与RecycleView对齐，在其中添加一个SearchView，即实现了想要的效果，但其默认的搜索图标显示在左侧，且搜索框向右展开。但因为我还需要放置一个”添加”按钮，那么都放左边感觉怪怪的，一左一右就更奇怪了。于是就是网上查了查怎么将图标放到右侧，发现可以使用<code>layout_gravity=right</code>属性来将其移动到右侧，但是并没有效果，在仔细比对了代码后才发现，我这里的SearchView使用的是<code>match_parents</code>，所以是填满整个Toolbar的，将其改成<code>wrap_content</code>即可😂</p><p>然后在Toolbar组件中再使用IconFontTextView组件添加一个“+”的符号，即完成了Searchbar的效果。<br><img src="https://images.starnight.top/img/20220415213808.png" alt=""></p><h2 id="Adapter实现">Adapter实现</h2><p>有了几个Layout文件后便是创建Adapter，这里使用的也是第三方库<a href="https://github.com/CymChad/BaseRecyclerViewAdapterHelper">BaseRecyclerViewAdapterHelper</a> ，虽然暂时也没用上其特定功能，但反正都是要用这个的，就先以其为框架，以后更加方便添加动画等效果。在Adapter中创建自定义的ViewHolder并继承BaseViewHolder，在其中定义视图中的组件，然后将泛型中的两个参数进行修改，前者为实例对象，即数据源，后者为自定义的ViewHolder，即视图，并重写其方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CustomerListAdapter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseQuickAdapter</span>&lt;CustomerTest, MyCustomerViewHolder&gt; &#123;  <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CustomerListAdapter</span><span class="hljs-params">(<span class="hljs-type">int</span> layoutResId)</span> &#123;  <br>        <span class="hljs-built_in">super</span>(layoutResId);  <br>    &#125;  <br>  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">convert</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> MyCustomerViewHolder holder, CustomerTest customer)</span> &#123;  <br>        holder.name.setText(customer.getName());  <br>        holder.address.setText(customer.getAddress());  <br>        holder.purchase.setText(Arrays.toString(customer.getMainPurchase()).replace(<span class="hljs-string">&#x27;[&#x27;</span>,<span class="hljs-string">&#x27; &#x27;</span>).replace(<span class="hljs-string">&#x27;]&#x27;</span>,<span class="hljs-string">&#x27; &#x27;</span>));  <br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCustomerViewHolder</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseViewHolder</span>&#123;  <br>    TextView name,address,purchase;  <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">MyCustomerViewHolder</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> View view)</span> &#123;  <br>        <span class="hljs-built_in">super</span>(view);  <br>        name = view.findViewById(R.id.customerName);  <br>        address = view.findViewById(R.id.customerAddress);  <br>        purchase = view.findViewById(R.id.customerMainPurchase);  <br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure><p>根据文档所说，在重写的convert方法中进行组件内容的赋值。</p><h2 id="Fragment中使用">Fragment中使用</h2><p>首先在Fragment中创建RecycleView和自定义Adapter的对象，之后通过adapter的<code>setNewInstance</code>方法为adapter赋值，再将adapter绑定到RecycleView上。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onViewCreated</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> View view, <span class="hljs-meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;  <br>    <span class="hljs-built_in">super</span>.onViewCreated(view, savedInstanceState);  <br>    adapter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CustomerListAdapter</span>(R.layout.item_customer_information);  <br>    adapter.setAnimationEnable(<span class="hljs-literal">true</span>);  <br>    recyclerView = getView().findViewById(R.id.customerRecycleview);  <br>    recyclerView.setLayoutManager(<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinearLayoutManager</span>(getActivity()));  <br>    recyclerView.setAdapter(adapter);  <br><span class="hljs-comment">//获取list数据</span><br><span class="hljs-comment">//设定adapter数据</span><br>    adapter.setNewInstance(newList);   <br>&#125;<br></code></pre></td></tr></table></figure><p>得到如下的最终显示结果：<br><img src="https://images.starnight.top/img/20220415215610.png" alt=""></p><h2 id="添加点击事件">添加点击事件</h2><p>接下来为添加按钮和列表Item添加点击事件，当点击时，弹出一个底部对话框用于添加/修改信息，当是点击添加按钮弹出对话框时，则数据全为空，当点击列表Item弹出对话框时，默认数据为当前点击的Item的数据，可进行修改。<br>对话框使用第三方库<a href="https://github.com/kongzue/DialogX">DialogX</a> 实现，采用其自定义视图的底部对话框进行实现，效果图如下<br><img src="https://images.starnight.top/img/20220415215914.png" alt=""></p><p>不知为何，这里的布局会进行压缩，此外在设计布局文件时也会出现设置为<code>wrap_content</code>时，底下仍会流出很大一块空白的情况，就像是固定了高度一样，不知什么原因，因此这个布局只是个半成品，待修改完后在下篇写。</p><h1>遇到的问题</h1><h2 id="ShadowLayout中的兼容性问题">ShadowLayout中的兼容性问题</h2><p>在兼容性报错中，其提示ShadowLayout使用了support库，而这和AndroidX冲突，而且我这里的设定也确实是<code>useAndroidX=true</code>，因此我以为ShadowLayout不支持AndroidX，但我还是发了<a href="https://github.com/lihangleo2/ShadowLayout/issues/140">Issue</a>提问了一下，在开发者的告知下才知道，光有<code>useAndroidX=true</code>并不是开启了AndroidX，还需要在<code>gradle.properties</code>中添加<code>android.enableJetifier=true</code>才算支持AndroidX，即在<code>gradle.properties</code>中添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">android.useAndroidX=<span class="hljs-literal">true</span>  <br>android.enableJetifier=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>才算开启AndroidX</p><p>看是否需要将RWidgetHelper的那个布局改成ShadowLayout，毕竟ShadowLayout的阴影可调属性更多，更好看。</p>]]></content>
    
    
    
    <tags>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>烟草仓储管理系统开发笔记（二）</title>
    <link href="/2022/04/11/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2022/04/11/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>今天开始了页面的编写，首先也是将需要的内容全部先进行了定义，创建了各个页面对应的Fragment，计划是使用一个抽屉式菜单来进行Fragment的跳转，而主Activity中就进行抽屉菜单的初始化，并不需要进行其他的操作。</p><h1>页面框架</h1><p>首先定义一些基本常量，包括colors、strings、fonts等内容。</p><p>然后创建各个页面的Fragment，然后导入navigation包，新建Navigation的资料文件，在navigation资源文件中将创建好的Fragment全部添加，设置好对应的id和label，其中label为在sttings文件中先定义好的各个页面的名称。</p><p>接下来创建Menu资源文件，添加多个MenuItem，同样使用strings中定义的字段来设置各个item的名称，并设置item的id，此id与navigation中对应的Fragment的id相同，这样可以直接进行导航。</p><h1>抽屉菜单的实现</h1><p>首先将activity_main.xml的布局方式改为<code>drawerLayout</code>，并在布局中添加<code>NavHostFragment</code>和<code>NavigationView</code>组件其中NavHostFragment组件创建后选中之前创建的nav文件，用于显示Fragment的内容，NavigationView创建后选中之前创建的menu文件，用于显示菜单项。</p><p>接下来在MainActivity中创建NavControll和NavigationView对象，并将两者绑定，实现页面的跳转</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">NavigationView</span> <span class="hljs-variable">navigationView</span> <span class="hljs-operator">=</span> findViewById(R.id.navigationView);  <br><span class="hljs-type">NavHostFragment</span> <span class="hljs-variable">navHostFragment</span> <span class="hljs-operator">=</span> (NavHostFragment) getSupportFragmentManager().findFragmentById(R.id.fragmentContainerView);  <br><span class="hljs-type">NavController</span> <span class="hljs-variable">controller</span> <span class="hljs-operator">=</span> navHostFragment.getNavController();  <br><span class="hljs-type">AppBarConfiguration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AppBarConfiguration</span>.Builder(navigationView.getMenu()).build();  <br>NavigationUI.setupWithNavController(navigationView,controller);<br></code></pre></td></tr></table></figure><p><img src="https://images.starnight.top/img/20220411215828.png" alt=""></p><p>此时的菜单的并不美观，因此考虑添加一个头部布局，用于显示当前登录用户的信息，并且当点击时可以进行个人信息的修改。</p><p>新建一个layout文件，在其中进行头部布局的设计，整体布局为左侧显示用户信息，右侧显示一个图片，并将背景色设为比较温和的主题色，因为此处情景下感觉圆形头像比方形头像更加美观，而自己画drawable设置圆形又太麻烦（<s>虽然我也不会用drawable</s>），所以使用了一个第三方库<a href="https://github.com/RuffianZhong/RWidgetHelper">RWidgetHelper</a>，方便设置各类属性，结果如下<br><img src="https://images.starnight.top/img/20220411220056.png" alt=""><br>最后在navigationView中设置头部布局，将该自定义头部布局加载到抽屉菜单中。</p><p>但此时还存在一个问题，即点击抽屉的内容后，图标的颜色会发生变换，而文字的颜色不会发生变化，还是黑色，这就显得不是很和谐，因此对其进行设置<br><img src="https://images.starnight.top/img/20220411220612.png" alt=""></p><p>新建一个color资源文件，在<code>selector</code>标签中，分别设置selected的颜色和默认颜色即可实现变色的效果</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">selector</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span>  <br> <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">android:color</span>=<span class="hljs-string">&quot;@color/blue&quot;</span> <span class="hljs-attr">android:state_checked</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span>  <br> <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">android:color</span>=<span class="hljs-string">&quot;@color/black_light&quot;</span> /&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">selector</span>&gt;</span><br></code></pre></td></tr></table></figure><p>最后在navigationView中，将itemTextColor属性设置为上述新建的color文件，并将icon的itemIconTint也设置为该color文件，即可实现一起变色的效果。最终效果如下：<br><img src="https://images.starnight.top/img/20220411221047.png" alt=""></p><p>PS：图标没添加完全，找不到好的图片，下次改为使用Icon font图标而不是内置的图标</p><h1>使用第三方字体</h1><p>因为看着显示效果总是怪怪的，不如设计图那么美观，感觉字体也差点意思，而且因为menu中的字体样式无法直接修改，只能设置一个style，因此干脆将字体也换了，便去下载了苹方字体。<br>下载完字体后首先在res文件夹下创建Font资源文件夹，将ttf文件投入其中，并将文件名修改规范，之后便可以在xml文件中使用<code>@font/pingfang</code>设置字体，不过不太清楚自定义的字体样式放在何处，res文件夹下好像也没有style类型的文件夹，便将其放到了values文件夹下，在其中定义自定义的字体样式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;menu_item&quot;</span>&gt;</span><span class="language-xml">  </span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;fontFamily&quot;</span>&gt;</span>@font/pingfang<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span>  </span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:textSize&quot;</span>&gt;</span>18sp<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span>  </span><br><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>之后在navigationView中将<code>itemTextAppearance</code>属性设置为所创建的style名称即可。</p><h1>遇到的问题</h1><p>这次的抽屉菜单设计首先是想着使用第三方库<a href="https://github.com/mikepenz/MaterialDrawer">MaterialDrawer (github.com)</a>实现，但翻阅了一下午的文档和Issue，也没有找到一个好的自定义头部布局的方法，而默认的头部布局方式不能说不好看，只能说完全不适合这个应用场景，所以只能作罢，最后还是用回原生的navigation😹，浪费了一下午。</p>]]></content>
    
    
    
    <tags>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>烟草仓储管理系统开发笔记（一）</title>
    <link href="/2022/04/09/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2022/04/09/%E7%83%9F%E8%8D%89%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>安卓的毕设为烟草仓储管理系统，本科期间最后一个开发项目了，上学年还有安卓的课程，不过也是经典的用完就忘，当时课设所使用的内容在现在也只留下了一个大概印象了，而每次开发总得学到些东西，因此就又从头开始看起了安卓的教程，不过也没能找到近年的评价好的安卓教程，最后直接看jetpack相关的教程。在看了好几天的教程后，终于开始了毕设的编写，因为教程的后半部分使用的是kotlin代码，虽然我并没有学习过，但感觉使用kotlin构建Room的实体类还是要方便不少，因此在数据库设计部分使用kotlin，其余部分仍然使用Java。</p><h1>功能逻辑梳理</h1><p>和以往不同的是，这次不是刚开始项目就直接上手写，写了这么多的课设也多少明白了前期设计的重要性，所以首先对软件的功能进行了梳理，主要功能内容分为用户管理、产品信息管理、原料信息管理、客户信息管理、供应商信息管理、采购订单管理、销售订单管理、库存管理以及报表分析。更加详细的内容如以下的思维导图所呈现。其中黄色的为可选功能，粉色的为注释。<br><img src="https://images.starnight.top/img/20220411205905.png" alt=""></p><h1>数据库设计</h1><p>数据库也是前期就应该设计好的，后续对数据库进行的更改非常麻烦，所以这次首先根据功能列表设计好数据库的结构，使用Navicat16生成数据进行了测试，并根据需要用到的数据查询情况设计了对应的视图，确保都能获得想要的效果。具体内容如下。<br><img src="https://images.starnight.top/img/20220411210918.png" alt=""></p><h1>数据库编写</h1><p>在Android的数据库编写中，使用Kotlin语言和Room组件进行设计，设计的表全部放于Entities包下，其中报表分析所需要的Report表中不存放数据，而是使用视图从其他表中获取数据进行呈现，对于一些数值有限可选的变量设计为静态变量，增加可读性。新建dao包，在其中为每个实体类都添加对应的Dao接口，在Dao接口中定义各种增删改查操作。新建一个抽象类database，在其中返回各个实体的dao对象，并通过kotlin的伴生对象设计为单例模式。<br><strong>Entity示例</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Entity(tableName = <span class="hljs-string">&quot;sale_order&quot;</span>)</span>  <br><span class="hljs-keyword">data</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SaleOrder</span>(  <br>    <span class="hljs-comment">//订单号  </span><br> <span class="hljs-meta">@PrimaryKey(autoGenerate = true)</span>  <br>    <span class="hljs-keyword">val</span> orderId:<span class="hljs-built_in">Int</span>=<span class="hljs-number">1</span>,  <br> <span class="hljs-comment">//售出产品名称  </span><br> <span class="hljs-meta">@ColumnInfo(name = <span class="hljs-string">&quot;productName&quot;</span>)</span>  <br>    <span class="hljs-keyword">var</span> productName:String,  <br> <span class="hljs-comment">//售出产品型号  </span><br> <span class="hljs-meta">@ColumnInfo(name = <span class="hljs-string">&quot;productModel&quot;</span>)</span>  <br>    <span class="hljs-keyword">var</span> productModel:String,  <br> <span class="hljs-comment">//销售数量  </span><br> <span class="hljs-meta">@ColumnInfo(name = <span class="hljs-string">&quot;count&quot;</span>)</span>  <br>    <span class="hljs-keyword">var</span> count:<span class="hljs-built_in">Int</span>,  <br> <span class="hljs-comment">//销售总价格  </span><br> <span class="hljs-meta">@ColumnInfo(name = <span class="hljs-string">&quot;price&quot;</span>)</span>  <br>    <span class="hljs-keyword">var</span> price:<span class="hljs-built_in">Float</span>,  <br> <span class="hljs-comment">//客户名称  </span><br> <span class="hljs-meta">@ColumnInfo(name = <span class="hljs-string">&quot;customer&quot;</span>)</span>  <br>    <span class="hljs-keyword">var</span> customer:String,  <br> <span class="hljs-comment">//销售日期  </span><br> <span class="hljs-meta">@ColumnInfo(name = <span class="hljs-string">&quot;saleDate&quot;</span>)</span>  <br>    <span class="hljs-keyword">var</span> saleDate: Date,  <br> <span class="hljs-comment">//预计送达日期  </span><br> <span class="hljs-meta">@ColumnInfo(name = <span class="hljs-string">&quot;deliveryDate&quot;</span>)</span>  <br>    <span class="hljs-keyword">var</span> deliveryDate: Date,  <br> <span class="hljs-comment">//订单状态  </span><br> <span class="hljs-meta">@ColumnInfo(name = <span class="hljs-string">&quot;state&quot;</span>)</span>  <br>    <span class="hljs-keyword">var</span> state:String,  <br> <span class="hljs-comment">//管理员批注  </span><br> <span class="hljs-meta">@ColumnInfo(name = <span class="hljs-string">&quot;comment&quot;</span>)</span>  <br>    <span class="hljs-keyword">var</span> comment:String  <br>)&#123;  <br>    <span class="hljs-keyword">companion</span> <span class="hljs-keyword">object</span>&#123;  <br>        <span class="hljs-keyword">const</span> <span class="hljs-keyword">val</span> STATE_REQUEST:String=<span class="hljs-string">&quot;申请中&quot;</span>  <br><span class="hljs-keyword">const</span> <span class="hljs-keyword">val</span> STATE_DELIVERY:String=<span class="hljs-string">&quot;运输中&quot;</span>  <br><span class="hljs-keyword">const</span> <span class="hljs-keyword">val</span> STATE_REFUSED:String=<span class="hljs-string">&quot;已拒绝&quot;</span>  <br><span class="hljs-keyword">const</span> <span class="hljs-keyword">val</span> STATE_COMPLETE:String=<span class="hljs-string">&quot;已完成&quot;</span>  <br>&#125;  <br>&#125;<br></code></pre></td></tr></table></figure><p><strong>视图示例</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@DatabaseView(<span class="hljs-string">&quot;SELECT customer, count(customer) FROM sale_order GROUP BY customer ORDER BY count(customer) DESC&quot;</span>)</span>  <br><span class="hljs-keyword">data</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PurchaseCount</span>(  <br>    <span class="hljs-keyword">val</span> customer: String,  <br><span class="hljs-keyword">val</span> times:<span class="hljs-built_in">Int</span>  <br>)<br></code></pre></td></tr></table></figure><p><strong>dao示例</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Dao</span>  <br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">SaleOrderDao</span> &#123;  <br>    <span class="hljs-meta">@Insert</span>  <br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">insertSaleOrder</span><span class="hljs-params">(<span class="hljs-keyword">vararg</span> saleOrder: <span class="hljs-type">SaleOrder</span>)</span></span>:<span class="hljs-built_in">Long</span>  <br>  <br>    <span class="hljs-meta">@Update</span>  <br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">updateSaleOrder</span><span class="hljs-params">(<span class="hljs-keyword">vararg</span> saleOrder: <span class="hljs-type">SaleOrder</span>)</span></span>:<span class="hljs-built_in">Long</span>  <br>  <br>    <span class="hljs-meta">@Delete</span>  <br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">deleteSaleOrder</span><span class="hljs-params">(<span class="hljs-keyword">vararg</span> saleOrder: <span class="hljs-type">SaleOrder</span>)</span></span>:<span class="hljs-built_in">Long</span>  <br>  <br>    <span class="hljs-meta">@Query(<span class="hljs-string">&quot;SELECT * FROM sale_order ORDER BY&quot;</span> +  </span><br><span class="hljs-meta">            <span class="hljs-string">&quot;( CASE WHEN state = &#x27;申请中&#x27; THEN 0 WHEN state = &#x27;已拒绝&#x27; THEN 1 WHEN state = &#x27;运输中&#x27; THEN 2 ELSE 3 END )&quot;</span>)</span>  <br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">getAllSaleOrder</span><span class="hljs-params">()</span></span>: LiveData&lt;List&lt;SaleOrder&gt;&gt;  <br>&#125;<br></code></pre></td></tr></table></figure><p><strong>database</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Database(  </span><br><span class="hljs-meta">    entities = [User::class, Customer::class, Supplier::class, Product::class, Material::class, Inventory::class, PurchaseOrder::class, SaleOrder::class],  </span><br><span class="hljs-meta">views = [PurchaseAmount::class, PurchaseCount::class],  </span><br><span class="hljs-meta">version = 1,  </span><br><span class="hljs-meta">exportSchema = false  </span><br><span class="hljs-meta">)</span>  <br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WMSDatabase</span>:<span class="hljs-type">RoomDatabase</span>()&#123;    <br>    <span class="hljs-keyword">companion</span> <span class="hljs-keyword">object</span>&#123;  <br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> INSTANCE:WMSDatabase?=<span class="hljs-literal">null</span>  <br>  <br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">getINSTANCE</span><span class="hljs-params">(context: <span class="hljs-type">Context</span>)</span></span>:WMSDatabase ? &#123;  <br>            <span class="hljs-keyword">if</span>(INSTANCE == <span class="hljs-literal">null</span>)&#123;  <br>                INSTANCE = Room.databaseBuilder(context,WMSDatabase::<span class="hljs-keyword">class</span>.java,<span class="hljs-string">&quot;tobacco_database.db&quot;</span>).allowMainThreadQueries().build()  <br>            &#125;  <br>            <span class="hljs-keyword">return</span> INSTANCE  <br>&#125;  <br>  <br>        <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">getINSTANCE</span><span class="hljs-params">()</span></span>:WMSDatabase?= INSTANCE  <br> &#125;  <br>      <br>    <span class="hljs-keyword">abstract</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">userDao</span><span class="hljs-params">()</span></span>:UserDao  <br>    <span class="hljs-keyword">abstract</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">customerDao</span><span class="hljs-params">()</span></span>:CustomerDao  <br>    <span class="hljs-keyword">abstract</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">supplierDao</span><span class="hljs-params">()</span></span>:SupplierDao  <br>    <span class="hljs-keyword">abstract</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">productDao</span><span class="hljs-params">()</span></span>:ProductDao  <br>    <span class="hljs-keyword">abstract</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">materialDao</span><span class="hljs-params">()</span></span>:MaterialDao  <br>    <span class="hljs-keyword">abstract</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">inventoryDao</span><span class="hljs-params">()</span></span>:InventoryDao  <br>    <span class="hljs-keyword">abstract</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">purchaseOrderDao</span><span class="hljs-params">()</span></span>:PurchaseOrderDao  <br>    <span class="hljs-keyword">abstract</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">saleOrderDao</span><span class="hljs-params">()</span></span>:SaleOrderDao  <br>    <span class="hljs-keyword">abstract</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">reportDao</span><span class="hljs-params">()</span></span>:ReportDao  <br>&#125;<br></code></pre></td></tr></table></figure><h1>遇到的问题</h1><p>在这次的开发中由于使用了kotlin语言，而本身对于kotlin可以说完全没有了解，因此当出现问题时耗费了挺多时间去处理，例如上述的静态常量和静态方法，由于kotlin中没有<code>static</code>关键字，因此无法直接使用static定义静态常量，在查阅资料后知道了kotlin伴生对象的使用方法，实现了静态常量的定义。</p>]]></content>
    
    
    
    <tags>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Note - Filter Grafting for Deep Neural Networks</title>
    <link href="/2021/11/19/Note%20-%20Filter%20Grafting%20for%20Deep%20Neural%20Networks/"/>
    <url>/2021/11/19/Note%20-%20Filter%20Grafting%20for%20Deep%20Neural%20Networks/</url>
    
    <content type="html"><![CDATA[<h1>介绍</h1><p>与之前所看到的一些关于 filter pruning 的文章不同，作者认为那些通过 filter pruning 方法剪去的滤波器在某些特定场景可能还是有用的，作者提到像集成学习中一样，单个分类器的效果并不理想，但多个分类器组合在一起效果就有很大提升。所以在这篇文章中，作者不考虑将这些不重要的滤波器剪去，而是为它们重新赋值，尝试重新激活它们。也就是作者所提出的嫁接方法，将其他的数据嫁接到这些不重要的 filter 上。<br><img src="/img/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Pasted_image_20211119165723.png" alt=""></p><h1>三种嫁接策略</h1><p>作者提出了三种嫁接策略：</p><ol><li>采用高斯噪声作为数据嫁接到不重要的 filter 上</li><li>采用自身其他的 filter 作为数据嫁接到不重要的 filter 上<ul><li>将 filters 按计算得到的重要性进行排序</li><li>小于设定阈值的 filter 被认为是不重要的</li><li>将最重要的 filter 数据嫁接到最不重要的 filter 上，将第二…，以此类推</li><li>==但是这种数据并没有为网络带来新的数据，导致效果不佳==<br><img src="/img/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Pasted_image_20211119165650.png" alt=""></li></ul></li><li>采用外部网络的 filter 作为嫁接对象<ul><li>将两（多）个网络并行训练，并进行 filter 的重要性计算</li><li>将另一个网络的 filter 嫁接到该网络的 filter 上</li><li>==采用将整层的 filters 全部嫁接的方式，而不是单个 filter 嫁接的方式==</li><li>通过一个自调节系数 α 来控制不同网络的 filter 数据所占的比重</li><li>如下所示，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>2</mn></msub></msubsup></mrow><annotation encoding="application/x-tex">W_i^{M_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span> 即表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 网络的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 层的权重</li></ul><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msubsup><mi>W</mi><mi>i</mi><msubsup><mi>M</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></msubsup><mo>=</mo><mi>α</mi><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>2</mn></msub></msubsup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>1</mn></msub></msubsup><mspace width="1em"/><mo stretchy="false">(</mo><mn>0</mn><mo>&lt;</mo><mi>α</mi><mo>&lt;</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">W_i^{M_2&#x27;}=\alpha W_i^{M_2}+(1-\alpha)W_i^{M_1} \quad (0&lt;\alpha&lt;1) \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4013em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1245em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.245em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.214em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.4013em;vertical-align:-0.2769em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>（论文中式 2）</li></ol><p>由于第三种方法的效果比较好，所以作者接下来采用的都是第三种方法，由此作者引出了两个问题</p><ol><li>如何计算权重 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>1</mn></msub></msubsup></mrow><annotation encoding="application/x-tex">W_i^{M_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>2</mn></msub></msubsup></mrow><annotation encoding="application/x-tex">W_i^{M_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span></li><li>如何计算比例系数 α</li></ol><h1>如何计算权重</h1><p>对于如何计算权重，作者同样给出了两种标准</p><ol><li>根据 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">L_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 范数</li><li>根据熵</li></ol><blockquote><p>知道的信息越多，熵越小；知道的信息越少，熵越大。也就是变量的不确定性越大，熵就越大。而取负值，是因为小概率的事件信息量更大，大概率事件的信息量更小。<br>![[Pasted image 20211119203943.png]]</p></blockquote><p>在这里，作者将 filter 中的数值排序后，按序分为了 m 堆，然后计算每个堆各自的概率，最后该 filter 的熵即为</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>H</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>B</mi></munderover><msub><mi>p</mi><mi>k</mi></msub><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>p</mi><mi>k</mi></msub></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">H(W_{i,j})=-\sum_{k=1}^B p_k log p_k \tag{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>（论文中式 4）</p><p>这里的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 就是堆的个数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">p_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 就是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个堆的概率，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(W_{i,j})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的值越小，说明这个 filter 值的分布变化越少，即 filter 中的数值差距不大</p><p>一个层中共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 个 filter，所以整个层的信息就是 $$H(W_i)=\sum_{j=1}^C H_{i,j} \tag{3}$$<br>（论文中式 5）</p><p>但是式子（3）没有考虑到 filter 之间的关系，而是单独计算每个 filter 的熵，为了保持层的连续性，作者这里直接计算整个层的权重</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>H</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>B</mi></munderover><msub><mi>p</mi><mi>k</mi></msub><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>p</mi><mi>k</mi></msub></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">H(W_i) = -\sum_{k=1}^B p_k log p_k \tag{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">4</span></span><span class="mord">)</span></span></span></span></span></span></p><p>（论文中式 6）</p><p>似乎和（2）式没有什么区别，但这里的堆中的数据不是单个 filter 中的数据分布，而是整个层中所有 filter 中的数据的分布。</p><h1>如何计算比例系数 α</h1><p>关于比例系数 α，作者提出了两个条件</p><ol><li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>2</mn></msub></msubsup><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>1</mn></msub></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(W_i^{M_2})=H(W_i^{M_1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 时，α 应该等于 0.5，即两个网络所含的信息量相等，即各取一半，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>2</mn></msub></msubsup><mo stretchy="false">)</mo><mo>&gt;</mo><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>1</mn></msub></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(W_i^{M_2})&gt;H(W_i^{M_1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 时，α 应该大于 0.5，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 网络所含的信息量更大，所以占更大比例（本文式 1）</li><li>每个网络都应该发挥一部分作用，所以 α 一定大于 0，哪怕 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>2</mn></msub></msubsup><mo stretchy="false">)</mo><mo>≫</mo><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>1</mn></msub></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(W_i^{M_2})\gg H(W_i^{M_1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≫</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 或者 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>2</mn></msub></msubsup><mo stretchy="false">)</mo><mo>≪</mo><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>1</mn></msub></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(W_i^{M_2}) \ll H(W_i^{M_1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≪</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ol><p>鉴于上述条件，最终作者得到的 α 的计算公式如下</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>α</mi><mo>=</mo><mi>A</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mo stretchy="false">(</mo><mi>c</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>2</mn></msub></msubsup><mo stretchy="false">)</mo><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>W</mi><mi>i</mi><msub><mi>M</mi><mn>1</mn></msub></msubsup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mn>0.5</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(5)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\alpha = A * (arctan(c*(H(W_i^{M_2})-H(W_i^{M_1}))))+0.5 \tag{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord mathnormal">rc</span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9232em;"><span style="top:-2.4231em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">))))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span></span><span class="tag"><span class="strut" style="height:1.2001em;vertical-align:-0.2769em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">5</span></span><span class="mord">)</span></span></span></span></span></span></p><p>（论文中式 7）</p><h1>实验</h1><p>作者进行了多个对比实验</p><ol><li>比较采用不同嫁接信息来源的情况</li><li>比较采用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">L_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 范数和熵的情况</li><li>比较用于嫁接的两个网络之间是相似好还是差异大好</li><li>和其他网络的比较</li></ol><p>最终得到的结果是采用外部数据，使用熵来计算信息量，用于嫁接的网络差异大，最终得到的结果会更好</p><h1>多个网络并行训练</h1><p>在多个网络训练中，每个网络从前一个网络来获取嫁接的数据<br><img src="/img/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Pasted_image_20211119210519.png" alt=""></p><blockquote><p>剪枝将不重要的滤波器剪去，从而在精确性变化不大的前提下，实现计算量的降低，从而加快计算速度<br>嫁接不剪去不重要的滤波器，而是为其注入新的数据，从而提高精确性<br>两者是不是没有大的相关，都是从 filter 的角度出发，但一个是降低计算量，加速计算，另一个是提高精确性</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>深度学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Note - Filter Pruning via Geometric Median for Deep Convolutional Neural Networks Acceleration</title>
    <link href="/2021/11/19/Note%20-%20Filter%20Pruning%20via%20Geometric%20Median%20for%20Deep%20Convolutional%20Neural%20Networks%20Acceleration/"/>
    <url>/2021/11/19/Note%20-%20Filter%20Pruning%20via%20Geometric%20Median%20for%20Deep%20Convolutional%20Neural%20Networks%20Acceleration/</url>
    
    <content type="html"><![CDATA[<h1>现况</h1><p>现有的滤波器剪枝的标准是，“smaller-norm-less-important&quot;，即认为滤波器的范数（p-norm）越小，相对应的特征图越接近于 0，于是对网络对贡献越小，那么这些滤波器可以去掉而不会严重影响网络的性能。<br>但作者认为这个标准要达到好的效果需要满足两个前提：</p><ol><li>不同卷积核之间的范数差距要够大</li><li>最不重要的（范数最小的）卷积核的范数要够小<br><img src="/img/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Pasted_image_20211118154042.png" alt=""><br>即如图 (a) 可能会导致卷积核之间的重要性难以区分，间隔区间太小，而图 (b) 剪去的卷积核的范数还是很大，即对结果的影响还是很大，删去后影响较大。</li></ol><h1>介绍</h1><p>因此，作者提出了一种用几何中位数来描述卷积核的可替代性，从而进行剪枝的方案</p><blockquote><p>几何中位数是对于欧几里得空间的点的中心的一个估计。我们认为滤波器也是欧氏空间中的点，于是我们可以根据计算 GM 来得到这些滤波器的“中心”，也就是他们的共同性质。如果某个滤波器接近于这个 GM，可以认为这个滤波器的信息跟其他滤波器重合，甚至是冗余的，于是我们可以去掉这个滤波器而不对网络产生大的影响。去掉它后，它的功能可以被其他滤波器代替。</p></blockquote><p><img src="/img/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Pasted_image_20211118154512.png" alt=""><br>右上角即为传统方法进行剪枝，右下角为作者提出的方法（FPGM)进行剪枝<br>和之前看的 [[Network Compression Based on Filter Similarity Pruning for Fast Inference on Edge Devices.pdf | 根据卷积核相似性进行剪枝]] 类似，都是考察卷积核的可替代性，可以用其他的卷积核包含的信息来替代某个卷积核，那么该卷积核即可被删去且对结果影响寥寥。</p><blockquote><p>欧式距离即两点之间的距离==<br>在两篇论文中，欧式距离都被用来进行计算并作为相关依据，该论文计算在欧式空间中的中位值来选择可被替代剪枝的卷积核，在根据卷积核相似性剪枝的论文中，通过计算每个卷积核之间的欧式距离，来作为衡量两者相似性的依据</p></blockquote><p>主要贡献：</p><ol><li>分析了之前的基于范数的剪枝规则，说明了其限制条件</li><li>提出了基于几何中位数进行剪枝的方法 FPGM</li><li>通过实验证明了 FPGM 的有效性</li></ol><h1>公式</h1><p>首先，假设给定 n 个点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>a</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">a^{(1)},....,a^{(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">....</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><msup><mi>a</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">\forall a^{(i)} \in \mathbb{R}^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9271em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span>，找到一个点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">x^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> 使得与所有其他点的欧氏距离之和最小$$x^* \in \mathop{argmin}<em>{x \in \mathbb{R}^d}f(x)\quad where\quad f(x) \mathop=^{def} \sum</em>{i \in [i,n]} ||x-a^{(i)}||_2 \tag{1}$$</p><blockquote><p>argmin 指使后面这个式子达到最小值时的 x 的取值<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">||x||_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示 x 的范数，实际就是模长的开根号，|x|表示模长，||x||表示在外套个绝对值<br>设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo>&lt;</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">x=&lt;x_1,x_2,x_3&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub><mo>=</mo><msqrt><mrow><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>3</mn><mn>2</mn></msubsup></mrow></msqrt></mrow><annotation encoding="application/x-tex">||x||_2 = \sqrt{x_1^2 + x_2^2 + x_3^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2902em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9498em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9098em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2902em;"><span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="double-struck">R</mi><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">\mathbb{R}^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span>表示都是x都是d维的</p></blockquote><p>接下来定义 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>F</mi><mi>i</mi><mrow><mi>G</mi><mi>M</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">F_i^{GM}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4413em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">GM</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span> 为卷积核的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 层的几何中位数，GM 指 Geometry Median - 几何中位数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">N_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 层，也可表示输入维度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">N_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 层，也表示输出维度</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msubsup><mi>F</mi><mi>i</mi><mrow><mi>G</mi><mi>M</mi></mrow></msubsup><mo>∈</mo><msub><mo><mi>a</mi><mi>r</mi><mi>g</mi><mi>m</mi><mi>i</mi><mi>n</mi></mo><mrow><mi>x</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>N</mi><mi>i</mi></msub><mo>×</mo><mi>K</mi><mo>×</mo><mi>K</mi></mrow></msup></mrow></msub><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">F_i^{GM}\in\mathop{argmin}_{x \in\mathbb{R}^{N_i \times K \times K}}g(x) \tag{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1383em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">GM</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0215em;vertical-align:-0.2715em;"></span><span class="mop"><span class="mop"><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">min</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3303em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathbb mtight">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8206em;"><span style="top:-2.8326em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2715em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.1628em;vertical-align:-0.2715em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其中</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo><mo>=</mo></mo><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow></msup><munder><mo>∑</mo><mrow><msup><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>N</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">]</mo></mrow></munder><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><msub><mi>F</mi><mrow><mi>i</mi><mo separator="true">,</mo><msup><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">g(x)\mathop{=}^{def}\sum_{j&#x27;\in[1,N_{i+1}]}||x-F_{i,j&#x27;}||_2 \tag{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.566em;vertical-align:-1.516em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mclose mtight">]</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:2.566em;vertical-align:-1.516em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>这里将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 点换成了卷积核，卷积核有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">N_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个，每个大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>×</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">K \times K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> ，2、3 式即表示卷积核的几何中位数（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>F</mi><mi>i</mi><mrow><mi>G</mi><mi>M</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">F_i^{GM}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4413em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">GM</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span> ）为使得到该 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 层每个卷积核的欧氏距离之和最小的一个值。<br>然后在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 层中，找到离该几何中位数最接近的一个卷积核，将其删去，设为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>i</mi><mo separator="true">,</mo><msup><mi>j</mi><mo>∗</mo></msup></mrow></msub></mrow><annotation encoding="application/x-tex">F_{i,j^*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6183em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 则</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>F</mi><mrow><mi>i</mi><mo separator="true">,</mo><msup><mi>j</mi><mo>∗</mo></msup></mrow></msub><mo>∈</mo><msub><mo><mi>a</mi><mi>r</mi><mi>g</mi><mi>m</mi><mi>i</mi><mi>n</mi></mo><mrow><msup><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>N</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">]</mo></mrow></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>F</mi><mrow><mi>i</mi><mo separator="true">,</mo><msup><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><mo>−</mo><msubsup><mi>F</mi><mi>i</mi><mrow><mi>G</mi><mi>M</mi></mrow></msubsup><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">F_{i,j^*}\in\mathop{argmin}_{j&#x27;\in[1,N_{i+1}]}||F_{i,j&#x27;}-F_i^{GM}||_2 \tag{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6183em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1691em;vertical-align:-0.4191em;"></span><span class="mop"><span class="mop"><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">min</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2809em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4191em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">GM</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:1.3105em;vertical-align:-0.4191em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">4</span></span><span class="mord">)</span></span></span></span></span></span></p><p>在接下来，作者做了一个简化，即”假设所有剪去的卷积核都在几何中心“，也就是</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>F</mi><mrow><mi>i</mi><mo separator="true">,</mo><msup><mi>j</mi><mo>∗</mo></msup></mrow></msub><mo>−</mo><msubsup><mi>F</mi><mi>i</mi><mrow><mi>G</mi><mi>M</mi></mrow></msubsup><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub><mo>=</mo><mn>0</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(5)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">||F_{i,j^*}-F_i^{GM}||_2 = 0 \tag{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6183em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">GM</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="tag"><span class="strut" style="height:1.1774em;vertical-align:-0.2861em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">5</span></span><span class="mord">)</span></span></span></span></span></span></p><p>这样的话也就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>i</mi><mo separator="true">,</mo><msup><mi>j</mi><mo>∗</mo></msup></mrow></msub><mo>=</mo><mo>=</mo><msubsup><mi>F</mi><mi>i</mi><mrow><mi>G</mi><mi>M</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">F_{i,j^*}==F_i^{GM}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6183em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4413em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">GM</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span>，那么找到每个距离几何中位数最近的卷积核，就可以转成计算每个位于几何中心的卷积核，也就是这些卷积核全部满足（2）式的要求，即$$F_{i,j^<em>}\in\mathop{argmin}_{j^</em>\in[1,N_{i+1}]}g(x) \tag{6}$$</p><h1>伪代码</h1><p><img src="/img/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Pasted_image_20211118172210.png" alt=""></p><h1>实现代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_filter_similar</span>(<span class="hljs-params">self, weight_torch, compress_rate, distance_rate, length</span>):<br>    codebook = np.ones(length)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(weight_torch.size()) == <span class="hljs-number">4</span>:<br>        filter_pruned_num = <span class="hljs-built_in">int</span>(weight_torch.size()[<span class="hljs-number">0</span>] * (<span class="hljs-number">1</span> - compress_rate))<br>        similar_pruned_num = <span class="hljs-built_in">int</span>(weight_torch.size()[<span class="hljs-number">0</span>] * distance_rate)<br>        weight_vec = weight_torch.view(weight_torch.size()[<span class="hljs-number">0</span>], -<span class="hljs-number">1</span>)<br>        <span class="hljs-comment"># norm1 = torch.norm(weight_vec, 1, 1)</span><br>        <span class="hljs-comment"># norm1_np = norm1.cpu().numpy()</span><br>        norm2 = torch.norm(weight_vec, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>)<br>        norm2_np = norm2.cpu().numpy()<br>        filter_small_index = []<br>        filter_large_index = []<br>        filter_large_index = norm2_np.argsort()[filter_pruned_num:]<br>        filter_small_index = norm2_np.argsort()[:filter_pruned_num]<br><br>        <span class="hljs-comment"># distance using numpy function</span><br>        indices = torch.LongTensor(filter_large_index).cuda()<br>        weight_vec_after_norm = torch.index_select(weight_vec, <span class="hljs-number">0</span>, indices).cpu().numpy()<br>        <span class="hljs-comment"># for euclidean distance</span><br>        similar_matrix = distance.cdist(weight_vec_after_norm, weight_vec_after_norm, <span class="hljs-string">&#x27;euclidean&#x27;</span>)<br>        <span class="hljs-comment"># for cos similarity</span><br>        <span class="hljs-comment"># similar_matrix = 1 - distance.cdist(weight_vec_after_norm, weight_vec_after_norm, &#x27;cosine&#x27;)</span><br>        similar_sum = np.<span class="hljs-built_in">sum</span>(np.<span class="hljs-built_in">abs</span>(similar_matrix), axis=<span class="hljs-number">0</span>)<br><br>        <span class="hljs-comment"># for distance similar: get the filter index with largest similarity == small distance</span><br>        similar_large_index = similar_sum.argsort()[similar_pruned_num:]<br>        similar_small_index = similar_sum.argsort()[:  similar_pruned_num]<br>        similar_index_for_filter = [filter_large_index[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> similar_small_index]<br><br>        kernel_length = weight_torch.size()[<span class="hljs-number">1</span>] * weight_torch.size()[<span class="hljs-number">2</span>] * weight_torch.size()[<span class="hljs-number">3</span>]<br>        <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(similar_index_for_filter)):<br>            codebook[<br>                similar_index_for_filter[x] * kernel_length: (similar_index_for_filter[x] + <span class="hljs-number">1</span>) * kernel_length] = <span class="hljs-number">0</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;similar index done&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">pass</span><br>            <span class="hljs-keyword">return</span> codebook<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>深度学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Note - Pruning Filter In Filter</title>
    <link href="/2021/11/19/Note%20-%20Pruning%20Filter%20In%20Filter/"/>
    <url>/2021/11/19/Note%20-%20Pruning%20Filter%20In%20Filter/</url>
    
    <content type="html"><![CDATA[<h1>介绍</h1><p>现在主流的剪枝操作可以分为权重剪枝和滤波器剪枝两个类别，其中滤波器剪枝的一个标准流程是：</p><ol><li>训练一个大网络直至收敛</li><li>根据一定的规则剪去一部分滤波器</li><li>对剪枝后的网络进行微调</li></ol><p>这些方法多数只是对网络的结构进行调整，而作者认为，不只是网络的结构有影响，滤波器本身的结构也很重要。Christian Szegedy[^ChristianSzegedy] 等人也提出了类似的想法。他们是手动设定了不同的 kernel size，但手动设置需要一定的专业知识和实验经验，且需要对网络进行特定的设计。因此作者想着，能不能通过对滤波器结构进行剪枝来自动选择出最优的卷积核尺寸。</p><p>作者提出了逐条剪枝的方法，一个滤波器的大小可以描述为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>∗</mo><mi>C</mi><mo>∗</mo><mi>K</mi><mo>∗</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">N*C*K*K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 和滤波器个数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 为滤波器（层）的通道数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>∗</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">K*K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 为滤波器的卷积核尺寸，而条的概念则是将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 去除，将同一位置，不同 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 的点视为一个整体，即一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>∗</mo><mi>K</mi><mo>∗</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">C*K*K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 的滤波器，可以分为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>K</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">K^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1\times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的长条，即一个 Stripe.</p><p><img src="/img/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Pasted_image_20211127111518.png" alt=""><br>通过对滤波器中每个 Stripe 的研究，计算每个 Stripe 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">l_1 norm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal">m</span></span></span></span>，得到了下图的结果。可以发现，每个滤波器中，每条 Stripe 所做出的贡献也是不同的，颜色深的 Stripe 所做出的贡献更大，而颜色深的则相对来说更加”不重要“，可以剪去。</p><p><img src="/img/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Pasted_image_20211127111021.png" alt=""></p><p>和其他滤波器剪枝方法的比较，如图一所示。Filter-Wise 和 Channel-Wise 方式剪枝的层面太大，可能会损失一些内容，而且无法进行更细的剪枝。而 Group-Wise 方法虽然也有更好的细粒度，但是它忽略了滤波器之间的独立性，即不同滤波器中的无效值的位置可能是不同的，通过 Group-Wise 方法剪枝，可能会剪去一部分有效值。</p><h1>提出的方法</h1><h2 id="1-滤波器骨架-Filter-Skeleton（FS）">1. 滤波器骨架-Filter Skeleton（FS）</h2><p>滤波器骨架是一个描述滤波器形状的矩阵，即在这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>∗</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">K*K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 个 Stripe 中，该 Filter 中哪几个 Stripe 是有效的，如下图所示。</p><p><img src="/img/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/%5BPasted_image_20211127115139.png" alt=""><br>每个 FS 一开始都是一个全一矩阵，在训练时，将 FS 与滤波器权重相乘，即 1 的位置留下，0 的位置去除。其损失函数表示为</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>L</mi><mo>=</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></munder><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>W</mi><mo>⊙</mo><mi>I</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">L = \sum_{(x,y)}loss(f(x,W\odot I),y) \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.566em;vertical-align:-1.516em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oss</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:2.566em;vertical-align:-1.516em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span> 代表 FS，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding="application/x-tex">\odot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">⊙</span></span></span></span> 代表点乘，接下来是将 FS 与滤波器权重相乘，即</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msubsup><mi>X</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>h</mi><mo separator="true">,</mo><mi>w</mi></mrow><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo>=</mo><munderover><mo>∑</mo><mi>c</mi><mi>C</mi></munderover><munderover><mo>∑</mo><mi>i</mi><mi>K</mi></munderover><munderover><mo>∑</mo><mi>j</mi><mi>K</mi></munderover><msubsup><mi>I</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>l</mi></msubsup><mo>×</mo><msubsup><mi>W</mi><mrow><mi>m</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>l</mi></msubsup><mo>×</mo><msubsup><mi>X</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>h</mi><mo>+</mo><mi>i</mi><mo>−</mo><mfrac><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo separator="true">,</mo><mi>w</mi><mo>+</mo><mi>j</mi><mo>−</mo><mfrac><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mrow><mi>l</mi></msubsup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">X^{l+1}_{n,h,w} = \sum^C_c\sum^K_i\sum^K_j I^l_{n,i,j}\times W^l_{m,c,i,j}\times X^l_{n,h+i-\frac{K+1}{2},w+j-\frac{k+1}{2}} \tag{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3267em;vertical-align:-0.4275em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.4086em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4275em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2421em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2822em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.5029em;vertical-align:-0.6038em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.637em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8721em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.88em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6038em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.2421em;vertical-align:-1.4138em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>(2) 式即带 FS 的卷积操作，在（1）式中，滤波器权重和 FS 一起进行优化，并且在训练之后，将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span> 合并到了权重之中，（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>⊙</mo><mi>I</mi><mo>→</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">W\odot I \to W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> )在接下来的评估过程中，只使用权重，借此，没有为网络添加额外的运算量。</p><h2 id="根据-FS-进行的逐条剪枝">根据 FS 进行的逐条剪枝</h2><p>为了获得一个剪枝程度更高的网络，我们需要让 FS 矩阵变得尽量稀疏，因此在损失函数中加入一个 FS 的正则项。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>L</mi><mo>=</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></munder><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>W</mi><mo>⊙</mo><mi>I</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>α</mi><mi>g</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">L = \sum_{(x,y)}loss(f(x,W\odot I),y)+\alpha g(I) \tag{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.566em;vertical-align:-1.516em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oss</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">αg</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:2.566em;vertical-align:-1.516em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其中α是控制正则项重要性的系数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span> 则是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">l_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 范数的惩罚值，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span> 可以表示为，因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">l_1norm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal">m</span></span></span></span> 就是权重的绝对值之和</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></munderover><mi>g</mi><mo stretchy="false">(</mo><msup><mi>I</mi><mi>l</mi></msup><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></munderover><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mi mathvariant="normal">∣</mi><msubsup><mi>I</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>l</mi></msubsup><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">g(I) = \sum^L_{l=1}g(I^l)=\sum^L_{l=1}(\sum^N_{n=1}\sum^K_{i=1}\sum^K_{j=1}|I^l_{n,i,j}|) \tag{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2421em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:3.2421em;vertical-align:-1.4138em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">4</span></span><span class="mord">)</span></span></span></span></span></span></p><p>接下来，作者设置了一个阈值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>，小于这个阈值的 Stripe 都被视为不重要的，所以可以删去。==另外值得注意的一点是，经过剪枝后的滤波器已经不再完整，所以我们不能直接用一整个滤波器去进行卷积运算，而是用每个单独 Stripe 去进行卷积运算，再将得到的结果相加。== 如下图所示</p><p><img src="/img/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/Pasted_image_20211127142133.png" alt=""><br>用数学公式可以这么表示</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msubsup><mi>X</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>h</mi><mo separator="true">,</mo><mi>w</mi></mrow><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mi>c</mi><mi>C</mi></munderover><munderover><mo>∑</mo><mi>i</mi><mi>K</mi></munderover><munderover><mo>∑</mo><mi>j</mi><mi>K</mi></munderover><msubsup><mi>W</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>l</mi></msubsup><mo>×</mo><msubsup><mi>X</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>h</mi><mo>−</mo><mi>i</mi><mo>+</mo><mfrac><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo separator="true">,</mo><mi>w</mi><mo>−</mo><mi>j</mi><mo>+</mo><mfrac><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mrow><mi>l</mi></msubsup><mspace width="2em"/><mi>s</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi>a</mi><mi>r</mi><mi>d</mi><mtext>  </mtext><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>o</mi><mi>l</mi><mi>u</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mi>i</mi><mi>K</mi></munderover><munderover><mo>∑</mo><mi>j</mi><mi>K</mi></munderover><mo stretchy="false">(</mo><munderover><mo>∑</mo><mi>c</mi><mi>C</mi></munderover><msubsup><mi>W</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>l</mi></msubsup><mo>×</mo><msubsup><mi>X</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>h</mi><mo>−</mo><mi>i</mi><mo>+</mo><mfrac><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo separator="true">,</mo><mi>w</mi><mo>−</mo><mi>j</mi><mo>+</mo><mfrac><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mrow><mi>l</mi></msubsup><mo stretchy="false">)</mo><mspace width="1em"/><mi>s</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>p</mi><mi>e</mi><mtext>  </mtext><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi><mtext>  </mtext><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>o</mi><mi>l</mi><mi>u</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(5)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{equation} \begin{split} X^{l+1}_{n,h,w}&amp;=\sum^C_c\sum^K_i\sum^K_jW^l_{n,c,i,j}\times X^l_{n,h-i+\frac{K+1}{2},w-j+\frac{K+1}{2}}\qquad standard\ \ convolution \\&amp;=\sum^K_i\sum^K_j(\sum^C_cW^l_{n,c,i,j}\times X^l_{n,h-i+\frac{K+1}{2},w-j+\frac{K+1}{2}}) \quad stripe \ \ wise \ \ convolution\end{split}\end{equation}\tag{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.0842em;vertical-align:-3.2921em;"></span><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7921em;"><span style="top:-5.7921em;"><span class="pstrut" style="height:5.7921em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7921em;"><span style="top:-5.7921em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.4086em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4275em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2921em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7921em;"><span style="top:-5.7921em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.6425em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8721em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8721em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5983em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathnormal">co</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.6425em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8721em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8721em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5983em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">se</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathnormal">co</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2921em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2921em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:7.0842em;vertical-align:-3.2921em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">5</span></span><span class="mord">)</span></span></span></span></span></span></p><p>在式子中可以看到，和正常的卷积操作相比，这里只是变换了一下计算顺序。<br>原本先计算一个卷积核的卷积结果，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mi>K</mi><mo>×</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">1\times K\times K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 的卷积核计算得到的”面“，再将每层卷积核得到的“面”进行叠加，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mi>K</mi><mo>×</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">1\times K\times K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 的卷积核得到的面相加。<br>这里先则计算一“条”的卷积结果，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C\times 1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的卷积核计算得到的面，再将每”条“放在一起，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>×</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">K\times K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C \times 1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的卷积核得到的面相加，即如上图所示，不过这里不是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>K</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">K^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个 Stripe，而是额外保存的有效的 Stripe 的索引位置。<br>==在实验中作者还发现，在靠近输入的卷积层中，滤波器一般有较多的 Stripe 是有效的，而在中间层中，大多数的 Filter 都只有少量有效的 Stripe，说明冗余很可能出现在中间的几层==</p><p>[^ChristianSzegedy]:<br>Going Deeper With Convolutions, CVPR June 2015<br>Rethinking The Inception Architecture for Computer Vision, CVPR 2016</p>]]></content>
    
    
    <categories>
      
      <category>深度学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>卷积核kernel、滤波器filter、层layer的概念区别</title>
    <link href="/2021/11/19/%E5%8D%B7%E7%A7%AF%E6%A0%B8kernel%E3%80%81%E6%BB%A4%E6%B3%A2%E5%99%A8filter%E3%80%81%E5%B1%82layer%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8C%BA%E5%88%AB/"/>
    <url>/2021/11/19/%E5%8D%B7%E7%A7%AF%E6%A0%B8kernel%E3%80%81%E6%BB%A4%E6%B3%A2%E5%99%A8filter%E3%80%81%E5%B1%82layer%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<p>在单通道版本中，卷积核和滤波器两者等价。滤波器相当于是卷积核的一个集合。</p><h1>单通道版本</h1><p><img src="https://img2018.cnblogs.com/common/1785246/201912/1785246-20191214195513331-1693646023.gif" alt=""><br>如上图所示，卷积是元素对元素的加法和乘法。这里的滤波器是一个 3*3 的矩阵[[0, 1, 2], [2, 2, 0], [0, 1, 2]]，滤波器滑过输入，在每个位置完成一次卷积，得到一个数值，最终输出仍是一个 3*3 的矩阵。这里滑动的可以说是卷积核，也可以说是滤波器，两者在单通道时等价，此时的滤波器就是只有一个卷积核的集合。</p><h1>多通道版本</h1><p>此处介绍一些术语，层 - layer，channel - 通道，feature map - 特征图，filter - 滤波器，kernel - 卷积核。在这里通道和特征图是同一个意思，一层可以有多个通道（也可以说有多个特征图）如果输入的是一个 RGB 图像，那么就有 3 个通道。<br>”channel“ 是通常被用来描述 ”layer“ 的结构，相似的，”kernel“ 是通常被用来描述 ”filter“ 的结构，layer 和一个个 ”channel“ 堆叠而成，”filter“ 则是一个个 ”kernel“ 堆叠而成。一个 ”kernel“ 更倾向于是 2D 的权重矩阵，而 ”filter“ 则是多个 ”kernel“ 堆叠的 3D 结构。<img src="https://img2018.cnblogs.com/common/1785246/201912/1785246-20191214201201316-462714398.jpg" alt=""></p><h1>2D 卷积</h1><p>在多通道卷积中，filter 的每个 kernel 在对应的 channel 上进行运算，得到 n 个中间输出结果，将这 n 个中间输出结果进行相加，得到一个单一通道的输出，这个单一通道的输出就是一个滤波器在 layer 中的输出结果。</p><p>例如输入是一个 5*5*3 的矩阵，filter 是一个 3*3*3 的矩阵。首先，filter 中的每个  kernel 分别应用于对应的 channel 中，执行三次卷积，得到 3 个 3*3 的特征图。<br><img src="https://img2018.cnblogs.com/common/1785246/201912/1785246-20191214202218587-778812877.gif" alt=""><br>然后，这三个通道相加（矩阵加法），得到一个 3*3*1 的单通道。这个通道就是在输入层（5*5*3 矩阵）应用 filter 的结果。<br><img src="https://img2018.cnblogs.com/common/1785246/201912/1785246-20191214202720666-1704576718.gif" alt=""><br>将图形转换成 3D 层面来看，就是一个 3D filter 的滑动过程，输入层和 filter 有相同的深度（channel 数量 = kernel 数量）<img src="https://img2018.cnblogs.com/common/1785246/201912/1785246-20191214203213122-417391637.jpg" alt=""><br>接下来，来看通过卷积操作进行层与层之间深度的转换。假设输入层有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">D_in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span></span></span></span> 个通道，我们想得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>o</mi></msub><mi>u</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">D_out</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span></span></span></span> 个通道。由上面内容可知，每个 filter 得到的输出都是一个单通道的结果，想要得到有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>o</mi></msub><mi>u</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">D_out</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span></span></span></span> 个通道的输出结果，我们只需要使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>o</mi></msub><mi>u</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">D_out</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span></span></span></span> 个 filter。即有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>o</mi></msub><mi>u</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">D_out</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span></span></span></span> 个 filter，每个 filter 有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">D_in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span></span></span></span> 个 kernel，完成卷积后将结果堆叠在一起，即得到输出层。<br><img src="https://img2018.cnblogs.com/common/1785246/201912/1785246-20191214203526665-1759964631.jpg" alt=""></p><p>虽然这里的卷积是 3D 的，但是因为 filter 的 kernel 数和 layer 的 channel 数相同，所以在深度方向卷积核不进行滑动，只在宽和高方向进行移动，单个 filter 得到的输出也是 2D 的，所以仍称为 2D 卷积</p><h1>3D 卷积</h1><p>3D 卷积相比上述 2D 卷积，则是在深度方向也进行滑动，即 filter 的 kernel 数要小于输入层的深度，所以 filter 需要在数据的三个维度上进行滑动，单个 filter 得到的结果也是 3D 的。<br><img src="https://img2018.cnblogs.com/common/1785246/201912/1785246-20191214204138798-1852777353.jpg" alt=""></p><hr><p>参考：<a href="https://www.cnblogs.com/elitphil/p/12040671.html">科普-深度学习中的卷积-卷积核和滤波器的区别 - 重大的小鸿 - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>深度学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《仙剑奇侠传七》游后感</title>
    <link href="/2021/10/18/%E3%80%8A%E4%BB%99%E5%89%91%E5%A5%87%E4%BE%A0%E4%BC%A0%E4%B8%83%E3%80%8B%E6%B8%B8%E7%8E%A9%E4%BD%93%E9%AA%8C/"/>
    <url>/2021/10/18/%E3%80%8A%E4%BB%99%E5%89%91%E5%A5%87%E4%BE%A0%E4%BC%A0%E4%B8%83%E3%80%8B%E6%B8%B8%E7%8E%A9%E4%BD%93%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h1>《仙剑奇侠传7》游玩体验</h1><p>这次买了份仙剑7的标准版实体版，原本是没打算预购的，但是一看这实体版只比数字版贵了10块钱，真香，在14日也是终于收到了实物，不过其实也没啥东西，图个新鲜感和收藏用😂之前玩了试玩版本，感觉总体还是不错的，这也是这次预购的原因之一。最后也是在今晚给通关了（全部支线完成…应该全部了吧）</p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/61991a8831e204185b1cceeac0f6ed94/thumb.jpeg" alt="img"></p><h2 id="翻车的解锁之日">翻车的解锁之日</h2><p>14日晚原本说的是8点开始预载，结果推迟到了10点，宿舍11点断电，晚上只好作罢，15号早上早早起来下载，下载了大半天，总算下完了，结果一看，诶！文件缺失！一修复，好家伙，又给完完整整地重新下载了一次，预购的提前体验体验了个寂寞😡😡而且这一天，平台的三四次更新又是闹什么玩意儿，不如纵身一跃入炎波，最后下午两点多总算开始了仙剑7之旅。</p><h4 id="纵身一跃入炎波">纵身一跃入炎波</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/172ae8ee17b862fe113540a71e2cfb62/thumb.png" alt="img"></p><h2 id="游玩体验">游玩体验</h2><p>撇开平台问题不谈，游戏的质量个人觉得还是可以的。</p><h3 id="操作">操作</h3><p>操作总体还是不错，攻击的特效之类的感觉都很棒，但是这个技能和攻击的硬直是不是太长了==</p><p>此外就是打击感的问题，在试玩版的短流程里，其实我觉得打击感还行，虽然不足，但不是不能接受，不过这次的正式版游玩就觉得不太行了，差不多所有的打击音效都是一样的==，Demo的短流程所以没觉得有什么不妥，但整个流程都是这样，难免有些…此外就是大家提到的受击反馈的问题了，这东西自然是有更好，但可能受限于技术或资金吧，算是遗憾，但我觉得不算是致命缺陷，整体的战斗体验只能说差强人意。</p><p>另外就是国产游戏的跳跃操作总是怪怪的==，判断不了距离，跳得又好高好高😂，平时整整还无妨，但这个跳跃体验配上平台跳跃小游戏”叶灵纵“，属实给我整的脑溢血了。</p><h4 id="不如看会儿文章吧">不如看会儿文章吧</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/43c5cdaa0a32bfd768de645c7e9f0efb/thumb.png" alt="img"></p><h3 id="音乐">音乐</h3><p>游戏的音乐个人感觉还是不错，我其实打游戏时对背景音乐不会有太大的注意==，除非很突兀，或者真的很好听，所以只能说感觉很合适，没有让我觉得突兀的地方。古乐的第二部分那段音乐感觉听着很nice！</p><h2 id="画面">画面</h2><p>画面内容太多了，我要另开一个章节😀毕竟是虚幻引擎，画面真的很棒，几个城镇的设计也很妙。</p><h3 id="明庶门">明庶门</h3><p>明庶门其实没有截太多图片==，就是标准的古风古味的避世村庄的风景，第一次进到御灵园的时候还是被惊了一下，确实漂亮。</p><h4 id="明庶门夜景">明庶门夜景</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/62480c189eb817fdc0d270dc53f53ac5/thumb.png" alt="img"></p><h4 id="御灵园">御灵园</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/4f4733bd2e9c956e21c5a4b78c229c10/thumb.png" alt="img"></p><h3 id="仙霞派">仙霞派</h3><p>仙霞派所在的峨眉山，刚进山门就是一副让人惊叹的美景，站在小桥之上，或是仙霞之地遥望远景，真真切切地感受到一份不同的美感，也许这就是”画意“吧，真的就像是置身于国画所描绘的美景之中。那种朦朦胧胧的感觉，明暗交接的墨迹质感，太妙了。</p><h4 id="峨眉山门">峨眉山门</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/2b5d3cba2379c42af54f38d658d025b1/thumb.png" alt="img"></p><h4 id="画意山水">画意山水</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/1e6f0e8aa663f2bf9806e9fbb157c67e/thumb.png" alt="img"></p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/dcb68fc674dd38f9f10c78c902dbde1f/thumb.png" alt="img"></p><h4 id="仙霞派-2">仙霞派</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/b8189cbb71c33aa6cca63dabef9f4cdb/thumb.png" alt="img"></p><h3 id="卢龙府-长白山">卢龙府&amp;长白山</h3><p>满城银装，漫山冰雪，一片肃穆的严冬景象，我也不知道说啥，当风景照了，直接上照片吧😂</p><h4 id="长白山">长白山</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/bb39ace3d90519543aab855d077f28a4/thumb.png" alt="img"></p><h4 id="卢龙府">卢龙府</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/53d2852bac04645ecc97ff700d72caef/thumb.png" alt="img"></p><h4 id="卢龙府，晴妹这衣服的背影真好看">卢龙府，晴妹这衣服的背影真好看</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/1d11865cb1bdccb098e44a9ab5a63fb7/thumb.png" alt="img"></p><h3 id="天魔国">天魔国</h3><p>天魔国！天魔国！天魔国！</p><p>真的好漂亮，（完全不懂建筑，下述都是我的瞎扯==）感觉是中西风格的结合，以西方欧式教堂那类为主体，辅以东方元素进行点缀，真的太美了。</p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/a5809242682b5f316bf52527bb076873/thumb.png" alt="img"></p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/89a28bcbc5136e8c7bb056684970b180/thumb.png" alt="img"></p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/cc22eb14fa502ddf43801d05ca14a72c/thumb.png" alt="img"></p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/b96ebbd97924a88ed546293c08205226/thumb.png" alt="img"></p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/35674e819d1ba7d6ca15f2b8dda27138/thumb.png" alt="img"></p><h3 id="人物">人物</h3><p>晴姐真好看，晴妹真可爱😙</p><p>不过就是人物的脸==感觉算是国产特色了，永远都是200%磨皮效果，就很失真，但是看孟章那个脸就还好，感觉是有点纹理在的，而不是主角那么“完整彻底”的美白护肤效果，看个人喜好了，个人是觉得有点纹理会好一点。</p><hr><p>剧透，慎看==</p><p>=</p><p>=</p><p>=</p><p>=</p><p>=</p><p>=</p><p>=</p><h2 id="剧情">剧情</h2><p>剧情共33/34章（没去注意这个），感觉主线大纲还是老样子，玩了开头猜到结尾==，敖胥必定是坏的，跟孟章勾结，魁予必定是好的，魔族又是莫名其妙被搞了，男主也是幡然醒悟最后宰了敖胥。不过在细节方面还行。</p><p>整个下来好像也没啥印象深刻的，就觉得临近终章，修吾在子秋记忆里走的那一段体验不错（彼岸花真的是一种别样的美感）</p><h4 id="记忆中的彼岸花海">记忆中的彼岸花海</h4><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/12c935a00ee0a64610a4f1f83bbb9446/thumb.png" alt="img"></p><p>可能由于剧情线比较长，所以男女主以及男二女二的感情线也不会显得突兀，修吾的态度变化也很明显，”越来越像个人了“，就是最后那句”我喜欢你，想成为你希望遇到的那个人“，总觉得有点现代化的表述哈哈哈哈哈哈。</p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/0584f861413531e88d909c59651db9c0/thumb.png" alt="img"></p><p>在这几天的游玩期间，几个朋友聊起来的时候，一直在强调一个点”古剑死男主，仙剑死女主“的老传统，再加上这作前期疯狂暗示”共生之术“”消耗生命力“，总感觉女主要寄，再来个男二的终身不得离开毒瘴，怕不是要重演仙剑5的惨剧。结果最后来了个”偷师学艺“，女主没寄，男主替女主寄了==</p><p>总体感觉剧情就这样，个人感觉还行，但还是不如古剑3最后的收尾。</p><p>话说感觉看的几个国产内容好像都是有这么个”三界相隔“的概念，仙剑7里的绝地天通，神舞幻想里的相忘之阵，姜子牙里姜子牙断天梯，都是一种人不依赖于天，人应自当自立，无须他人干涉的想法。</p><h2 id="杂项">杂项</h2><p>最后扔几张截图==</p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/9b81611e20d876a208b7c991c48fe188/thumb.png" alt="img"></p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/a2105bcfdba0ec860b9482dfa411c842/thumb.png" alt="img"></p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/95eba03fb755cd51cb0d457189d41c6e/thumb.png" alt="img"></p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/75f863b4c5ffc7e87806d553b56392c2/thumb.png" alt="img"></p><p><img src="https://imgheybox.max-c.com/bbs/2021/10/18/420fffc249afef265bd53d1f8856e6de/thumb.png" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《九十六号公路》游后感</title>
    <link href="/2021/10/10/%E3%80%8A%E4%B9%9D%E5%8D%81%E5%85%AD%E5%8F%B7%E5%85%AC%E8%B7%AF%E3%80%8B%E6%B8%B8%E5%90%8E%E6%84%9F/"/>
    <url>/2021/10/10/%E3%80%8A%E4%B9%9D%E5%8D%81%E5%85%AD%E5%8F%B7%E5%85%AC%E8%B7%AF%E3%80%8B%E6%B8%B8%E5%90%8E%E6%84%9F/</url>
    
    <content type="html"><![CDATA[<h1>总览</h1><p>在九十六号公路中，你将扮演佩特里亚中的年轻人，去越过边境，逃往<s>美丽国</s>，或者通过选举投票来更换政权……国家的命运掌握在你的手中。</p><p>先说说游戏总体的感觉吧，类似于《看火人》一般的步行模拟器体验，画面风格也十分相近，总体观感很舒服，游戏的音乐也非常的棒，整体氛围烘托得很棒。在游戏中还加入一些小游戏，些许增加了游戏的可玩性。不过用手柄玩的时候，选那个对话选项，尤其是移动中的选项，简直折磨==</p><p><a href="http://images.starnight.top/img/20211010132314.png"><img src="http://images.starnight.top/img/20211010132314.png" alt="img"></a></p><h1>背景感受</h1><p>再说说游戏的故事背景，我很难不把美国代入到这个佩特里亚之中，亦或者说美国+墨西哥的结合体。两个党派的支持者互相对立，水火不容，就如同美国共和党和民主党一般，红色党派的混乱是否又跟川建国同志治下的美国一般。</p><p>影响大剧情的对话分为三条线，一是支持红党泰拉克，也就是现任政府，二是支持蓝党弗洛雷斯，三则是弃权逃离。以前我可能觉得如《刺客信条》中的“万物皆虚，万事皆允”般的自由是无上的，但现在想想，圣殿骑士所维护的秩序才应该是社会稳定的前提，当然不应是暴力高压维持的秩序，而泰拉克仿佛就是如此，也正是这种高压让我没有选择任何有利于泰拉克政党的选项，而对于弗洛雷斯的蓝色，游戏中并没有让我得知其政策及任何信息，游戏中所提供的选项文字，更是像极了NC粉，“我不管，反正只要弗洛雷斯上台就一定会改变的”，同样让我没有任何投其票的想法，所以可能我选择最多的反而是逃离路线的选项，以至于最后我的结局中弃权率高达45% ==，虽然在游戏一开始的意向选项中我选择的还是以投票方式进行变革，但可惜这个弗洛雷斯并没有任何能够说服我投票的地方。</p><p><a href="http://images.starnight.top/img/20211010132126.png"><img src="http://images.starnight.top/img/20211010132126.png" alt="img"></a></p><h1>角色</h1><h2 id="佐伊">佐伊</h2><p>佐伊的角色是能源部长的女儿，算是出身高层的革命者，我好像并没有刻意去推进佐伊线的进度，但就是让我总能让我遇见她==，可能这就是女主吧，所以她也是我唯一一个100%的角色。就我个人而言，佐伊整体感觉还是不错的，但是有些时候是不是，可以变通一下，也就不会被抓了==，没必要在不需要的地方较真。不过总体而言还是很不错的，在房车时的交流，在瀑布前的陪伴，是个很率真的女孩儿。</p><p><a href="http://images.starnight.top/img/20211010132816.png"><img src="http://images.starnight.top/img/20211010132816.png" alt="img"></a></p><h2 id="约翰-范妮">约翰&amp;范妮</h2><p>我对爸爸熊的感觉还针不戳，搭车遇见的时候性格挺好，热衷于革命但同时又反对暴力恐怖行为，是黑色旅中的重要角色，而相比之下罗伯特就显得激进得多。</p><p>妈妈熊我觉得也挺好，她是一个警察，是一个忠于职守的警察，虽然在玩家的劝说（<s>威胁</s>）下放了哪个被抓的年轻人，但也说明她是有良知的，不过在那个部分中，她似乎是不知道矿坑的存在，而最后一个角色，玩家被抓了之后，她也出现在了那个监狱中，是不是已经得知了矿坑的存在？不过作为体制内的角色，她也并不能做些什么。她同时也是一个妈妈，是一个深爱孩子的妈妈（尽管孩子已经把她当作ex Mom了 ==）</p><p>这俩的结局有点可惜，或许只是在我这个结局里比较可惜==，但一个警察，一个通缉犯，两者的恋情终究不会顺畅吧。</p><p><a href="http://images.starnight.top/img/20211010134015.png"><img src="http://images.starnight.top/img/20211010134015.png" alt="img"></a></p><p><a href="http://images.starnight.top/img/20211010134223.png"><img src="http://images.starnight.top/img/20211010134223.png" alt="img"></a></p><h2 id="斯坦-米齐-桑亚">斯坦&amp;米齐&amp;桑亚</h2><p>一家人就要整整齐齐。斯坦&amp;米齐，也就是低智商罪犯团队，这俩真的不是来演喜剧的吗==，不过就这俩，到处打劫但安然无恙，众多用钱就能收买的警察，什么叫自由啊（后仰）不过再“终极抢银行问答”中我选了大银行，他们最后居然还真抢成功了==</p><p>桑亚，桑亚，桑亚，我只能说，Disgusting</p><p>泰拉克最仰赖的媒体人员，既得利益者，尖酸刻薄</p><p>开车的时候让我跳舞？？动不动大吼大叫？？一副居高临下的模样？？卖了亚当又把自己撇得一干二净？？让我都觉得关于萝拉的那一段是不是鳄鱼的眼泪。实在是不想推进该线剧情。</p><p><a href="http://images.starnight.top/img/20211010134958.png"><img src="http://images.starnight.top/img/20211010134958.png" alt="img"></a></p><p><a href="http://images.starnight.top/img/20211010135139.png"><img src="http://images.starnight.top/img/20211010135139.png" alt="img"></a></p><h2 id="艾利克斯">艾利克斯</h2><p>天才，确实是天才，不过毕竟是小孩子，自己的父母是恐怖分子，外加罗伯特的煽动，就认定自己也应该是恐怖分子了==，好在最后倒是救回来了。</p><p><a href="http://images.starnight.top/img/20211010135541.png"><img src="http://images.starnight.top/img/20211010135541.png" alt="img"></a></p><h2 id="克罗德">克罗德</h2><p>沉溺悲伤导致有点神经质的出租车司机。其实能理解，对于桑亚和黑色旅的恨意让他成了这样，生活的目标只剩下了复仇，不过这哥真是这游戏的惊悚担当，每次他一出现BGM就阴森了起来，几次跳脸也吓了我一跳==</p><p><a href="http://images.starnight.top/img/20211010140233.png"><img src="http://images.starnight.top/img/20211010140233.png" alt="img"></a></p><h1>结局</h1><p>我这儿最后还是爆发了抗议示威，在军民交火之后，重新举行的大选举中，弗洛雷斯以压倒性的优势战胜了泰拉克（《They Steal The Election》.jpg），但佩塔利亚何去何从还是个未知数==</p><p><a href="http://images.starnight.top/img/20211010140535.png"><img src="http://images.starnight.top/img/20211010140535.png" alt="img"></a></p><h1>风景照</h1><p><a href="http://images.starnight.top/img/20211010140635.png"><img src="http://images.starnight.top/img/20211010140635.png" alt="img"></a></p><p><a href="http://images.starnight.top/img/20211010140722.png"><img src="http://images.starnight.top/img/20211010140722.png" alt="img"></a></p><p><a href="http://images.starnight.top/img/20211010140820.png"><img src="http://images.starnight.top/img/20211010140820.png" alt="img"></a></p><p><a href="http://images.starnight.top/img/20211010140923.png"><img src="http://images.starnight.top/img/20211010140923.png" alt="img"></a></p><p><a href="http://images.starnight.top/img/20211010141144.png"><img src="http://images.starnight.top/img/20211010141144.png" alt="img"></a></p><p><a href="http://images.starnight.top/img/20211010141346.png"><img src="http://images.starnight.top/img/20211010141346.png" alt="img"></a></p><p><a href="http://images.starnight.top/img/20211010141952.png"><img src="http://images.starnight.top/img/20211010141952.png" alt="img"></a></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客使用Github作为图床</title>
    <link href="/2021/09/24/%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8Github%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/"/>
    <url>/2021/09/24/%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8Github%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/</url>
    
    <content type="html"><![CDATA[<p>使用GitHub作为图床，使用PicGo作为上传图片的工具</p><span id="more"></span><h2 id="创建Github图床">创建Github图床</h2><p>在这里我们需要额外新建一个库用来存储图片而不能在原来库的基础上进行存储，因为hexo在上传时会将服务器中的文件全部清空，然后再将本地文件进行上传。所以如果我们将图床地址设置为原有的库的话，在hexo deploy后，库中上传的图片都会被删除，这样图片链接自然就失效了，因此我们需要新建一个库。</p><p>首先在GitHub上新建一个新的repo。然后在settings中打开pages页面，设置一个自定义域名，这里就使用的博客域名下的二级域名images.starnight.top，在阿里云的云解析DNS中添加该二级域名的CNAME解析文件。</p><p>然后在该库中新建一个index.html文件，如果没有该文件，GitPages无法生成站点，打开会是个404报错，自然也就无法引用图片了。</p><h2 id="设置PicGo">设置PicGo</h2><p>在Github上下载<a href="https://github.com/Molunerfinn/PicGo/releases">PicGo</a>，在PicGo应用中选中Github图床进行设置</p><p><a href="http://images.starnight.top/img/20210924180908.png"><img src="http://images.starnight.top/img/20210924180908.png" alt="img"></a></p><p><strong>设定仓库名</strong>：即新创建的用于存放图片的repo</p><p><strong>设定分支名</strong>：即选定仓库的选定分支名称</p><p><strong>设定Token</strong>：Github生成的验证Token，见下</p><p><strong>指定存储路径</strong>：即图片在Github库中的存放位置，默认情况下存放在库中的根目录下</p><p><strong>设定自定义域名</strong>：即我们在settings中所设定的自定义域名</p><p>设置完成后即可进行图片的上传了。</p><h2 id="生成Token">生成Token</h2><p><a href="http://images.starnight.top/img/20210924181318.png"><img src="http://images.starnight.top/img/20210924181318.png" alt="img"></a></p><p>点击头像中的Settings，在左侧选项选择<code>Developer settings</code>，选择<code>Personal access tokens</code>，然后在右侧点击<code>Generate new token</code>来生成新的token</p><p><a href="http://images.starnight.top/img/20210924181536.png"><img src="http://images.starnight.top/img/20210924181536.png" alt="img"></a></p><p>此处只要勾选repo即可</p><p><a href="http://images.starnight.top/img/20210924181602.png"><img src="http://images.starnight.top/img/20210924181602.png" alt="img"></a></p><blockquote><p>参考</p><p><strong>知乎文章 -</strong><a href="https://zhuanlan.zhihu.com/p/138012354">zhuanlan.zhihu.com/p/138012354</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android 安装应用出现INSTALL_FAILED_SHARED_USER_INCOMPATIBLE</title>
    <link href="/2021/09/24/Android%E5%AE%89%E8%A3%85%E5%BA%94%E7%94%A8%E5%87%BA%E7%8E%B0INSTALL_FAILED_SHARED_USER_INCOMPATIBLE/"/>
    <url>/2021/09/24/Android%E5%AE%89%E8%A3%85%E5%BA%94%E7%94%A8%E5%87%BA%E7%8E%B0INSTALL_FAILED_SHARED_USER_INCOMPATIBLE/</url>
    
    <content type="html"><![CDATA[<p>Android-安装应用出现INSTALL-FAILED-SHARED-USER-INCOMPATIBLE</p><span id="more"></span><p>在修改了AndroidManifest.xml文件中sharedUserID的值后，运行app会提示该错误，网上的解决方案要么复杂要么就无脑删删删。</p><p>其实很简单，把应用卸载再重新安装就好了😅</p>]]></content>
    
    
    <categories>
      
      <category>errors</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓</tag>
      
      <tag>error</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cards主题个性化</title>
    <link href="/2021/09/24/Cards%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96/"/>
    <url>/2021/09/24/Cards%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>博客主题从Fluid更换到Cards也有一段时间了，对Cards主题做了一些自定义，包括首页的横幅图片以及一些样式的调整</p><span id="more"></span><h3 id="首页添加横幅图片">首页添加横幅图片</h3><p>在cards主题的示例博客中看到了<a href="https://alendia.dev/">Alendia’s Blog</a>，一点开就看到了首页的图片，觉得很好看，便想着在自己的博客中也实现该效果。查看cards的样式文件发现该处主要有4个部分的样式，分别是logo，头像和介绍文本的样式，这三个样式嵌套在类为cover的div中，那我们要做的就是在最外层的div中设置背景图片。</p><p><strong>首先设置图片样式</strong></p><p>找到主题目录下的<code>\source\css\style\_functions\cover.styl</code>，将原来的<code>.cover</code>修改为<code>.cover_none</code>，并另外添加下列样式代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.cover</span><br>    <span class="hljs-attribute">display</span>: block;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">3rem</span> auto;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">1rem</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10rem</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">background-size</span>: <span class="hljs-number">100%</span> auto;<br>    <span class="hljs-attribute">background-repeat</span>: no-repeat;<br>    <span class="hljs-attribute">background-position</span>: <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">85%</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">5px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.02</span>), <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">15px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.03</span>)<br><br>    .cover__logo<br>        max-width $max_width_logo<br>        margin-left auto<br>        margin-right auto<br><br>    .cover__avatar<br>        border-radius <span class="hljs-number">50%</span><br>        width $avatar_width<br>        height $avatar_height<br>        margin <span class="hljs-number">0</span> auto <span class="hljs-number">1rem</span> auto<br>    <br>    .cover__intro<br>        color: <span class="hljs-number">#fcfcfc</span><br><br>    .cover__title<br>        color: <span class="hljs-number">#fcfcfc</span><br></code></pre></td></tr></table></figure><p>可以在这里直接添加<code>background-image</code>属性来添加背景图片，但为了修改方便，我在这里将背景图片的设置方式移到了主题的<code>_config.yml</code>文件中，在<code>_config.yml</code>文件中的<code>cover</code>项中，添加一个<code>banner</code>属性，在其中输入图片地址。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml">cover: <br><br>  # 首页的横幅图片，输入图片地址<br>  banner: /img/banner.jpg<br>  # 显示在最上方 cover 处的站点名称<br>  sitename: Starry Night<br><br>  # 若 avatar 配置不为空，则优先使用 avatar 覆盖 sitename<br>  avatar: <br>  <br>  # sitename/avatar 下方的一句话介绍<br>  description:<br></code></pre></td></tr></table></figure><p>然后在<code>\layout\_partial\source\cover.ejs</code>文件中将代码修改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ejs">&lt;%- partial(&#x27;./header&#x27;, null, &#123;cache: false, path: path&#125;) %&gt;<br>&lt;% if (page.cover !== false) &#123; %&gt;<br>    &lt;% if (theme.cover.banner) &#123; %&gt;<br>        &lt;div class=&quot;cover&quot; style=&#x27;background-image:url(&quot;&lt;%= theme.cover.banner%&gt;&quot;)&#x27;&gt;<br>    &lt;% &#125; else &#123; %&gt;<br>        &lt;div class=&quot;cover_none&quot;&gt;<br>    &lt;% &#125; %&gt;<br>    <br>        &lt;div class=&quot;cover__logo&quot;&gt;<br>            &lt;% if (theme.cover.avatar) &#123; %&gt;<br>                &lt;img no-lazy alt=&quot;author Image&quot; class=&quot;cover__avatar&quot; src=&quot;&lt;%= url_for(theme.cover.avatar) %&gt;&quot;&gt;<br>            &lt;% &#125; else if (theme.cover.sitename) &#123; %&gt;<br>                &lt;h1 class=&quot;cover__title&quot; &gt;&lt;%= theme.cover.sitename %&gt;&lt;/h1&gt;<br>            &lt;% &#125; else if (config.title) &#123; %&gt;<br>                &lt;h1 class=&quot;cover__title&quot; &gt;&lt;%= config.title %&gt;&lt;/h1&gt;<br>            &lt;% &#125; %&gt;<br>        &lt;/div&gt;<br>        <br>        &lt;% if (theme.cover.description) &#123; %&gt;<br>            &lt;div class=&quot;cover__intro&quot;&gt;<br>                &lt;%- markdown(theme.cover.description) %&gt; <br>            &lt;/div&gt;<br>        &lt;% &#125; %&gt;<br>    &lt;/div&gt;<br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure><p>其中主要部分在第一段<code>if、else</code>中，根据主题配置文件中的属性值判断，若banner属性为空，则采用主题默认的样式，若banner属性不为空，则采用另设的样式，显示背景图片。</p><hr><h3 id="一言及页尾添加自定义内容">一言及页尾添加自定义内容</h3><p>和<a href="https://starnight.top/2020/02/24/fluid%E4%B8%AA%E6%80%A7%E5%8C%96/#%E4%B8%80%E8%A8%80">fluid个性化</a>中写的一样，cards中对应的内容在</p><p>页首：<code>\layout\_partial\source\cover.ejs</code></p><p>页脚：<code>\layout\_partial\source\footer.ejs</code></p><hr><h3 id="修改样式">修改样式</h3><p><strong>修改行代码块样式</strong></p><p>修改<code>\source\css\style\_base\markdown.styl</code>文件中的<code>code</code>类样式</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">code</span><br>    <span class="hljs-attribute">padding</span> .<span class="hljs-number">2em</span> .<span class="hljs-number">4em</span><br>    <span class="hljs-attribute">margin</span> <span class="hljs-number">0</span><br>    <span class="hljs-attribute">font-size</span> <span class="hljs-variable">$code_fontsize</span><br>    <span class="hljs-attribute">background-color</span> <span class="hljs-built_in">var</span>(--bg-code)<br>    <span class="hljs-attribute">border-radius</span> <span class="hljs-number">3px</span><br>    <span class="hljs-attribute">color</span> <span class="hljs-number">#338bd4</span><br></code></pre></td></tr></table></figure><p><strong>修改目录样式</strong></p><p>原有的目录样式感觉离文章太近，因此想要增加一些距离</p><p>修改<code>\source\css\style\_functions\toc.styl</code>文件中的<code>post-side\.post-side__toc\.toc</code>处的样式代码，将其中的<code>padding-left</code>由<code>0.6rem</code>修改为<code>1rem</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-class">.toc</span><br>    <span class="hljs-attribute">display</span> none<br>    <span class="hljs-attribute">width</span> <span class="hljs-string">&#x27;calc((100vw - %s) / 2 - 12.6px)&#x27;</span> % <span class="hljs-variable">$max_width_main</span><br>    <span class="hljs-attribute">height</span> <span class="hljs-string">&#x27;calc(100vh - %s * 2 - 20px)&#x27;</span> % <span class="hljs-variable">$header_height</span><br>    <span class="hljs-attribute">padding-left</span> <span class="hljs-number">1rem</span><br></code></pre></td></tr></table></figure><hr><h3 id="文章封面设置属性兼容index-img">文章封面设置属性兼容index_img</h3><p>原来使用的是Fluid主题，其中文章封面的设置使用的是<code>index_img</code>属性，而cards主题使用的是<code>thumbnail</code>属性，文章较多懒得一一修改，便想着怎么让cards也可以使用<code>index_img</code>属性。在<code>\layout\_meta\thumbnail.ejs</code>文件中，将代码修改成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ejs">&lt;% if (theme.meta.thumbnail.enable === true &amp;&amp; (post.thumbnail || theme.meta.thumbnail.default || post.index_img)) &#123; %&gt;<br>    &lt;% if (theme.lazyload &amp;&amp; theme.lazyload.enable === true) &#123; %&gt;<br>        &lt;div class=&quot;post-thumbnail lazy&quot; data-bg=&quot;&lt;%= post.thumbnail || post.index_img || theme.meta.thumbnail.default %&gt;&quot;&gt;&lt;/div&gt;<br>    &lt;% &#125; else &#123; %&gt;<br>        &lt;div class=&quot;post-thumbnail&quot; style=&quot;background-image: url(&#x27;&lt;%= post.thumbnail || post.index_img || theme.meta.thumbnail.default %&gt;&#x27;);&quot;&gt;&lt;/div&gt;<br>    &lt;% &#125; %&gt;<br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>美化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MyBatis基础使用</title>
    <link href="/2020/11/29/MyBatis%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/11/29/MyBatis%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>MyBatis的一些基础使用方法和配置。</p><span id="more"></span><h2 id="概要内容">概要内容</h2><h3 id="POJO类">POJO类</h3><p>相当于Bean类，在POJO包下创建对象类</p><hr><h3 id="配置文件">配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 配置环境 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">environments</span> <span class="hljs-attr">default</span>=<span class="hljs-string">&quot;mysql&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">environment</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;mysql&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">transactionManager</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;JDBC&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dataSource</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;POOLED&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driver&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">value</span>=<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/j2ee&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;root&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dataSource</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">environment</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">environments</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 配置映射文件的位置 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mappers</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;mapper/Login.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mappers</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>&lt;dataSource&gt;</code>元素的四个属性用于配置数据库的驱动、URL、用户名和密码</p><p><code>&lt;mapper&gt;</code>元素用于指定配置映射文件的位置，这里是<code>mapper</code>包下的<code>Login.xml</code>文件，如有多个文件都应该在这里进行引入。</p><hr><h3 id="配置映射文件">配置映射文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;mapper namespace=<span class="hljs-string">&quot;login&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">select</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;findUserByID&quot;</span> parameterType=<span class="hljs-string">&quot;String&quot;</span><br>resultType=<span class="hljs-string">&quot;pojo.User&quot;</span>&gt;<br><span class="hljs-keyword">select</span> * from User <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span> = <span class="hljs-comment">#&#123;id&#125;</span><br>&lt;/select&gt;<br>&lt;/mapper&gt;<br></code></pre></td></tr></table></figure><p>即在该文件里写Sql语句，查询用<code>select</code>，插入用<code>insert</code>等，其余类似，通过标签来区分。<code>id</code>为方法名，<code>parameterType</code>为所需的参数类型，<code>resultType</code>为返回类型</p><hr><h3 id="调用">调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//读取配置文件</span><br><span class="hljs-type">String</span> <span class="hljs-variable">resource</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;mybatis-config.xml&quot;</span>;<br><span class="hljs-keyword">try</span>&#123;<br><span class="hljs-type">InputStream</span> <span class="hljs-variable">in</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(resource);<br><span class="hljs-comment">//创建SQLSessionFactory对象</span><br><span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">factory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>().build(in);<br><span class="hljs-comment">//创建SqlSession对象</span><br><span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span> factory.openSession();<br>    <span class="hljs-comment">//调用SqlSession对象的方法，例如</span><br>    <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> sqlSession.selectOne(<span class="hljs-string">&quot;login.findUserByID&quot;</span>,ID);<br>&#125;<br></code></pre></td></tr></table></figure><p>其中，<code>selectone</code>表示返回一条记录信息，两个参数，前者是调用的方法名，即<code>Login</code>文件中<code>login</code>命名空间下的<code>findUserByID</code>方法，后者是方法所需的参数。</p><p>需要返回多条信息可以使用<code>selectList</code>方法。</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pf">List<span class="hljs-variable">&lt;Student&gt;</span> selectList = sqlSession.selectList(<span class="hljs-string">&quot;student.findStudentBySname&quot;</span>, <span class="hljs-string">&quot;ZhangSan&quot;</span>);<br><span class="hljs-keyword">for</span> (Student student : selectList) &#123;<br>System.<span class="hljs-keyword">out</span>.println(student.<span class="hljs-keyword">to</span>String());<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="配置文件详解">配置文件详解</h2><h3 id="properties">properties</h3><p><code>&lt;properties&gt;</code>元素有两种定义方法。</p><p>一是通过其子元素<code>&lt;property&gt;</code>完成属性传递。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><span class="hljs-comment">&lt;!--属性--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driver&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">value</span>=<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/j2ee&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;root&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br></code></pre></td></tr></table></figure><p>和之前的<code>&lt;dataSource&gt;</code>里的配置并无两异，只不过在这里对其进行了事先的定义，之后直接调用即可，相当于定义了变量。</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">dataSource</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driver&quot;</span> <span class="hljs-attr">value</span>= <span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;driver&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 下略 --&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">dataSource</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>二是通过<code>properties</code>文件实现</p><p>在<code>src</code>目录下新建一个<code>db.properties</code>文件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">textjdbc.<span class="hljs-attribute">driver</span>=com.mysql.jdbc.Driver<br>jdbc.<span class="hljs-attribute">url</span>=jdbc:mysql://localhost:3306/j2ee<br>下略<br></code></pre></td></tr></table></figure><p>然后在配置文件中进行引用</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;properties <span class="hljs-attribute">resource</span>=<span class="hljs-string">&quot;database.properties&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p>在后续代码中同样可以直接引用。</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">dataSource</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driver&quot;</span> <span class="hljs-attr">value</span>= <span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;jdbc.driver&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 下略 --&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">dataSource</span>&gt;</span></span><br></code></pre></td></tr></table></figure><hr><h3 id="typeAliases">typeAliases</h3><p>别名，通过使用别名来缩短类的完全限定名长度。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">typeAliases</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">typeAlias</span> <span class="hljs-attr">alias</span>=<span class="hljs-string">&quot;user&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;pojo.User&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">typeAliases</span>&gt;</span><br></code></pre></td></tr></table></figure><p>通过上述配置即可用<code>user</code>代替<code>pojo.User</code></p><p>另外，MyBatis支持通过扫描包的形式设置别名。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">typeAliases</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pojo&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">typeAliases</span>&gt;</span><br></code></pre></td></tr></table></figure><p>通过扫描包，包内所有类都将获得一个首字母小写的别名，例如<code>pojo.User</code>的别名即为<code>user</code></p><p>也可以通过使用注解的方式设置别名，在<code>pojo</code>类中加入注解</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Alias(value=<span class="hljs-string">&quot;user&quot;</span>)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span>&#123;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="environments">environments</h3><p>用于定义数据库相关信息。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;environments default<span class="hljs-operator">=</span><span class="hljs-string">&quot;mysql&quot;</span>&gt;<br>    &lt;environment id<span class="hljs-operator">=</span><span class="hljs-string">&quot;mysql&quot;</span>&gt;<br>        &lt;transactionManager type<span class="hljs-operator">=</span><span class="hljs-string">&quot;JDBC&quot;</span> /&gt;<br>        &lt;dataSource type<span class="hljs-operator">=</span><span class="hljs-string">&quot;POOLED&quot;</span>&gt;<br>            &lt;property name<span class="hljs-operator">=</span><span class="hljs-string">&quot;driver&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;<br>            &lt;property name<span class="hljs-operator">=</span><span class="hljs-string">&quot;url&quot;</span><br>                      value<span class="hljs-operator">=</span><span class="hljs-string">&quot;jdbc:mysql://localhost:3306/j2ee&quot;</span> /&gt;<br>            &lt;property name<span class="hljs-operator">=</span><span class="hljs-string">&quot;username&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;root&quot;</span> /&gt;<br>            &lt;property name<span class="hljs-operator">=</span><span class="hljs-string">&quot;password&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;&quot;</span> /&gt;<br>        &lt;/dataSource&gt;<br>    &lt;/environment&gt;<br>&lt;/environments&gt;<br></code></pre></td></tr></table></figure><p><code>default</code>用于指定默认运行环境的id值，一个<code>&lt;environments&gt;</code>可以有多个<code>&lt;environment&gt;</code>子元素，每个<code>&lt;environment&gt;</code>用于定义一个运行环境。</p><p><code>&lt;transactionManager&gt;</code>中的<code>type</code>属性用于定义事务管理器的类型，有两种可选项<code>JDBC</code>和<code>MANAGED</code>，<code>JDBC</code>直接调用JDBC的提交和回滚设置。</p><p>MyBatis提供了三种数据源，即<code>POOLED</code>、<code>UNPOOLED</code>和<code>JNDI</code></p><p><strong>UNPOOLED</strong></p><p>非连接池请求，该类型数据源只是在被需求时才打开、关闭连接，适用于对性能要求不高的简单应用程序。有五个配置项。</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">driver`、`url`、`username`、`password<br></code></pre></td></tr></table></figure><p><strong>POOLED</strong></p><p>连接池类型，批量创建连接，使用时从池中取一，使用完释放为池中，使并发Web应用快速响应。</p><p>仍需配置上述四个选项，另有一些额外配置项，暂不提及。</p><p><strong>JNDI</strong></p><p>详见P29，暂不需使用。</p><hr><h2 id="映射文件详解">映射文件详解</h2><h3 id="select">select</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;<span class="hljs-keyword">select</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;findUserByID&quot;</span> parameterType=<span class="hljs-string">&quot;String&quot;</span><br>    resultType=<span class="hljs-string">&quot;pojo.User&quot;</span>&gt;<br>    <span class="hljs-keyword">select</span> * from User <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span> = <span class="hljs-comment">#&#123;id&#125;</span><br>&lt;/select&gt;<br></code></pre></td></tr></table></figure><p>用<code>&lt;select&gt;</code>标签来映射一个查询语句，<code>id</code>为方法名，<code>parameterType</code>为所需的参数类型，<code>resultType</code>为返回类型。用<code>#&#123;&#125;</code>来表示通过占位符接收参数id。</p><hr><h3 id="insert等元素">insert等元素</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&lt;<span class="hljs-keyword">insert</span> id=&quot;addUser&quot; parameterType=&quot;pojo.User&quot; &gt;<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">User</span>(id,<span class="hljs-type">name</span>,psw) <span class="hljs-keyword">values</span>(#&#123;id&#125;,#&#123;<span class="hljs-type">name</span>&#125;,#&#123;psw&#125;)<br>&lt;/<span class="hljs-keyword">insert</span>&gt;<br><br>&lt;<span class="hljs-keyword">update</span> id=&quot;updateUser&quot; parameterType=&quot;pojo.User&quot; &gt;<br><span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> <span class="hljs-type">name</span> = #&#123;<span class="hljs-type">name</span>&#125;, psw = #&#123;psw&#125; <span class="hljs-keyword">where</span> id = #&#123;id&#125;<br>&lt;/<span class="hljs-keyword">update</span>&gt;<br><br>&lt;<span class="hljs-keyword">delete</span> id=&quot;deleteUser&quot; parameterType=&quot;Integer&quot;&gt;<br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> id = #&#123;id&#125;<br>&lt;/<span class="hljs-keyword">delete</span>&gt;<br></code></pre></td></tr></table></figure><hr><h3 id="sql">sql</h3><p><code>&lt;sql&gt;</code>元素用于定义重用的Sql代码片段</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">sql</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;studentCols&quot;</span>&gt;</span><br>sid,sname,age,course<br><span class="hljs-tag">&lt;/<span class="hljs-name">sql</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在后续代码中调用该代码片段</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs axapta">&lt;<span class="hljs-keyword">select</span> id=<span class="hljs-string">&quot;finbStudent&quot;</span> parameterType=<span class="hljs-string">&quot;Integer&quot;</span> resultType=<span class="hljs-string">&quot;pojo.Student&quot;</span>&gt;<br><span class="hljs-keyword">select</span> &lt;include refid=<span class="hljs-string">&quot;studentCols&quot;</span> /&gt;<span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> sid = <span class="hljs-meta">#&#123;sid&#125;</span><br>&lt;/<span class="hljs-keyword">select</span>&gt;<br></code></pre></td></tr></table></figure><hr><h3 id="resultMap">resultMap</h3><p>用于映射结果集，包括<code>&lt;association&gt;</code>、<code>&lt;collection&gt;</code>、<code>&lt;discriminator&gt;</code>等子元素，详见下一部分内容。</p><hr><h2 id="关联映射">关联映射</h2><h3 id="一对一">一对一</h3><p>在映射文件中添加<code>&lt;resultMap&gt;</code>元素的子元素<code>&lt;association&gt;</code>来进行一对一映射关系的配置。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;select <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;findUserInfoByID&quot;</span> parameterType=<span class="hljs-string">&quot;Integer&quot;</span><br>    resultMap=<span class="hljs-string">&quot;userInfoResultMap&quot;</span>&gt;<br>    select u.*, ui.* <span class="hljs-keyword">from</span> User u, user_information ui <span class="hljs-keyword">where</span> u.ID = ui.ID <span class="hljs-keyword">and</span> u.ID = <span class="hljs-comment">#&#123;ID&#125;</span><br>&lt;/select&gt;<br>&lt;resultMap type=<span class="hljs-string">&quot;pojo.User&quot;</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;userInfoResultMap&quot;</span>&gt;<br>    &lt;<span class="hljs-built_in">id</span> column=<span class="hljs-string">&quot;ID&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;ID&quot;</span> /&gt;<br>    &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;name&quot;</span> /&gt;<br>    &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;psw&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;psw&quot;</span> /&gt;<br>    &lt;association <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;user_info&quot;</span> javaType=<span class="hljs-string">&quot;pojo.user_information&quot;</span>&gt;<br>        &lt;<span class="hljs-built_in">id</span> column=<span class="hljs-string">&quot;ID&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;ID&quot;</span> /&gt;<br>        &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;birthday&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;birthday&quot;</span> /&gt;<br>        &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;sex&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;sex&quot;</span> /&gt;<br>        &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;nation&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;nation&quot;</span> /&gt;<br>        &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;hometown&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;hometown&quot;</span> /&gt;<br>    &lt;/association&gt;<br>&lt;/resultMap&gt;<br></code></pre></td></tr></table></figure><p>在User类中添加user_information的对象</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">user_information user_info<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><hr><h3 id="一对多">一对多</h3><p>在一对多的情况下就不是定义一个对象类，而是定义一个对象数组\列表</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">List&lt;StuInfo&gt; stuInfoList<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>在配置文件中，用<code>&lt;collection&gt;</code>来进行配置</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;select <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;findStuClassByCid&quot;</span> parameterType=<span class="hljs-string">&quot;Integer&quot;</span><br>    resultMap=<span class="hljs-string">&quot;stuClassResultsMap&quot;</span>&gt;<br>    select c.*,s.sid,s.sname,s.age,s.course <span class="hljs-keyword">from</span> stu_class c ,<br>    stu_info<br>    s <span class="hljs-keyword">where</span> s.classid = c.cid <span class="hljs-keyword">and</span> c.cid = <span class="hljs-comment">#&#123;cid&#125;</span><br>&lt;/select&gt;<br>&lt;resultMap type=<span class="hljs-string">&quot;stuClass&quot;</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;stuClassResultsMap&quot;</span>&gt;<br>    &lt;<span class="hljs-built_in">id</span> column=<span class="hljs-string">&quot;cid&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;cid&quot;</span> /&gt;<br>    &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;cname&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;cname&quot;</span> /&gt;<br>    &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;sum&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;sum&quot;</span> /&gt;<br>    &lt;collection <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;stuInfoList&quot;</span> ofType=<span class="hljs-string">&quot;stuInfo&quot;</span>&gt;<br>        &lt;<span class="hljs-built_in">id</span> column=<span class="hljs-string">&quot;sid&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;sid&quot;</span> /&gt;<br>        &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;sname&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;sname&quot;</span> /&gt;<br>        &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;age&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;age&quot;</span> /&gt;<br>        &lt;<span class="hljs-literal">result</span> column=<span class="hljs-string">&quot;course&quot;</span> <span class="hljs-keyword">property</span>=<span class="hljs-string">&quot;course&quot;</span> /&gt;<br>    &lt;/collection&gt;<br>&lt;/resultMap&gt;<br></code></pre></td></tr></table></figure><hr><h3 id="主键映射">主键映射</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">&lt;<span class="hljs-keyword">insert</span> id=<span class="hljs-string">&quot;addStuClass01&quot;</span> parameterType=<span class="hljs-string">&quot;stuClass&quot;</span> useGeneratedKeys=<span class="hljs-string">&quot;true&quot;</span>        keyProperty=<span class="hljs-string">&quot;cid&quot;</span>&gt;<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> stu_class(cname,<span class="hljs-built_in">sum</span>) <span class="hljs-keyword">values</span>(#&#123;cname&#125;, #&#123;<span class="hljs-built_in">sum</span>&#125;)<br>&lt;/<span class="hljs-keyword">insert</span>&gt;<br></code></pre></td></tr></table></figure><p><code>useGeneratedKeys</code>属性用于获取数据库内部产生的主键值，<code>KeyProperty</code>属性用于指定主键。</p><p>以上适用于主键自增的情况。如果不支持自增，则需要适用<code>&lt;selectKey&gt;</code>子元素来获取主键值。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">&lt;<span class="hljs-keyword">insert</span> id=<span class="hljs-string">&quot;addStuClass02&quot;</span> parameterType=<span class="hljs-string">&quot;stuClass&quot;</span>&gt;<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> stu_class(cname,<span class="hljs-built_in">sum</span>) <span class="hljs-keyword">values</span> (#&#123;cname&#125;,#&#123;<span class="hljs-built_in">sum</span>&#125;)<br>&lt;selectKey keyColumn=<span class="hljs-string">&quot;cid&quot;</span> keyProperty=<span class="hljs-string">&quot;cid&quot;</span> resultType=<span class="hljs-string">&quot;Integer&quot;</span> <span class="hljs-keyword">order</span>=<span class="hljs-string">&quot;AFTER&quot;</span>&gt;<br><span class="hljs-keyword">select</span> LAST_INSERT_ID()<br>&lt;/selectKey&gt;<br>&lt;/<span class="hljs-keyword">insert</span>&gt;<br></code></pre></td></tr></table></figure><p><code>keyProperty</code>属性用于指定数据表主键，<code>keyColumn</code>用于指定POJO对象的成员属性，<code>resultType</code>属性用于指定返回值类型，<code>order</code>属性即排序规则，视数据库而异。</p><hr><h2 id="动态SQL">动态SQL</h2><h3 id="if">if</h3><p><code>&lt;if&gt;</code>元素用于条件判断，类似于Java中的if，示例：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;findStudentBySnameAndCourse&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;student&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;student&quot;</span>&gt;</span></span><br><span class="language-xml">    select * from student where sname = #</span><span class="hljs-template-variable">&#123;sname&#125;</span><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--根据条件动态拼装SQL语句 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot; null!=course and &#x27;&#x27;!=course&quot;</span>&gt;</span></span><br><span class="language-xml">        and course =#</span><span class="hljs-template-variable">&#123;course&#125;</span><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>上述默认语句是<code>select * from student where sname = #&#123;sname&#125;</code>，而如果course不为空，则在后方加上<code>and course = #&#123;course&#125;</code>，<code>&lt;if&gt;</code>通常跟<code>test</code>属性一起使用。</p><hr><h3 id="choose、when、otherwise">choose、when、otherwise</h3><p><code>&lt;choose&gt;</code>类似于switch语句，每个<code>&lt;choose&gt;</code>元素中至少要包含1个<code>&lt;when&gt;</code>子元素，0个或1个<code>&lt;otherwise&gt;</code>子元素。示例：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;findStudentByChoose&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;student&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;student&quot;</span>&gt;</span></span><br><span class="language-xml">    select * from student where 1=1</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">choose</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!--如果sid不为null或空字符串--&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;null!=sid and&#x27;&#x27;!=sid&quot;</span>&gt;</span></span><br><span class="language-xml">            and sid = #</span><span class="hljs-template-variable">&#123;sid&#125;</span><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!--如果sname不为null或空字符串--&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;null!=sname and &#x27;&#x27;!=sname&quot;</span>&gt;</span></span><br><span class="language-xml">            and sname like &#x27;%$</span><span class="hljs-template-variable">&#123;sname&#125;</span><span class="language-xml">%&#x27;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!--如果以上两个条件都不满足，则执行下列内容--&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">otherwise</span>&gt;</span></span><br><span class="language-xml">            and course = &#x27;Java&#x27;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">otherwise</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">choose</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="where">where</h3><p><code>&lt;where&gt;</code>元素通常跟<code>&lt;if&gt;</code>语句搭配使用，实现的仍是动态装配SQL语句，示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;<span class="hljs-keyword">select</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;findStudentByChoose&quot;</span> parameterType=<span class="hljs-string">&quot;student&quot;</span><br>        resultType=<span class="hljs-string">&quot;student&quot;</span>&gt;<br>    <span class="hljs-keyword">select</span> * from student<br>    &lt;<span class="hljs-built_in">where</span>&gt;<br>    &lt;<span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span>=<span class="hljs-string">&quot;null!=sid and &#x27;&#x27;!=sid&quot;</span>&gt;<br>        and sid = <span class="hljs-comment">#&#123;sid&#125;</span><br>        &lt;/if&gt;<br>        &lt;<span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span>=<span class="hljs-string">&quot;null!=sname and &#x27;&#x27;!=sname&quot;</span>&gt;<br>        and sname like <span class="hljs-string">&#x27;% $&#123;sname&#125; %&#x27;</span><br>        &lt;/if&gt;<br>        &lt;<span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span>=<span class="hljs-string">&quot;null==course&quot;</span>&gt;<br>        and course = <span class="hljs-string">&#x27;Java&#x27;</span><br>        &lt;/if&gt;<br>    &lt;/where&gt;<br>&lt;/select&gt;<br></code></pre></td></tr></table></figure><p>可以注意到，之前的案例中使用了<code>where 1=1</code>的语句，这是为了避免出现<code>select * from student where and course = ‘Java’</code>之类的错误，而使用<code>&lt;where&gt;</code>元素的话则可以略去，<code>&lt;where&gt;</code>元素会在相应的语句后面添加<code>and</code>，之后，如果where后有以<code>and</code>或<code>or</code>开头的语句，则会将其去除。</p><hr><h3 id="set">set</h3><p><code>&lt;set&gt;</code>元素和<code>&lt;where&gt;</code>元素类似，不过<code>&lt;set&gt;</code>元素用于<code>&lt;update&gt;</code>，当<code>&lt;set&gt;</code>中的列有返回值（判断成功）时，会自动追加一个<code>set</code>语句。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;update <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;updateStudent&quot;</span> parameterType=<span class="hljs-string">&quot;student&quot;</span>&gt;<br>    update student<br>    &lt;<span class="hljs-built_in">set</span>&gt;<br>        &lt;<span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span>=<span class="hljs-string">&quot;null!=sname and &#x27;&#x27;!=sname&quot;</span>&gt;<br>            sname = <span class="hljs-comment">#&#123;sname&#125;,</span><br>        &lt;/if&gt;<br>        &lt;<span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span>=<span class="hljs-string">&quot;null!=age and &#x27;&#x27;!=age&quot;</span>&gt;<br>            age  = <span class="hljs-comment">#&#123;age&#125;, </span><br>        &lt;/if&gt;<br>    &lt;/set&gt;<br>    <span class="hljs-built_in">where</span> sid = <span class="hljs-comment">#&#123;sid&#125;</span><br>&lt;/update&gt;<br></code></pre></td></tr></table></figure><hr><h3 id="其他">其他</h3><p>不做具体讨论，详见P67-72</p><p><code>&lt;trim&gt;</code>用于删除多余关键字，可以实现<code>&lt;where&gt;</code>和<code>&lt;set&gt;</code>的功能</p><p><code>&lt;foreach&gt;</code>元素用于遍历，完成批量查询</p><p><code>&lt;bind&gt;</code>元素相当于设置一个变量，将SQL语句的部分内容设为变量，方便更换不同数据库时的修改维护。</p><hr><h2 id="注解">注解</h2><p>注解直接写在接口中，相对简单。接口文件为.java，创建在mapper包下，示例：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">public</span> <span class="hljs-selector-tag">interface</span> <span class="hljs-selector-tag">StudentMapper</span> &#123;<br>    <span class="hljs-comment">//select语句</span><br><span class="hljs-variable">@Select</span>(<span class="hljs-string">&quot;select * from student where sid = #&#123;sid&#125;&quot;</span>)<br>Student <span class="hljs-built_in">selectStudent</span>(int sid);<br>    <br>    <span class="hljs-comment">//insert语句</span><br><span class="hljs-variable">@Insert</span>(<span class="hljs-string">&quot;insert into student(sname,age,course) &quot;</span><br>+ <span class="hljs-string">&quot; values(#&#123;sname&#125;,#&#123;age&#125;,#&#123;course&#125;)&quot;</span>)<br>int <span class="hljs-built_in">insertStudent</span>(Student student);<br>    <br>    <span class="hljs-comment">//update语句</span><br><span class="hljs-variable">@Update</span>(<span class="hljs-string">&quot;update student &quot;</span><br>    + <span class="hljs-string">&quot;set sname = #&#123;sname&#125;,age = #&#123;age&#125; where sid = #&#123;sid&#125;&quot;</span>)<br>int <span class="hljs-built_in">updateStudent</span>(Student student);<br>    <br>    <span class="hljs-comment">//delete语句</span><br><span class="hljs-variable">@Delete</span>(<span class="hljs-string">&quot;delete from student where sid = #&#123;sid&#125;&quot;</span>)<br>int <span class="hljs-built_in">deleteStudent</span>(int sid);<br><br>    <span class="hljs-comment">//通过Param传递多个参数</span><br><span class="hljs-variable">@Select</span>(<span class="hljs-string">&quot;select * from student where sname = #&#123;param01&#125; &quot;</span><br>    + <span class="hljs-string">&quot;and course = #&#123;param02&#125;&quot;</span>)<br>Student <span class="hljs-built_in">selectBySnameAndCourse</span>(<span class="hljs-variable">@Param</span>(<span class="hljs-string">&quot;param01&quot;</span>)String sname ,<br><span class="hljs-variable">@Param</span>(<span class="hljs-string">&quot;param02&quot;</span>)String course);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spring基础使用</title>
    <link href="/2020/11/29/Spring%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/11/29/Spring%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="概述">概述</h2><h3 id="容器机制">容器机制</h3><p>容器是Spring框架实现功能的基础，所有配置过的类都会被纳入Spring容器的管理之中。</p><p>Spring把它管理的类称为Bean，跟Java Bean相比，Spring的Bean没有什么限制，只要配置到容器中，就称为Bean</p><p><strong>ApplicationContext接口</strong></p><p>Spring主要通过ApplicationContext接口来实现容器API调用。主要通过三种接口实现类来获取ApplicationContext实例。</p><ol><li>ClassPathXMLApplicationContext：从类路径加载配置文件，创建ApplicationContext实例</li><li>FileSystemXmlApplicationContext：从文件系统加载配置文件，创建ApplicationContext实例</li><li>AnnotationConfigApplicationContext：从注解中加载配置文件，创建ApplicationContext实例</li></ol><h3 id="简单应用">简单应用</h3><p><strong>1. 引用包</strong></p><p>将Spring依赖jar包引用到工程中。</p><p><strong>2. 创建Bean</strong></p><p>在bean包中创建两个Bean类，Student和Teacher。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs typescript">package com.<span class="hljs-property">SpringTest</span>.<span class="hljs-property">bean</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> &#123;<br><span class="hljs-comment">// 无参构造</span><br><span class="hljs-keyword">public</span> <span class="hljs-title class_">Student</span>() &#123;<br><span class="hljs-variable language_">super</span>();<br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;Student对象创建了&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">// 创建一个成员变量，并给出get/set方法</span><br><span class="hljs-keyword">private</span> <span class="hljs-title class_">String</span> msg = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setMsg</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> msg</span>) &#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">msg</span> = msg;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">getMsg</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> msg;<br>&#125;<br><br><span class="hljs-comment">// study()方法中引用成员变量</span><br><span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">study</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;学生在学习&quot;</span> + msg);<br>&#125;<br>&#125;<br>package com.<span class="hljs-property">SpringTest</span>.<span class="hljs-property">bean</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Teacher</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-title class_">Teacher</span>() &#123;<br><span class="hljs-variable language_">super</span>();<br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;Teacher对象创建了&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-title class_">String</span> msg = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setMsg</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> msg</span>) &#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">msg</span> = msg;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">getMsg</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> msg;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">teach</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;老师讲解&quot;</span> + msg + <span class="hljs-string">&quot;知识&quot;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>3. 创建配置文件</strong></p><p>在src目录下创建<code>applicationContext.xml</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 将指定的类配置给Spring --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.SpringTest.bean.Student&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>Java<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;teacher&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.SpringTest.bean.Teacher&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>Spring<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在上述代码中，<code>&lt;bean&gt;</code>元素指定了一个由Spring容器管理的Bean类，<code>id</code>即为唯一标识符，<code>class</code>为该Bean类的完全限定名，<code>&lt;property&gt;</code>子元素用于指定属性名，<code>&lt;value&gt;</code>用于指定该属性的值。在这里我们定义了两个Bean类，分别是Student和Teacher。</p><p><strong>4. 使用Bean</strong></p><p>在src目录下新建test.java文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.SpringTest.test;<br><span class="hljs-keyword">import</span> org.springframework.context.ApplicationContext;<br><span class="hljs-keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;<br><span class="hljs-keyword">import</span> com.SpringTest.bean.Student;<br><span class="hljs-keyword">import</span> com.SpringTest.bean.Teacher;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestSpring</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception  &#123;<br><span class="hljs-comment">//通过读取配置信息获取ApplicationContext对象</span><br><span class="hljs-type">ApplicationContext</span>  <span class="hljs-variable">applicationContext</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <br>             <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;applicationContext.xml&quot;</span>);<br><span class="hljs-comment">//通过id值获取Student对象</span><br><span class="hljs-type">Student</span> <span class="hljs-variable">student</span> <span class="hljs-operator">=</span> applicationContext.getBean<br>             (<span class="hljs-string">&quot;student&quot;</span>,Student.class);<br><span class="hljs-comment">//调用Student对象的方法</span><br>student.study();<br><span class="hljs-type">Teacher</span> <span class="hljs-variable">teacher</span> <span class="hljs-operator">=</span> applicationContext.getBean(<span class="hljs-string">&quot;teacher&quot;</span>,Teacher.class);<br>teacher.teach();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里通过<code>ClassPathXmlApplicationContext</code>接口实现类来获取ApplicationContext实例，然后通过ApplicationContext实例的getBean()方法来获取Bean类。</p><p>输出结果：</p><p><a href="http://starnight.top/img/java/Spring-test.webp"><img src="http://starnight.top/img/java/Spring-test.webp" alt="img"></a></p><p>由于在Spring容器中配置的类在容器创建时会全部实例化，所以这里可以看到Teacher类虽然在Student.study()后调用，但其构造函数的输出仍在study()之前，说明在容器创建时便已实例化。可以在xml文件中进行修改，添加<code>lazy-init</code>属性，这样只有在用户第一次索取Bean类的时候才会实例化该类。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;bean <span class="hljs-attribute">id</span>=<span class="hljs-string">&quot;teacher&quot;</span> <span class="hljs-attribute">class</span>=<span class="hljs-string">&quot;com.SpringTest.bean.Teacher&quot;</span> <span class="hljs-attribute">lazy-init</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;<br></code></pre></td></tr></table></figure><h2 id="Bean的管理">Bean的管理</h2><h3 id="注入方式">注入方式</h3><p><strong>1. 构造器注入</strong></p><p>被注入的类创建有参/无参构造函数，在ApplicationContext.xml文件中通过<code>&lt;constructor-arg&gt;</code>元素为类的构造方法的参数注入值。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;bean id <span class="hljs-operator">=</span> <span class="hljs-string">&quot;student&quot;</span> class <span class="hljs-operator">=</span> <span class="hljs-string">&quot;com.SpringTest.bean.Student&quot;</span>&gt;<br>&lt;constructor-arg name<span class="hljs-operator">=</span><span class="hljs-string">&quot;sid&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;1&quot;</span>&gt;&lt;/constructor-arg&gt;<br>    &lt;constructor-arg name<span class="hljs-operator">=</span><span class="hljs-string">&quot;name&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;ZhangSan&quot;</span>&gt;&lt;/constructor-arg&gt;<br>    &lt;constructor-arg name<span class="hljs-operator">=</span><span class="hljs-string">&quot;age&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;20&quot;</span>&gt;&lt;/constructor-arg&gt;<br>    &lt;constructor-arg name<span class="hljs-operator">=</span><span class="hljs-string">&quot;course&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;Java&quot;</span>&gt;&lt;/constructor-arg&gt;<br>&lt;/bean&gt;<br></code></pre></td></tr></table></figure><p><strong>2. 属性注入</strong></p><p>属性注入需要被注入的类提供对应的setter函数，然后再ApplicationContext.xml文件中通过<code>&lt;property&gt;</code>元素进行注入。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;bean id<span class="hljs-operator">=</span><span class="hljs-string">&quot;teacher&quot;</span> class<span class="hljs-operator">=</span><span class="hljs-string">&quot;com.SpringTest.bean.Teacher&quot;</span>&gt;<br>&lt;property name<span class="hljs-operator">=</span><span class="hljs-string">&quot;sid&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;1&quot;</span>&gt;&lt;/property&gt;<br>    &lt;property name<span class="hljs-operator">=</span><span class="hljs-string">&quot;name&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;Lisi&quot;</span>&gt;&lt;/property&gt;<br>&lt;/bean&gt;<br></code></pre></td></tr></table></figure><p><strong>注入集合</strong></p><p>设定setter函数，并配合<code>&lt;property&gt;</code>元素来完成集合类的注入（List,Set,Map,Array等)</p><p>如下创建一个Mix类（部分代码）</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">private</span> <span class="hljs-title class_">List</span>&lt;<span class="hljs-title class_">String</span>&gt; mylist;<br><span class="hljs-keyword">private</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setMyList</span>(<span class="hljs-params">List&lt;<span class="hljs-built_in">String</span> myList</span>)<br>&#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mylist</span> = myList;<br>&#125;<br>....<br></code></pre></td></tr></table></figure><p>ApplicationContext.xml文件配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;mix&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.SpringTest.bean.Mix&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!--注入List--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span> =<span class="hljs-string">&quot;mylist&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>list1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>list2<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!--注入Map--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myMap&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">map</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;key01&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;map01&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;key02&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;map02&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">map</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!--注入Array--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myArray&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">array</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>array01<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>array02<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">array</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>注入其他类型的Bean</strong></p><p>通过setter函数和<code>&lt;property&gt;</code>元素的<code>ref</code>属性或<code>ref</code>子元素实现</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;school&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.SpringTest.bean.school&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!--ref子元素--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;stu&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ref</span> <span class="hljs-attr">bean</span>=<span class="hljs-string">&quot;student&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ref</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!--ref属性--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;stu&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;student&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>使用SpEL注入</strong></p><p>SpEL可以实现动态赋值，由于SpEL需要获取对象的属性值，所以需要声明getter方法。</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;employee&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.SpringTest.bean.Employee&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sid&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">vlaue</span>=<span class="hljs-string">&quot;WangWu&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;department&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;研发部&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;person&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.SpringTest.bean.Person&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pid&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;#</span></span></span><span class="hljs-template-variable">&#123;employee.sid&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;#</span></span></span><span class="hljs-template-variable">&#123;employee.name&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="作用域和生命周期">作用域和生命周期</h3><p><strong>作用域</strong></p><p>常用的作用域有两个，分别是<code>Singleton</code>和<code>Prototype</code></p><ul><li>Singleton：单例模式，默认作用域，在Spring容器中只会存在一个id相同的Bean，所有调用该id得到的Bean都是同一个共享的Bean，Spring容器可以管理该Bean的生命周期</li><li>Prototype：每次从容器中调用Bean时，都会产生一个新的Bean实例，两个实例不相同，Spring容器只负责创建Bean实例而不管理其生命周期</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;person&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.SpringTest.bean.Person&quot;</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;prototype&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!--singleton的话scope可以省略不写--&gt;</span><br></code></pre></td></tr></table></figure><p><strong>生命周期</strong></p><p>Bean的生命周期是指Bean实例被创建、初始化和销毁的过程。</p><p>主要关注两点，一点是Bean实例初始化之后执行指定方法，另一点是Bean实例销毁之前执行指定方法。</p><p><em>初始化</em></p><ol><li><p>通过<code>&lt;init-method&gt;</code>属性</p><p>在Java文件中定义一个方法，例如init()</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">init</span>()</span><br>&#123;<br>    System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;调用init()方法&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>在xml文件中设置属性</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;bean <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;bean1&quot;</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;com.SpringTest.bean.bean1&quot;</span> init-method=<span class="hljs-string">&quot;init&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> .....&gt;&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;/bean&gt;<br></code></pre></td></tr></table></figure></li><li><p>通过实现<code>initializingBean</code>接口</p><p>通过重写该接口的<code>afterPropertiesSet()</code>方法，在实例初始化后会自动调用该方法，不需要在xml中设置</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-symbol">Bean2</span> <span class="hljs-symbol">implements</span> <span class="hljs-symbol">InitializingBean</span>&#123;<br>    ...;<br>    @<span class="hljs-keyword">override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> afterPropertiesSet() throws Exception&#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;调用afterPropertiesSet()方法&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><p><em>销毁</em></p><ol><li><p>通过<code>&lt;destroy-method&gt;</code>属性</p><p>同样先在Java中创建一个方法来调用，例如close()</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">close</span>()</span><br>&#123;<br>    System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;调用close()方法&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>在xml中设置<code>&lt;destroy-method&gt;</code>属性</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;bean id<span class="hljs-operator">=</span><span class="hljs-string">&quot;bean3&quot;</span> class<span class="hljs-operator">=</span><span class="hljs-string">&quot;com.SpringTest.bean.Bean3&quot;</span> destroy-method<span class="hljs-operator">=</span><span class="hljs-string">&quot;close&quot;</span>&gt;<br>...<br>&lt;/bean&gt;<br></code></pre></td></tr></table></figure></li><li><p>通过实现<code>DisposableBean</code>接口</p><p>通过重写该接口的<code>destory()</code>方法，在实例被销毁前会自动调用该方法，同样不需要配置xml文件</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs aspectj"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bean4</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">DisposableBean</span></span>&#123;<br>    ...;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;调用destroy()方法&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="注解">注解</h3><p><strong>常用注解</strong></p><table><thead><tr><th>注解</th><th>描述</th></tr></thead><tbody><tr><td>@Component</td><td>指定一个普通的Bean</td></tr><tr><td>@Controller</td><td>指定一个控制器组件Bean，功能上等同于@Component</td></tr><tr><td>@Service</td><td>指定一个业务逻辑组件Bean，功能上等同于@Component</td></tr><tr><td>@Repository</td><td>指定一个DAO组件Bean，功能上等同于@Component</td></tr><tr><td>@Scope</td><td>指定作用域</td></tr><tr><td>@Value</td><td>指定注入值</td></tr><tr><td>@Autowired</td><td>指定要自动装配的对象</td></tr><tr><td>@Qualifier</td><td>指定要自动装配的对象名称，与@Autowired联合使用</td></tr><tr><td>@PostConstruct</td><td>指定初始化后调用的方法</td></tr><tr><td>@PreDestroy</td><td>指定销毁前调用的方法</td></tr></tbody></table><p><strong>使用</strong></p><ol><li><p>导入spring-aop的jar包，配置applicationContext.xml文件</p></li><li><p>配置注解扫描</p><p>在applicationContext.xml的<code>&lt;beans&gt;</code>元素中添加配置信息</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">&lt;<span class="hljs-keyword">context</span>:<span class="hljs-keyword">component</span>-scan base-<span class="hljs-keyword">package</span>=<span class="hljs-string">&quot;com.SpringTest.bean&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><p>即扫描bean包下所有类的注解</p></li><li><p>新建类，例如Sch</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@Component</span>(<span class="hljs-string">&quot;sth&quot;</span>)<br><span class="hljs-variable">@Scope</span>(scopeName = <span class="hljs-string">&quot;singleton&quot;</span>)<br>public class Sch&#123;<br>    <span class="hljs-variable">@Value</span>(<span class="hljs-string">&quot;005&quot;</span>)<br>    private int sid;<br>    <span class="hljs-variable">@Autowired</span><br>    <span class="hljs-variable">@Qualifier</span>(<span class="hljs-string">&quot;stu&quot;</span>)<br>    private Stu stu;<br>    ....;<br>    <span class="hljs-variable">@PostConstruct</span><br>    public void <span class="hljs-built_in">init</span>()<br>    &#123;<br>        <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(<span class="hljs-string">&quot;调用init()方法&quot;</span>)；<br>&#125;<br>    <br>    @<span class="hljs-selector-tag">PreDestroy</span><br>    <span class="hljs-selector-tag">public</span> <span class="hljs-selector-tag">void</span> <span class="hljs-selector-tag">close</span>()<br>    &#123;<br>        <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(<span class="hljs-string">&quot;调用close()方法&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>以上代码中，@Component注解将Sch类注册为Spring容器中的Bean，@Scope注解指定Sch类的作用域，@Value注解为Sch类的sid属性注入值，@Autowired和@Qualifier注解为Sch类的stu属性注入另一个Bean实例。@PostConstruct注解指完成实例化后调用的方法，@PreDestroy注解指销毁前调用的方法。</p></li></ol><h2 id="AOP">AOP</h2><h3 id="概念">概念</h3><p>AOP——面向切面编程</p><ol><li><p>连接点（Joinpoint）：</p><p>程序执行过程中某个特定的节点，例如某个类的初始化完成后、某个方法执行前等。</p></li><li><p>通知（Advice）：</p><p>通知是在目标类连接点上执行的一段代码，有如下几种方式。</p><table><thead><tr><th>通知类型</th><th>描述</th></tr></thead><tbody><tr><td>前置通知（Before）</td><td>在目标方法被调用之前调用通知</td></tr><tr><td>后置通知（After）</td><td>在目标方法被调用之后调用通知</td></tr><tr><td>返回通知（After-returning）</td><td>在目标方法成功执行之后调用通知</td></tr><tr><td>异常通知（After-throwing）</td><td>在目标方法抛出异常之后调用通知</td></tr><tr><td>环绕通知（Around）</td><td>在目标方法调用前和调用后调用通知</td></tr></tbody></table></li><li><p>切点（Pointcut）：</p><p>匹配连接点的断言，AOP通过切点来定位特定的连接点。通知和一个切入点表达式关联，并在满足这个切入点的连接点上运行（例如执行某个特定名称的方法）</p></li><li><p>目标对象（Target）：</p><p>通知所作用的目标类。</p></li><li><p>引介（Introduction）：</p><p>是一种特殊的通知，它可以为类添加一些属性和方法。</p></li><li><p>切面（Aspect）：<br>对系统中的横切关注点逻辑进行模块化封装的AOP概念实体。</p></li><li><p>织入（Weaving）：<br>织入是将通知添加到目标类具体连接点的过程。</p></li><li><p>代理（Proxy）：<br>目标类被AOP织入增强后产生的一个结果类，这个结果类融合了原类和增强的逻辑。</p></li></ol><h3 id="实现机制">实现机制</h3><p><strong>JDK动态代理</strong></p><p>在Spring中，AOP代理由IOC容器负责创建，依赖关系也由IOC容器管理，因此AOP可以直接将IOC容器中的其他类作为目标对象。在默认情况下Spring AOP使用JDK动态代理，当目标对象是一个类并且这个类没有实现接口的时候，切换到CGLib代理。</p><p>JDK动态代理涉及到两个API：InvocationHandler和Proxy。</p><p>InvocationHandler是一个接口，代理类通过实现该接口来定义横切逻辑。</p><p>Proxy利用InvocationHandler动态生成目标类的代理对象。</p><p>示例：</p><p>新建四个类。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">LoginService</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">login</span>();<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LoginServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">LoginService</span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">login</span>(<span class="hljs-params"></span>)<br>    &#123;<br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;执行login()方法&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PerformHandler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">InvocationHandler</span>&#123;<br>    <span class="hljs-comment">//目标对象</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-title class_">Object</span> target;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">PerformHandler</span>(<span class="hljs-title class_">Object</span> target)&#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">target</span>=target;<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-comment">//实现InvocationHandler接口</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">Object</span> <span class="hljs-title function_">invoke</span>(<span class="hljs-title class_">Object</span> proxy, <span class="hljs-title class_">Method</span> method, <span class="hljs-title class_">Object</span>[] args) throws <br>        <span class="hljs-title class_">Throwable</span>&#123;<br>        <span class="hljs-comment">//增强的方法</span><br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;方法开始执行&quot;</span>);<br>        <span class="hljs-comment">//执行被代理类的原方法</span><br>        <span class="hljs-title class_">Object</span> invoke = method.<span class="hljs-title function_">invoke</span>(target, args);<br>        <span class="hljs-comment">//增强的方法</span><br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;方法执行完毕&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>        <span class="hljs-title class_">LoginService</span> loginService = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginServiceImpl</span>();<br>        <span class="hljs-title class_">PerformHandler</span> performHandler = <span class="hljs-keyword">new</span> <span class="hljs-title class_">PerformHandler</span>(loginService);<br>        <span class="hljs-comment">//创建代理对象</span><br>        loginService = (<span class="hljs-title class_">LoginService</span>) <span class="hljs-title class_">Proxy</span>.<span class="hljs-property">newProxyInstance</span><br>(loginService.<span class="hljs-title function_">getClass</span>().<span class="hljs-title function_">getClassLoader</span>(),<br><span class="hljs-title class_">LoginService</span>.<span class="hljs-title function_">getClass</span>().<span class="hljs-title function_">getInterfaces</span>().<span class="hljs-property">performHandler</span>);<br>        loginService.<span class="hljs-title function_">login</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后得到结果</p><blockquote><p>方法开始执行</p><p>执行login()方法</p><p>方法执行完毕</p></blockquote><p><strong>CGLib动态代理</strong></p><p>JDK动态代理只能为接口创建代理，而CGLib可以为类创建代理。</p><p>CGLib动态代理依赖Enhancer类创建代理实例，依靠MethodInterceptor接口织入要增强的方法。</p><p>示例：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CgLibProxy</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">MethodInterceptor</span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-title class_">Enhancer</span> enhancer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Enhancer</span>();<br>    <span class="hljs-comment">//生成代理对象的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">Object</span> <span class="hljs-title function_">getProxy</span>(<span class="hljs-params">Class clazz</span>)&#123;<br>        enhancer.<span class="hljs-title function_">setSuperClass</span>(clazz);<br>        enhancer.<span class="hljs-title function_">setCallback</span>(<span class="hljs-variable language_">this</span>);<br>        <span class="hljs-keyword">return</span> enhancer.<span class="hljs-title function_">create</span>();<br>    &#125;<br>    <br>    <span class="hljs-comment">//回调方法，该方法将拦截目标类中所有方法的调用。</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">Object</span> <span class="hljs-title function_">intercept</span>(<span class="hljs-title class_">Object</span> obj, <span class="hljs-title class_">Method</span> method, <span class="hljs-title class_">Object</span>[] objects, <span class="hljs-title class_">MethodProxy</span> methodProxy) throws <span class="hljs-title class_">Throwable</span>&#123;<br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;CGLib代理之前&quot;</span>);<br>        <span class="hljs-title class_">Object</span> invoke = methodProxy.<span class="hljs-title function_">invokeSuper</span>(obj,objects);<br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;CGLib代理之后&quot;</span>);<br>        <span class="hljs-keyword">return</span> invoke;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestCGLib</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>        <span class="hljs-title class_">CgLibProxy</span> cglibProxy = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CgLibProxy</span>();<br>        <span class="hljs-comment">//创建代理对象</span><br>        <span class="hljs-title class_">LoginServiceImpl</span> userService = (<span class="hljs-title class_">LoginServiceImpl</span>) cglibProxy.<span class="hljs-title function_">getProxy</span>(<span class="hljs-title class_">LoginServiceImpl</span>.<span class="hljs-property">class</span>);<br>        userService.<span class="hljs-title function_">login</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到结果：</p><blockquote><p>CGLib代理之前</p><p>执行Login()方法</p><p>CGLib代理之后</p></blockquote><h3 id="开发方法">开发方法</h3><p><strong>基于XML开发</strong></p><p>XML中配置AOP的元素：</p><table><thead><tr><th>元素名称</th><th>描述</th></tr></thead><tbody><tr><td><a href="aop:config">aop:config</a></td><td>AOP配置的根元素</td></tr><tr><td><a href="aop:aspect">aop:aspect</a></td><td>指定切面</td></tr><tr><td><a href="aop:advisor">aop:advisor</a></td><td>指定通知器</td></tr><tr><td><a href="aop:pointcut">aop:pointcut</a></td><td>指定切点</td></tr><tr><td><a href="aop:before">aop:before</a></td><td>指定前置通知</td></tr><tr><td><a href="aop:after">aop:after</a></td><td>指定后置通知</td></tr><tr><td><a href="aop:around">aop:around</a></td><td>指定环绕通知</td></tr><tr><td><a href="aop:after-returning">aop:after-returning</a></td><td>指定返回通知</td></tr><tr><td><a href="aop:after-throwing">aop:after-throwing</a></td><td>指定异常通知</td></tr></tbody></table><p>示例：</p><p>首先在applicationContext.xml中引入AOP，略</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs csharp">package com.qfedu.demo02;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">UserService</span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">insert</span>()</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">delete</span>()</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">update</span>()</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">select</span>()</span>;<br>&#125;<br>package com.qfedu.demo02;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">UserServiceImpl</span> <span class="hljs-title">implements</span> <span class="hljs-title">UserService</span>&#123;<br>    @Override<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">insert</span>()</span>&#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;添加用户信息&quot;</span>);<br>    &#125;<br>    @Override<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">delete</span>()</span>&#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;删除用户信息&quot;</span>);<br>    &#125;<br>    @Override<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">update</span>()</span>&#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;更新用户信息&quot;</span>);<br>    &#125;<br>    @Override<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">select</span>()</span>&#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;查询用户信息&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建类XmlAdvice用于定义通知</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">package com.qfedu.demo02;<br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> XmlAdvice&#123;<br>    //前置通知<br>    <span class="hljs-built_in">public</span> <span class="hljs-type">void</span> <span class="hljs-keyword">before</span>()&#123;<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;这是前置通知&quot;);<br>    &#125;<br>    <br>    <span class="hljs-built_in">public</span> <span class="hljs-type">void</span> <span class="hljs-keyword">after</span>()&#123;<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;这是后置通知&quot;);<br>    &#125;<br>    <br>    <span class="hljs-built_in">public</span> <span class="hljs-keyword">Object</span> around(ProceddingJoinPoint <span class="hljs-type">point</span>) throws Throwable&#123;<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;这是环绕通知之前的部分&quot;);<br>        ///调用目标方法<br>        <span class="hljs-keyword">Object</span> <span class="hljs-keyword">object</span> = <span class="hljs-type">point</span>.proceed();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;这是环绕通知之后的部分&quot;);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">object</span>;<br>    &#125;<br>    <br>    <span class="hljs-built_in">public</span> <span class="hljs-type">void</span> afterReturning()&#123;<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;这是返回通知（方法不出现异常时调用）&quot;);<br>    &#125;<br>    <br>    <span class="hljs-built_in">public</span> <span class="hljs-type">void</span> afterException()&#123;<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;这是异常通知&quot;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在applicationContext.xml的<code>&lt;bean&gt;</code>元素中添加配置信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--注册Bean--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userService&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.qfedu.demo02.UserServiceImpl&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;xmlAdvice&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.qfedu.demo02.XmlAdvice&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!--配置Spring AOP--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">aop:config</span>&gt;</span><br><span class="hljs-comment">&lt;!--指定切点--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">aop:pointcut</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pointcut&quot;</span> </span><br><span class="hljs-tag">                  <span class="hljs-attr">expression</span>=<span class="hljs-string">&quot;execution(* com.qfedu.demo02.UserServiceImpl. *(..))&quot;</span> /&gt;</span><br>    <span class="hljs-comment">&lt;!--指定切面--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">aop:aspect</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;xmlAdvice&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--指定前置通知--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:before</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;before&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;pointcut&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:after-returning</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;afterReturning&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;pointcut&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:around</span> <span class="hljs-attr">mehtod</span>=<span class="hljs-string">&quot;around&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;pointcut&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:after-throwing</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;afterException&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;pointcut&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:after</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;after&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;pointcut&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">aop:aspect</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">aop:config</span>&gt;</span><br></code></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.qfdeu.demo02;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestXml</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">mian</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;applicationContext.xml&quot;</span>);<br>    <span class="hljs-type">UserService</span> <span class="hljs-variable">userService</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;userService&quot;</span>,UserService.class);<br>        userService.delete();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到结果：</p><blockquote><p>这是前置通知</p><p>这是环绕通知之前的部分</p><p>删除用户信息</p><p>这是后置通知</p><p>这是环绕通知之后的部分</p><p>这是返回通知（方法不出现异常时调用）</p></blockquote><p><strong>基于注解开发</strong></p><p>支持的注解类型如下：</p><table><thead><tr><th>注解名称</th><th>描述</th></tr></thead><tbody><tr><td>@Aspect</td><td>指定切面</td></tr><tr><td>@Pointcut</td><td>指定切点</td></tr><tr><td>@Before</td><td>指定前置通知</td></tr><tr><td>@After</td><td>指定后置通知</td></tr><tr><td>@Around</td><td>指定环绕通知</td></tr><tr><td>@AfterReturning</td><td>指定返回通知</td></tr><tr><td>@AfterThrowing</td><td>指定异常通知</td></tr></tbody></table><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.qfedu.demo02;<br><span class="hljs-meta">@Aspect</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AnnoAdvice</span>&#123;<br>    <span class="hljs-comment">//切点</span><br>    <span class="hljs-meta">@Pointcut(&quot;execution(* com.qfedu.demo02.UserServiceImpl.* (..))&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">pointcut</span><span class="hljs-params">()</span>&#123;<br>    &#125;<br>    <br>    <span class="hljs-comment">//前置通知</span><br>    <span class="hljs-meta">@Before(&quot;pointcut()&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">before</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;这是前置通知&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">//后置通知</span><br>    <span class="hljs-meta">@After(&quot;pointcut()&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">after</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;这是后置通知&quot;</span>);<br>    &#125;<br>    <span class="hljs-meta">@Around(&quot;pointcut()&quot;)</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">around</span><span class="hljs-params">(ProceedingJoinPoint point)</span> <span class="hljs-keyword">throws</span> Throwable&#123;<br>        System.out.println(<span class="hljs-string">&quot;这是环绕通知之前的部分&quot;</span>);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">object</span> <span class="hljs-operator">=</span> point.proceed();<br>        System.out.println(<span class="hljs-string">&quot;这是环绕通知之后的部分&quot;</span>);<br>        <span class="hljs-keyword">return</span> object;<br>    &#125;<br>    <span class="hljs-meta">@AfterReturning(&quot;pointcut()&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterReturning</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;这是返回通知&quot;</span>);<br>    &#125;<br>    <span class="hljs-meta">@AfterThrowing(&quot;pointcut()&quot;)</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;这是异常通知&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>配置applicationContext.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--注册Bean--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userService&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.qfedu.demo02.UserServiceImpl&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;annoAdvice&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.qfedu.demo02.AnnoAdvice&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!--开启@aspectj的自动代理支持--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">aop:aspectj-autoproxy</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>测试如上</p><h3 id="多个切面优先级">多个切面优先级</h3><p><strong>基于注解配置</strong></p><p>只需要添加<code>@Order</code>注解即可</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-comment">//例如两个类Aspect1和Aspect2</span><br><br><span class="hljs-variable">@Aspect</span><br><span class="hljs-variable">@Order</span>(<span class="hljs-number">1</span>)<br>public class aspect1&#123;<br>&#125;<br><br><span class="hljs-variable">@Aspect</span><br><span class="hljs-variable">@Order</span>(<span class="hljs-number">0</span>)<br>public class aspect2&#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>Order注解中的值越小，优先级越高，所以aspect2会优先于aspect1</p><p><strong>基于Ordered接口配置</strong></p><p>Ordered接口提供了一个getOrder()方法来设置优先级</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-comment">//同样两个类Aspect1和Aspect2</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-symbol">aspect1</span> <span class="hljs-symbol">implements</span> <span class="hljs-symbol">Ordered</span>&#123;<br>    ....;<br>    @Override<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> getOrder()&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-symbol">aspect2</span> <span class="hljs-symbol">implements</span> <span class="hljs-symbol">Ordered</span>&#123;<br>    ....;<br>    @Override<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> getOrder()&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>同样，值越小，优先级越高，所有Aspect2的优先级大于Aspect1</p><p><strong>基于XML配置</strong></p><p>主要通过<code>&lt;aop:aspect&gt;</code>元素的<code>&lt;order&gt;</code>元素实现，在配置切面时添加Order属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml">....<br><span class="hljs-comment">&lt;!--配置切面--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">aop:aspect</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;aspect1&quot;</span> <span class="hljs-attr">order</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>....;<br><span class="hljs-tag">&lt;/<span class="hljs-name">aop:aspect</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">aop:aspect</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;aspect2&quot;</span> <span class="hljs-attr">order</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span><br>....;<br><span class="hljs-tag">&lt;/<span class="hljs-name">aop:aspect</span>&gt;</span><br></code></pre></td></tr></table></figure><p>同样，这里也是Aspect2的优先级大于Aspect1</p><h2 id="Spring-MVC基础">Spring MVC基础</h2><h3 id="概念-2">概念</h3><p><strong>功能组件</strong></p><ol><li><p>DIspatcherServlet（前端控制器）</p><p>前端控制器负责拦截客户端请求并分发给其他组件，它是整个流程控制的中心。</p></li><li><p>HandlerMapping（处理器映射器）</p><p>处理器映射器负责根据客户端请求的URL寻找处理器。</p></li><li><p>Handler（处理器）</p><p>处理器负责对客户端的请求进行处理，编写的业务逻辑写在这里。</p></li><li><p>HandlerAdapter（处理器适配器）</p><p>处理器适配器负责根据特定的规则对处理器进行执行。</p></li><li><p>ViewResolver（视图解析器）</p><p>视图解析器负责视图解析，它将处理结果生成View并展示给用户。关于视图相关的代码在这里编写。</p></li></ol><p><strong>工作流程</strong></p><p><a href="https://img-blog.csdn.net/20150505141238573"><img src="https://img-blog.csdn.net/20150505141238573" alt="图片来自https://blog.csdn.net/evankaka/article/details/45501811"></a></p><ol><li><p>用户—&gt;DispatcherServlet</p><p>客户端发出一个HTTP请求，服务器接收请求，根据DispatcherServlet的映射路径，将请求交予DispatcherServlet处理</p></li><li><p>DIspatcherServlet—&gt;Handler</p><p>DispatcherServlet根据URL、方法、报文头和参数在内的请求信息以及HandlerMapping的配置解析得到Handler</p></li><li><p>DispatcherServlet—&gt;HandlerAdapter</p><p>解析出Handler后调用HandlerAdapter来调用Handler并完成业务逻辑的处理。</p></li><li><p>HandlerAdapter—&gt;DispatcherServlet</p><p>完成业务逻辑处理后，将处理结果，即ModelAndView返回给DispatcherServlet</p></li><li><p>DispatcherServlet—&gt;VIewResolver</p><p>通过ViewResolver完成逻辑视图名到真实View对象的解析，并通过View对象对数据模型进行视图渲染。</p></li><li><p>DispatcherServlet—&gt;用户</p><p>DispatcherServlet将最终的View对象返回给客户端，呈现给用户。</p></li></ol><h3 id="简单应用-2">简单应用</h3><p>先在web.xml中配置DispatcherServlet</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>springMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>             <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>contextConfigLocation<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>/WEB-INF/springMVC-config.xml<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">load-on-startup</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">load-on-startup</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br> <span class="hljs-comment">&lt;!-- 访问DispatcherServlet对应的路径 --&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>springMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span> <br> <span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><p>contextConfigLocation表示引入springMVC配置文件所在位置</p><p><code>&lt;load-on-startup&gt;</code>表示优先级</p><p><code>&lt;url-pattern&gt;</code>元素的值为”/”，表示将所有的请求都映射到DispatcherSevelet</p><p><strong>XML实现</strong></p><p>在WebContent/WEB-INF目录下新建spring-MVC的配置文件springMVC-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;UTF-8&#x27;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://www.springframework.org/schema/context</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 配置Controller类 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;/controller01&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.qfedu.controller.MyController01&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 配置处理器映射器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 配置处理器适配器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 配置视图解析器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在src中新建com.qfedu.controller包，新建MyController01类</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">public</span> <span class="hljs-title class_"><span class="hljs-keyword">class</span> <span class="hljs-title">MyController01</span> <span class="hljs-keyword"><span class="hljs-keyword">implements</span> <span class="hljs-type">Controller</span></span></span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception&#123;<br>        ModelAndView mv = <span class="hljs-keyword">new</span> <span class="hljs-type">ModelAndView</span>();<br>        mv.addObject(<span class="hljs-string">&quot;msg&quot;</span>,<span class="hljs-string">&quot;Hello World&quot;</span>);<br>        mv.setViewName(<span class="hljs-string">&quot;/WEB-INF/page/page01/jsp&quot;</span>);<br>        <span class="hljs-keyword">return</span> mv;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>handlerRequest()方法用于处理客户端请求，其中先新建了一个ModelAndView对象，然后为ModelAndView对象设置模型数据和View名称，最后将该对象返回。</p><p>在WebContent/WEB-INF/page/page01.jsp中通过下述代码调用程序</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml">    $ </span><span class="hljs-template-variable">&#123;requestScope.msg&#125;</span><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><strong>注解实现</strong></p><p>新建类MyController02</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">package</span> com.qfedu.controller;<br><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-title class_"><span class="hljs-keyword">class</span> <span class="hljs-title">MyController02</span></span>&#123;<br>    <span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">&quot;/execute&quot;</span>)<br>    <span class="hljs-keyword">public</span> ModelAndView execute()&#123;<br>        ModelAndView mv = <span class="hljs-keyword">new</span> <span class="hljs-type">ModelAndView</span>();<br>        mv.addObject(<span class="hljs-string">&quot;msg&quot;</span>,<span class="hljs-string">&quot;Hello World&quot;</span>);<br>        mv.setViewName(<span class="hljs-string">&quot;page01&quot;</span>);<br>        <span class="hljs-keyword">return</span> mv;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>@Controller注解将类作为一个Controller类配置到Spring容器中，@RequestMapping注解指定了execute()方法的映射路径。</p><p>修改springMVC-config.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--扫描Controller--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;com.qfedu.controller&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!--配置视图解析器--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;prefix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;/WEB-INF/page/&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;suffix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;.jsp&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>prefix用于指定View名称的前缀，suffix用于指定View名称的后缀</p><h3 id="常用注解">常用注解</h3><p>除了上述使用到的@Controller，还有一些常用的注解</p><p><strong>@RequestMapping</strong></p><p>@RequestMapping注解用于处理请求地址映射，示例如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyController03</span>&#123;<br>    <span class="hljs-comment">//访问page02.jsp</span><br>    <span class="hljs-meta">@RequestMapping(value=&quot;/toWelcome&quot;)</span><br>    <span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">toWelcome</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">mv</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>        mv.setViewName(<span class="hljs-string">&quot;page02&quot;</span>);<br>        <span class="hljs-keyword">return</span> mv;<br>    &#125;<br>    <span class="hljs-comment">//访问page01.jsp</span><br>    <span class="hljs-meta">@RequestMapping(value=&quot;/welcome&quot;, method=RequestMethod.POST)</span><br>    <span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">welcome</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">mv</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>        mv.addObject(<span class="hljs-string">&quot;msg&quot;</span>,<span class="hljs-string">&quot;Hello World&quot;</span>);<br>        mv.setViewName(<span class="hljs-string">&quot;page01&quot;</span>);<br>        <span class="hljs-keyword">return</span> mv;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>上述代码中，第一个@RequestMapping注解的value值为”/toWelcome”，表明访问路径为“/toWelcome”的请求将由toWelcome()方法处理，处理完成后请求被转发到page02.jsp。</p><p>第二个@RequestMapping注解的value值为”/welcome”，methdo属性值为”RequestMethod.POST“，表明访问路径为”/welcome“，并且访问方式为”POST“的请求将由welcome()方法处理，处理完成后请求被转发到page01.jsp。</p><p><strong>@RequestParam</strong></p><p>@RequestParam注解用于获取请求参数的值，将请求参数赋值给方法中的形参。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@RequestMapping</span>(value=<span class="hljs-string">&quot;/login&quot;</span>)<br>public ModelAndView <span class="hljs-built_in">login</span>(<span class="hljs-variable">@RequestParam</span>(value=<span class="hljs-string">&quot;username&quot;</span>, defaultValue=<span class="hljs-string">&quot;xiaofeng&quot;</span>) String username, <span class="hljs-variable">@ReqeustParam</span>(value=<span class="hljs-string">&quot;password&quot;</span>, defaultValue=<span class="hljs-string">&quot;123abc&quot;</span>) String password)&#123;<br>    <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(<span class="hljs-string">&quot;用户名:&quot;</span> + username);<br>    <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(<span class="hljs-string">&quot;密码:&quot;</span> + password);<br>    <span class="hljs-selector-tag">return</span> <span class="hljs-selector-tag">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>上述代码中，第一个@RequestParam注解的value属性值为username，defaultValue为xiaofeng，即将请求参数username的值赋值给login()方法中的形参username，当请求参数没有提交值时，采用默认值”xiaofeng“，password同理。</p><p><strong>@PathVariable</strong></p><p>@PathVariable注解用于获取URL中的动态参数</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">package</span> <span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.qfedu</span><span class="hljs-selector-class">.comtroller</span>;<br>@<span class="hljs-selector-tag">Controller</span><br>@<span class="hljs-selector-tag">RequestMapping</span>(value=<span class="hljs-string">&quot;/claList/&#123;cid&#125;&quot;</span>)<br><span class="hljs-selector-tag">public</span> <span class="hljs-selector-tag">class</span> <span class="hljs-selector-tag">MyController05</span>&#123;<br>    <span class="hljs-variable">@RequestMapping</span>(value=<span class="hljs-string">&quot;/stuList/&#123;sid&#125;&quot;</span>)<br>    public String <span class="hljs-built_in">findStudent</span>(<span class="hljs-variable">@PathVariable</span>(value=<span class="hljs-string">&quot;cid&quot;</span>) Integer cid, <span class="hljs-variable">@PathVariable</span>(value=<span class="hljs-string">&quot;sid&quot;</span>) Integer sid)&#123;<br>        <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(<span class="hljs-string">&quot;班级ID为：&quot;</span> + cid);<br>        <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(<span class="hljs-string">&quot;学生ID为：&quot;</span> + sid);<br>        <span class="hljs-selector-tag">return</span> <span class="hljs-selector-tag">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>@RequestMapping注解的value属性使用的为动态参数，@PathVariable注解将动态参数cid，sid映射为findStudent()方法中的形参cid，sid。</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo数学公式设置</title>
    <link href="/2020/11/13/Hexo%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E8%AE%BE%E7%BD%AE/"/>
    <url>/2020/11/13/Hexo%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>Hexo关于Latex的一些设置，避免重复渲染等问题。</p><span id="more"></span><h2 id="重装渲染引擎">重装渲染引擎</h2><p>由于需要在markdown中插入数学公式，因此了解到了Latex，但是在完成了公式的输入后发现hexo中并不能成功渲染Latex公式。为什么呢？这是因为hexo使用自带的<code>hexo-renderer-marked</code>引擎来渲染页面，但是<code>hexo-renderer-marked</code>引擎不能渲染Latex引擎，因此我们需要更换引擎。</p><p>在更换渲染引擎时首先需要先卸载原先的渲染引擎，再安装新引擎。</p><p>这里使用<code>kramed</code>引擎，虽然<code>kramed</code>引擎不能渲染markdown all in one中的下标”~ ~”以及 上标”^ ^”这类格式，但姑且可以用Mathjax的<code>_&#123;&#125;</code>和<code>^&#123;&#125;</code>代替</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm uninstall hexo-renderer-marked <span class="hljs-comment">--save</span><br>npm install hexo-renderer-kramed <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>如果出现<strong>数学公式重复渲染</strong>的情况，在<code>&lt;your-priject-dir&gt;/node_modules/hexo-renderer-kramed/lib/renderer.js</code>中，将</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">formatText</span><span class="hljs-params">(text)</span></span> &#123;<br>    // Fit kramed<span class="hljs-string">&#x27;s rule: $$ + \1 + $$</span><br><span class="hljs-string">    return text.replace(/`\$(.*?)\$`/g, &#x27;</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$1</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-string">&#x27;);</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><p>改为</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-keyword">function</span> <span class="hljs-title">formatText</span>(text) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-type">text</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果出现<strong>行内公式无法渲染</strong>的情况，在<code>&lt;your-project-dir&gt;/node_modules/kramed/lib/rules/inline.js</code>中，将</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">escape<span class="hljs-operator">:</span> <span class="hljs-operator">/</span><span class="hljs-operator">^</span><span class="hljs-punctuation">\</span><span class="hljs-punctuation">\</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">\</span><span class="hljs-punctuation">\</span>`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,<br></code></pre></td></tr></table></figure><p>改为</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs r">escape<span class="hljs-operator">:</span> <span class="hljs-operator">/</span><span class="hljs-operator">^</span><span class="hljs-punctuation">\</span><span class="hljs-punctuation">\</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">[</span>`*\[\]()#$+\-.!_&gt;])/,<br>em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,<br></code></pre></td></tr></table></figure><p>改为</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,<br></code></pre></td></tr></table></figure><h2 id="使用hexo-renderer-mathjax">使用hexo-renderer-mathjax</h2><p>首先卸载原本的<code>hexo-math</code></p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">npm uninstall hexo-<span class="hljs-built_in">math</span> <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>然后安装<code>hexo-renderer-mathjax</code></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-renderer-mathjax <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>若渲染出现问题，则更换Mathjax的CDN</p><p>在<code>&lt;path-to-your-project&gt;/node_modules/hexo-renderer-mathjax/mathjax.html</code>中，将</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>改为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>Tips</p><p>要想用Latex渲染花括号{}，如果<code>\&#123;\&#125;</code>不生效的话，可以改成<code>\\&#123;\\&#125;</code></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>最长公共子序列</title>
    <link href="/2020/11/11/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <url>/2020/11/11/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</url>
    
    <content type="html"><![CDATA[<p>动态规划的中的最长公共子序列示例题。</p><span id="more"></span><h3 id="示例">示例</h3><p><strong>题目</strong></p><p>设计一个O(n^2^)时间的算法，找出由n个数组成的序列的最长单调递增子序列。</p><p><strong>简要分析</strong></p><p>题目可以看做原序列和排序后序列求最长公共子序列。</p><h3 id="基础">基础</h3><p>一个给定序列的子序列是在该序列中删去若干元素后得到的序列。</p><p>设给定序列X={x1,x2,x3,…xm}，若存在子序列Z={z1,z2,z3,….,zk}，那么，</p><p>必定存在一个严格递增的下标序列{i1,i2,i3,….ik}，使得所有j=1,2,3,…,k，都有zj=xij</p><blockquote><p>例如：</p><p>X={A,B,C,B,D,B,A}，则其子序列Z={B,C,D,A}，相应的下标序列为{2,3,5,7}<em>(下标从1开始)</em></p><p>此时，当j=1时，z1=B，x的下标为i1，即xi1，i1也就是下标序列中的第一位，即2，</p><p>所以，z1=x2=B，同理，当j=4时，z4=xi4=x7=A</p></blockquote><p>当给定两个序列X和Y，且Z同时为两者的子序列时，则称Z为X和Y的公共子序列</p><blockquote><p>例如：</p><p>X={A,B,C,B,D,B,A},Y={B,D,C,A,B,A}</p><p>若Z={B,C,A}，则Z是X,Y的公共子序列</p><p>若Z={B,C,B,A}，则Z是X,Y的公共子序列，同时也是最长公共子序列</p></blockquote><h3 id="计算最长公共子序列">计算最长公共子序列</h3><p>设序列X={x1,x2,x3,…xm}，和序列Y={y1,y2,y3,….,yn}的最长公共子序列为Z={z1,z2,z3,….,zk}，则有三种情况</p><ol><li>若xm=yn，则zk=xm=yn，且zk−1是Xm−1和Yn−1的最长公共子序列</li><li>若xm≠yn且zk≠xm，则Z是Xm−1和Yn的最长公共子序列</li><li>若xm≠yn且zk≠yn，则Z是Xm和Yn−1的最长公共子序列</li></ol><p>①xm=yn，说明X和Y的最后一个元素相同，而Z是X和Y的最长公共子序列，而最长自然最好是从头到尾，既然两者的尾元素相同，那自然应该包含在最长公共子序列中，且应是最后一位。三者同时将最后一位去掉，即得到Zk−1是Xm−1和Yn−1的最长公共子序列</p><blockquote><p>证：</p><p>若zk≠xm，则因为Z是X和Y的最长公共子序列，且xm=yn，则说明{Z,xm/yn}也应该是X和Y的公共子序列，因为Z的长度是k，而{Z,xm/yn}的长度为k+1，k+1&gt;k，这与”Z是X和Y的最长公共子序列设定“冲突，所以必有zk=xm=yn，即当xm=yn时，xm/yn必定在最长子序列Z中。</p></blockquote><p>②/③Z是X和Y的最长公共子序列，而zk是Z中的最后一位，xm是X中的最后一位，若zk≠xm，说明xm不包含于Z中，即Xm不是最长公共子序列的一部分，那么可以将其去掉，即最长公共子序列存在于和Xm−1和Yn中</p><h3 id="分析递归结构">分析递归结构</h3><p>由上可知，当xm=yn时，找出和xm−1和yn−1的最长公共子序列，在气候加上xm，即是X和Y的最长公共子序列；当xm≠yn时，则分别求和Xm−1和Yn的最长公共子序列，以及和Xm和Yn−1的最长公共子序列，并比较得到较长的那个序列，即为X,Y的最长公共子序列。</p><p>用C[i][j]记录序列和Xi和Yj的最长公共子序列的长度。</p><blockquote><p>例：</p><p>C[5][7]即是X5={x1,x2,….,x5}和Y7={y1,y2,….,y7}的最长公共子序列</p></blockquote><p>当i=j=0时，说明X和Y都是空序列，那么最长公共子序列的长度也自然是0，得到公式</p><p><img src="/img/algorithm/DP.webp" alt="DP数组C"></p><h3 id="图表分析">图表分析</h3><p>另外设一个数组b[i][j]用来记录符合哪一种情况，即上述方式中的四种情况。</p><p>X=[5,2,3,4,8,6,9]，Y为升序的X，Y=[2,3,4,5,6,8,9]</p><p>C表：</p><p><img src="/img/algorithm/DP%E6%95%B0%E7%BB%84C.webp" alt="DP数组C"></p><p>b表：（第一种情况用作边界条件，设上述第二种情况为1，第三种情况的左侧大为2，右侧大为3）</p><p><img src="/img/algorithm/DP%E6%95%B0%E7%BB%84b.webp" alt="DP数组b"></p><p>示例：</p><p>当i=1的时候，，x1≠y1，i,j≠0那么看第三种方案中的两种情况，C[i−1][j]=C[0][1]=0，C[i][j−1]=C[1][0]=0，这里将他归入”2“，即C[i−1][j]≥C[i][j−1]，所以此时C[1][1]=C[i−1][j]=C[0][1]=0，为”2“情况，所以b[1][1]=2，依次类推，直到j=4时，x1=y4，此时满足第二种情况，所以C[1][4]=C[0][3]+1=1，b[1][4]=1</p><p>依次类推，当i=7,j=7时，返回C[7][7]即为最长子公共序列的长度，并返回b数组用于输出该最长子公共序列。</p><p><img src="/img/algorithm/DP%E6%A0%B9%E6%8D%AEb.webp" alt="DP根据b"></p><p>如上图所示，根据b数组进行查找输出。</p><p>首先b[7][7]=1，说明x7在最长公共子序列中可以输出，但应是最晚输出，因为是1，所以找C[6][6]，即左上角，左上角为2，则说明该值由C[i−1][j]得来，找上方一格，即C[5][6]，此时C[5][6]=1，说明该值在最长公共子序列中，即x5在最长公共子序列中，再找左上角，为3，找左边，为3，找左边，为1，说明可输出，找左上角。类推。</p><p>最终输出结果x2,x3,x4,x5,x7，即23489。</p><blockquote><p>注意点</p><p>这里我们可以注意到除了23489之外，23469也可以，这点取决于当和C[i−1][j]和C[i][j−1]相等时取谁。</p></blockquote><h3 id="代码">代码</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><code class="hljs prolog">public static int[] <span class="hljs-symbol">Sort</span>(int[] arr) &#123;<br>   int length = arr.length;<br>       for (int i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;<br>           //每一趟循环比较时，min用于存放较小元素的数组下标，<br>           //这样当前批次比较完毕最终存放的就是此趟内最小的元素的下标，避免每次遇到较小元素都要进行交换。<br>           int min = i;<br>           for (int j = i + <span class="hljs-number">1</span>; j &lt; arr.length; j++) &#123;<br>               if (arr[j] &lt; arr[min]) &#123;<br>                   min = j;<br>               &#125;<br>           &#125;<br>           //进行交换，如果min发生变化，则进行交换<br>           if (min != i) &#123;<br>               int temp = arr[i];<br>               arr[i] = arr[min];<br>               arr[min] = temp;<br>           &#125;<br>       &#125;<br>       int i = <span class="hljs-number">0</span>;<br><br>       //去重<br>       while(i&lt;length<span class="hljs-number">-1</span>)<br>       &#123;<br>       if(arr[i] == arr[i+<span class="hljs-number">1</span>])<br>       &#123;<br>       for(int j=i;j&lt;length;j++)<br>       &#123;<br>       arr[j]=arr[j+<span class="hljs-number">1</span>];<br>       &#125;<br>       length--;<br>       &#125;<br>       else<br>       i++;<br>       &#125;<br>       int []b = new int[length];<br>       for(int j=<span class="hljs-number">0</span>;j&lt;length;j++)<br>       &#123;<br>       b[j] = arr[j];<br>       &#125;<br>       return b;<br>   &#125; <br><br><br>   <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 构建最长公共子序列</span><br><span class="hljs-comment">    * @param i x序列的下标?</span><br><span class="hljs-comment">    * @param j y序列的下标?</span><br><span class="hljs-comment">    * @param x 序列x</span><br><span class="hljs-comment">    * @param b 通过lcsLength()得到的状态数组?</span><br><span class="hljs-comment">    */</span><br>   public static void lcs(int i,int j, int[]x,int [][]b)<br>   &#123;<br>       if(i==<span class="hljs-number">0</span> || j == <span class="hljs-number">0</span>) return;<br>       if(b[i][j] == <span class="hljs-number">1</span>)<br>       &#123;<br>           //即第二种情况，<span class="hljs-symbol">X</span>和<span class="hljs-symbol">Y</span>最后一个元素相同<br>           lcs(i<span class="hljs-number">-1</span>,j<span class="hljs-number">-1</span>,x,b); //递归调用<br>           <span class="hljs-symbol">System</span>.out.print(x[i<span class="hljs-number">-1</span>]);<br>       &#125;<br>       else if(b[i][j] == <span class="hljs-number">2</span>)<br>       &#123;<br>           //即第三种情况中的第一种情况，右侧大于左侧<br>           lcs(i<span class="hljs-number">-1</span>,j,x,b);<br>       &#125;<br>       else<br>       &#123;<br>           //即第三种情况中的第二种情况，左侧大于右侧<br>           lcs(i,j<span class="hljs-number">-1</span>,x,b);<br>       &#125;<br>   &#125;<br><br>   <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * P58页，最长公共子序列代码</span><br><span class="hljs-comment">    * @param x 序列X</span><br><span class="hljs-comment">    * @param y 序列Y</span><br><span class="hljs-comment">    * @param b 状态字，用于判断序列满足哪种情况</span><br><span class="hljs-comment">    * @return 返回X和Y的最长公共子序列长度</span><br><span class="hljs-comment">    */</span><br>   public static int lcsLength(int[]x,int[]y,int [][]b)<br>   &#123;<br>       int m = x.length;<br>       int n = y.length;<br>       int [][]c = new int[m+<span class="hljs-number">1</span>][n+<span class="hljs-number">1</span>];<br><br>       //初始化边界条件<br>       for(int i=<span class="hljs-number">0</span>;i&lt;=m;i++)<br>           c[i][<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br>       for(int i=<span class="hljs-number">0</span>;i&lt;=n;i++)<br>           c[<span class="hljs-number">0</span>][i] = <span class="hljs-number">0</span>;<br><br>       for(int i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>       &#123;<br>           for(int j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br>           &#123;<br>               if(x[i<span class="hljs-number">-1</span>] == y[j<span class="hljs-number">-1</span>])<br>               &#123;<br>                   //第二种情况，即此部分<span class="hljs-symbol">X</span>和<span class="hljs-symbol">Y</span>最后一个元素相同，那么最长公共子序列长度为之前的序列的最长公共子序列的长度+<span class="hljs-number">1</span><br>                   c[i][j] = c[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>] + <span class="hljs-number">1</span>;  <br>                   b[i][j] = <span class="hljs-number">1</span>;<br>               &#125;<br>               else if(c[i<span class="hljs-number">-1</span>][j] &gt;= c[i][j<span class="hljs-number">-1</span>])<br>               &#123;<br>                   //第三种情况中的第一种，即右侧的最长公共子序列的长度大于左侧，那么<span class="hljs-symbol">X</span>和<span class="hljs-symbol">Y</span>的最长公共子序列长度即为右侧<br>                   c[i][j] = c[i<span class="hljs-number">-1</span>][j];<br>                   b[i][j] = <span class="hljs-number">2</span>;<br>               &#125;<br>               else<br>               &#123;<br>                   //第三种情况中的第二种，即左侧的最长公共子序列的长度大于右侧，那么<span class="hljs-symbol">X</span>和<span class="hljs-symbol">Y</span>的最长公共子序列长度即为左侧<br>                   c[i][j] = c[i][j<span class="hljs-number">-1</span>];<br>                   b[i][j] = <span class="hljs-number">3</span>;<br>               &#125;<br>           &#125;<br>       &#125;<br>       return c[m][n];<br>   &#125;<br><br>   public static void main(<span class="hljs-symbol">String</span>[] args) &#123;<br>       //char []<span class="hljs-symbol">X</span> = &#123;<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;E&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>&#125;;<br>       //char []<span class="hljs-symbol">Y</span> = &#123;<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;A&#x27;</span>&#125;;<br>   //char []<span class="hljs-symbol">X</span> = &#123;<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;A&#x27;</span>&#125;;<br>   //char []<span class="hljs-symbol">Y</span> = new char[<span class="hljs-symbol">X</span>.length];<br>   int []<span class="hljs-symbol">X</span> = &#123;<span class="hljs-number">5</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">8</span>,<span class="hljs-number">6</span>,<span class="hljs-number">9</span>&#125;;<br>   int []<span class="hljs-symbol">Y</span> = new int[<span class="hljs-symbol">X</span>.length];<br>   for(int i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-symbol">Y</span>.length;i++)<br>   <span class="hljs-symbol">Y</span>[i]=<span class="hljs-symbol">X</span>[i];<br>   <span class="hljs-symbol">Y</span> = <span class="hljs-symbol">Sort</span>(<span class="hljs-symbol">Y</span>);<br>       int [][]b = new int[<span class="hljs-symbol">X</span>.length+<span class="hljs-number">1</span>][<span class="hljs-symbol">Y</span>.length+<span class="hljs-number">1</span>];<br>       int x = lcsLength(<span class="hljs-symbol">X</span>,<span class="hljs-symbol">Y</span>,b);<br>       <span class="hljs-symbol">System</span>.out.println(x);<br>       lcs(<span class="hljs-symbol">X</span>.length,<span class="hljs-symbol">Y</span>.length,<span class="hljs-symbol">X</span>,b);<br>       x+=<span class="hljs-number">1</span>;<br>   &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tensorflow报错</title>
    <link href="/2020/10/23/tensorflow%E6%8A%A5%E9%94%99/"/>
    <url>/2020/10/23/tensorflow%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<p>tensorflow报错<code>UnknownError: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.</code></p><span id="more"></span><br /><p><strong>问题</strong><br>在运行tensorflow时出现报错信息<code>UnknownError: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.</code></p><p><strong>解决方法</strong><br>方法一：<br>在项目中添加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br>os.environ[<span class="hljs-string">&#x27;CUDA_VISIBLE_DEVICES&#x27;</span>] = <span class="hljs-string">&#x27;/gpu:0&#x27;</span><br></code></pre></td></tr></table></figure><p>可以正常运行，但此时没有使用GPU，而是使用的CPU进行运算</p><p>方法二：<br>重新安装cuDNN，在官网上下载对应的<a href="https://developer.nvidia.com/rdp/cudnn-archive">cuDNN</a>版本，解压，将文件夹内的所有文件复制到CUDA安装目录<code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0</code>下<br>再次运行可正常使用GPU进行运算</p>]]></content>
    
    
    <categories>
      
      <category>problems</category>
      
    </categories>
    
    
    <tags>
      
      <tag>problems</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>anaconda导入模块报错</title>
    <link href="/2020/10/23/anaconda%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%97%E6%8A%A5%E9%94%99/"/>
    <url>/2020/10/23/anaconda%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%97%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<p>Anaconda导入模块报错UserWarning: mkl-service package failed to import</p><span id="more"></span><p><strong>问题</strong></p><p>用新安装的anaconda运行之前的程序报错<code>UserWarning: mkl-service package failed to import</code>无法导入numpy，提示DLL错误</p><p><strong>解决</strong><br>是环境变量的配置问题，因为重新安装了anaconda所以环境变量没有配置<br>在环境变量中上半部分的用户变量中的<code>path</code>中添加下列路径</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">D:</span>\anaconda<br><span class="hljs-symbol">D:</span>\anaconda\Library\bin<br></code></pre></td></tr></table></figure><p>视具体类路径而言，总之就是anaconda的安装文件夹和其下的<code>Library\bin</code>文件夹</p>]]></content>
    
    
    <categories>
      
      <category>errors</category>
      
    </categories>
    
    
    <tags>
      
      <tag>error</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu下安装向日葵远程软件</title>
    <link href="/2020/10/19/Ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E7%A8%8B%E8%BD%AF%E4%BB%B6/"/>
    <url>/2020/10/19/Ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E7%A8%8B%E8%BD%AF%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>在Ubuntu 20.04下安装向日葵远程软件。</p><span id="more"></span><p>先在向日葵官网下载对应的.deb文件，然后在终端中执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo dpkg -i SunloginClient-10.0.2.24779_amd64.deb<br></code></pre></td></tr></table></figure><p>此时可能会报错说缺少 <code>libwebkitgtk-3.0-0</code>如下图所示：</p><p><img src="/img/problems/libwebkitgtk-3.0-0.webp" alt="libwebkitgtk-3.0-0"></p><p>解决方法：</p><ol><li>打开系统的源列表文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo gedit /etc/apt/sources.list<br></code></pre></td></tr></table></figure><ol start="2"><li>添加一项</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">deb http://cz.archive.ubuntu.com/ubuntu bionic main universe<br></code></pre></td></tr></table></figure><ol start="3"><li>然后再执行下列操作</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt update<br>sudo apt install -f<br></code></pre></td></tr></table></figure><p>然后找到向日葵打开即可运行。</p><p><img src="/img/problems/SunloginClient.webp" alt="image-20201019164808406"></p>]]></content>
    
    
    <categories>
      
      <category>杂</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Surface Go2 使用体验</title>
    <link href="/2020/07/28/Surface-Go2-%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    <url>/2020/07/28/Surface-Go2-%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h1>Surface Go2 使用体验</h1><p>关于这些天surface go2的使用体验，大致感受</p><span id="more"></span><h2 id="font-color-deepskyblue-购入-font"><font color="deepskyblue">购入</font></h2><p>购买Surface Go2大概是在6.15号，是的，在618前夕，考虑到平时上课的记笔记功能以及网课考试开卷的形式，最终购买了Surface Go2.</p><p>说起来买平板的想法一开始还是来源于在平时上课，邻座大佬用的Ipad记笔记貌似还挺香的，就有了买个平板的想法，但也仅限于想法。真的想买还是因为这次的网课，网课有了ppt，自然也方便做些笔记，但没有触屏写字的功能，用键盘输入，emmm，排版不佳，书写僵硬；用鼠标写字，emmm，效率低下，要多别扭有多别扭。因为就寻思着买个平板了。有考虑过Surface Pro，Ipad等，但最后根据需求还是买了Surface Go2（不还是因为没钱🤦‍♂️）</p><p>一开始想买那会儿Go2还没出，但是有传闻（只不过从19年就开始传了，也没见成），看看Go的飞机场边框又有点让人望而却步，再加上Go2说不定呢，最终也是犹犹豫豫没买。后来终于，微软悄无声息地上架了Surface Go2，一阵激动，看看美区商店的价格也还能接受，首发优惠+学生折扣+翻新说不定还能整个i3的版本（当然后来发现这是我想多了。。。翻新哪有那么快😓），本想着国区跟美区应该同步，结果美区都发售了国区还没个消息，最后终于公布时还莫得首发优惠，贵了一大截，最后还是走了某宝🤪</p><p>奔腾版Go2+亮银色欧缔兰键盘盖+黑色Surface Pen，4500左右，还能接受，给了一坨赠品，什么保护膜之类的，为了体验原生手感全部没用，丢在一旁吃灰。</p><p>啊？你问我为什么不买Ipad啊。可能果黑+田字信仰吧，再加上毫无苹果设备，懒得入苹果生态了。（而且surface好看啊，这个支架更是香🤪）</p><h2 id="font-color-deepskyblue-总览-font"><font color="deepskyblue">总览</font></h2><p>先整个全家福吧。</p><p><img src="/img/%E6%9D%82%E8%B0%88/%E4%B8%89%E4%BB%B6%E5%A5%97.webp" alt="全家福"></p><p>开箱后大致观感还是不错的，边框相较于一代还是有提升。欧缔兰材质的键盘手感确实不错，整个键盘的键程也是，手感挺棒，不过确实需要适应一下，毕竟小了一号😂（用到现在感觉这个材质键盘舒服是舒服。。。就是脏了不知道怎么洗。。。头疼）</p><h3 id="机身">机身</h3><p>机身的接口不多，一个Microsoft的磁吸充电孔，一个Type-C接口，一个3.5毫米耳机孔，没了。或者再加个存储卡的插槽😂总之跟苹果也差不多，卖机子不重要，卖拓展坞才重要。整个机子全靠一个百搭的Type-C接口，主要这个Type-C口可以用来充电，这个还是挺好用，只不过一直在家也没试过就是了。</p><p><img src="/img/%E6%9D%82%E8%B0%88/%E5%B1%8F%E5%B9%95.webp" alt="正面"></p><p>机子的上方是一个关机键和一个音量键（y1s1感觉手感太硬），下方是键盘的磁吸接口，左侧是正规的Surface Pen磁吸处，不过可能因为右侧充电口也有磁吸效果，可以Surface Pen也可以挂上面，只是不如左侧那么牢固。（同理，下方吸键盘的地方也可以吸笔🤪）</p><p>机身正面左上方和右上方各一个扬声器模组，上方则是补光灯、前置摄像头和Windows Hello模组，貌似还有几个孔和摄像头，也不知何用，应该都是Windows Hello模组的一部分。</p><p>背面则是银色背景，其实我不太明白为啥Go要加那么一个灰色色带，感觉像Surface Pro那样的纯色背面观感更加，背面下半部则是支架以及闪亮的Microsoft Logo（实测可以当镜子🤪）总体的观感还是不错的。机身比我想象中要圆滑一点，四边并不是那么的棱角分明，有明显的弧形设计在（其实我还挺喜欢棱角分明的质感的。。）支架最多可以翻折135°还是165°？多少来着，忘了。反正不管支架张开到什么角度，都可以稳定地支撑住，不会出现架不住瘫下去的情况。<br><img src="/img/%E6%9D%82%E8%B0%88/%E8%83%8C%E9%9D%A2.webp" alt="背面"></p><p><img src="/img/%E6%9D%82%E8%B0%88/%E7%BF%BB%E6%8A%98.webp" alt="翻折"></p><h3 id="配件">配件</h3><p>配件也就键盘和笔嘛。</p><p>键盘挺薄，但还是有一些分量的。接上机身后可以合拢当屏幕保护盖，也可以直接翻折到背面（这时候键盘断开连接）总体的拆卸安装都挺方便。</p><p>笔的话不像Apple Pencil一样那么圆，Surface Pen有一面是平整的，用于吸附在机身上。笔上一个按钮，按住相当于右键的效果，在OneNote中按住则是套索功能。笔的末端是一个按钮，也是橡皮擦，这个橡皮擦功能就非常的实用（然后某天微软大刀部说不定就给砍了🤪）在设置中可以对这个按钮进行快捷键的设定，单击、双击以及长按，对应不同的功能。</p><p>Surface Pen使用的是电池供电，而不是充电式的。（一开始见到Apple Pencil插在板子上充电感觉挺新奇也挺方便。但见多了总觉得怪怪的。。。）至于电量确实有保障。我从616到现在吧，断断续续地在用，一个半月时间，现在电量剩余99%。</p><h2 id="font-color-deepskyblue-使用-font"><font color="deepskyblue">使用</font></h2><h3 id="笔记">笔记</h3><p>首先还是OneNote吧，毕竟购入Surface做笔记自然离不了OneNote，总体来说笔没有很大的延迟，跟手也准的，标尺等功能的使用也方便。压感也体现得很明显（尽管我好像不是很用得到）末端的橡皮擦也很好用，不需要再额外点击对应的功能键。</p><p>在OneNote中的橡皮擦是一条一条地擦除，就像PS中的返回上一步操作一般，一次性画成的线条一次行擦除，而不是像“橡皮擦”功能一样，擦到哪儿哪儿就擦除。</p><p>OneNote的第一次同步确实有点慢，但当同步完成后就很舒服了，上网课时，笔记本截图贴进去，Surface就能立刻显示出来，Go2上做的笔记画的笔画在笔记本上也能第一时间同步，这个速度确实一开始惊了我一下。</p><p><img src="/img/%E6%9D%82%E8%B0%88/onenote.png" alt="OneNote"></p><p>至于说到PDF的话，Microsoft Store还是有些比较方便的应用的，一开始使用的免费的Xodo，以及后来不知为何，突然能白嫖的DrawBoard PDF，平时主要是使用DrawBoard功能更加丰富一些，对Surface Pen的支持也挺好（就是最细的笔触还是有点粗。。）</p><p><img src="/img/%E6%9D%82%E8%B0%88/drawboard.png" alt="Drawboard"></p><p>相对而言Xodo的笔触就细一些，不像Xodo的笔触那么粗，也有一些基本的功能，不知道为什么DrawBoard的橡皮擦反应有点慢。。可能是这个pdf太大了吧。。。大致的使用感觉也还可以，毕竟大部头的系统的笔记还是做在OneNote中。</p><p><img src="/img/%E6%9D%82%E8%B0%88/xodo.png" alt="xodo"></p><p>Xodo的界面更加简洁一点，对Surface Pen的支持也还行，不过还是会有一点延迟。整体功能不如Drawboard PDF，相当于一个是完整版，一个是轻量级，因此启动速度也有差异，一般做记号用Drawboard，单纯浏览用的Xodo。</p><h3 id="网页">网页</h3><p>原本看网上的各种评测说奔腾4425Y性能孱弱，浏览器多开几个标签页就会卡顿，但是对于我这种“只记得开标签，不记得关标签”的使用程度来看，并没有明显的卡顿，总体速度还是很流畅的（使用的旧版自带的Edge浏览器）估计到时候会下一个新版的Edge浏览器以便共通数据啥的，不过暂时还行。</p><h3 id="影音">影音</h3><p>emmmm，虽然不是爱奇艺，但多多少少还是会有用到视频播放。我主要使用的还是Bilibili的UWP应用以及网页播放器，总体感觉完全够用。毕竟也不追剧，追的剧也不是爱奇艺等国产平台上能有的。😓</p><p>音乐的话，网易云有UWP应用，平时使用的比较多的也就是网易云音乐，笔记本上用的也是UWP版，更加省电，占用的空间也比较小，轻量但必要功能齐全。近期还更新成了Win32转制版，功能更加丰富了，只是界面不像以前那么简洁了。。多了不少东西。</p><h3 id="游戏">游戏</h3><p>不会有人想用Surface Go2打游戏吧？不会吧不会吧？:dog2:</p><p>反正我也只在这机子上看我妈玩过蜘蛛纸牌，无法评价。🤪</p><h3 id="耗电">耗电</h3><p>关于耗电一开始还是做过大致测试。从15：00开始，到16：00，期间放着音乐，电量从51%掉到了34%，大概一小时17%的电，也就是大约能连续使用6个小时。在16：00到17：00，期间关闭了音乐，电量从34%掉到了22%，大概一小时12%的电，大约能连续使用8个小时，自然比不上微软官方宣传的时间，但对于一天的课程学习来说，有个午休时间可以充一会儿电，一般情况下还是够用的。充电速度也挺快，大约1-2小时能充满。</p><h2 id="font-color-deepskyblue-最后-font"><font color="deepskyblue">最后</font></h2><p>对我而言，对于Go2的各方面还是比较满意的，就是毕竟是Win板，对键盘的依赖还是挺大的，虚拟键盘聊胜于无，不像Ipad系列使用舒服。如果有苹果设备那自然是二话不说直接购入Ipad就完事了。</p><p>一开始我还是没有退出S模式的，感觉Microsoft Store的应用也大致够用。暂时也不需要退出，毕竟可能S模式更省电🤪但后来为了用Typora和Xmind还是退出了S模式，不过也就下了Typora、Xmind和VsCode三个应用，以后估计也就多一个新版Edge浏览器吧。</p><p>17号说的更新计划，到现在发，emmmm，也还行，不算鸽🤪</p>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
      <tag>Surface</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>后网课时期</title>
    <link href="/2020/07/17/%E5%90%8E%E7%BD%91%E8%AF%BE%E6%97%B6%E6%9C%9F/"/>
    <url>/2020/07/17/%E5%90%8E%E7%BD%91%E8%AF%BE%E6%97%B6%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<p>距离网课的那段时间已经过了好久，拖延症到现在也不知从何说起。姑且再谈谈大致印象吧。</p><span id="more"></span><h2 id="font-color-deepskyblue-网课伊始-font"><font color="deepskyblue">网课伊始</font></h2><p>  一开始的网课开始前，我们是满心欢喜的，毕竟没有了地点的拘束，可以睡得更香，有更多的休息时间，在不重要的课上也可以无顾及地做其他的事（当然一开始是“我全都要”的想法）事实也确实如此，但随着时间的流逝，网课的不断过去，一些问题也暴露了出来。慕课的粗糙、老师的失联、讨论的不便（人多话题总是会慢慢歪掉）不可否认的，网课确实给了我们很多的方便，但是学习的效率远不如面授，自控力的不足也加剧了这一情况。</p><p>  一开始的我还准时准点地守在电脑前，什么课都认真地做着笔记，听着课，而到了后半期的毛概等课则往往是在睡梦中度过，闹铃、进课堂、打卡、继续睡已成了常态。课后的整理知识点的时间也成了游戏时间，效率远不如在校，自然，主要原因是自身的低自控罢了。</p><h2 id="font-color-deepskyblue-网课收官-font"><font color="deepskyblue">网课收官</font></h2><p>  一开始就在想着买个平板，但在surface go和Ipad之间无法取舍，最后在surface go2 发售后还是选择了入手surface go2，毕竟本身生态和苹果毫无干系而且surface的支架是真的香🤪。总的体验还是不错的，同样的，由于拖延症。。。一直想发的surface go2开箱变成了surface go2体验报告又变成了咕咕咕。</p><p>  到手的surface go2也算是在网课的最后时期派上了用场，OneNote的第一次同步速度感人，但是一旦同步完成，电脑上截完图surface上也能实时显示，surface上刚写上的笔记在电脑上也能同步显示，确实有点超乎预料。最后的网课部分选择了开卷，部分选择了闭卷，也算是正常发挥吧，难的科目难的题目也都将自己的水准发挥出来了，简单的科目简单的题目也同样憨憨地错了😓</p><p>  最近也差不多出完了所有的成绩，怎么说呢，绩点学分到达了4.0+，算是两年四学期的最高值了，原以为可以保二等奖争一等奖了，然而一看别的同学的绩点同样跟平时相比有了巨幅上涨，这下可能又悬了。说是别人可能搜题作弊，老师批改不同，实则都是借口，无非是自己还不够优秀罢了，总之有好有坏，有进步的点也有怠惰，以后再继续努力吧。:muscle:</p><h2 id="font-color-deepskyblue-源于课设-font"><font color="deepskyblue">源于课设</font></h2><p>  这一次的数据库课程设计，由于疫情原因改为线上进行（当然这类课设线不线上一个样），因此小组成员选择了云端的协同开发。因为经常性要对数据库进行更改，一直传到QQ不断下载覆盖明显不太方便，最后是由小组买了一个服务器，把数据库建在了服务器上，这样使用软件通过给定的用户名和密码都可以对数据库进行更新，数据库也能够实时共享，方便了许多。</p><p>  对于代码的协同开发，对于Github一直有在使用，但又好像没有真正去使用，而这一次也算是有了一次小练手，和一个同学通过Github进行代码的并行开发以及合并，提高了开发课设软件的效率，同时也熟悉了Github和Git的用法。与我而言，相比于课设获得优秀，可能这次使用GIthub协同开发的经历更加重要。当然啦，课设有优秀那就更好了😁（最后也是成功拿到了优秀，尽管中间还是出了点小插曲）</p><p>  y1s1，Java Swing真的还有人用吗。。而且页面是真的丑。用了这些后才觉得CSS是真的厉害，实现的效果优秀多了。不过通过这次数据库课设也对Java的语法有了更深的认识。这时候又要想起博客里那篇咕不动了的Java学习笔记－_－b</p><h2 id="font-color-deepskyblue-暑期兼职-font"><font color="deepskyblue">暑期兼职</font></h2><p>  假期开始了，看着同学们一个个都找起了暑期兼职，而自己却还是废人一个待在家里，便不由得心痒痒，在网上找了几个兼职，又不觉得靠谱，犹犹豫豫也没了后话。正当这时，我妈带来了一个私人暑期补习班的兼职，便欣然应允。换我以前肯定是拒绝的，一直想着可不能像以前的小学老师祸害祖国的花朵😑，但可能是因为几天一直在给妹妹补习有了点大概，又或者是对有点零花钱的向往，抑或是同学们都在接触社会给我的压力，感觉像个自闭儿一样。。。。。</p><p>  总之是开始了暑期的兼职，教三年级的小朋友语数英。（至少是帮我规范了作息时间。😅）</p><p>  教了几天的感触还是不少的。最明显的就是小孩子的精力确实旺盛。中午的时候在教室上蹿下跳一点倦意都没有，而我却不自觉的眼睛酸痛，想要小咪一会儿。想想自己小时候也是根本闲不下来。现在的我们却往往都是满含倦意，是发生了什么呢？只是单纯的没睡好呢，还是经历的事情多了，承担的事情多了，所以疲惫多了呢？</p><p>  以往的我喜欢热闹，讨厌独处。现在的我觉得一人独处也很惬意，有自己的空间，安静、平和，无人打扰。就像以前的我讨厌米饭，喜欢面条等食物，不理解大人为什么唯独喜欢米饭，而现在的我在有面有粉条有年糕的情况下却还是青睐于米饭。至于为什么，我也不知道。</p><h2 id="font-color-deepskyblue-关于博客-font"><font color="deepskyblue">关于博客</font></h2><p>  现在看看，博客的上一次更新已经是5月10日，两个月过去了，虽说有期末、课设的因素在，但确实太鸽了。想法有不少，行动却不多。就像我的surface go2开箱，有始无终。其实也有在想到底要在博客放些什么，一开始想的是先做成笔记本，于是把一些课程的知识点整理起来发在博客上，但后来发现太耗时了，而且意义不太大，这些文章有在看，但看的并不多。再者现在有了surface，估计笔记类还是放在OneNote和Bamboo Paper这种笔记软件上更好一点。</p><p>  那博客放什么呢。？估计可能还是一些零零碎碎的小东西吧，供自己可以随时查阅。至少应该不会有像XX课YY内容这种的了😂</p>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Failed to connect to githubcom port 443 Timed out</title>
    <link href="/2020/07/09/Failed%20to%20connect%20to%20githubcom%20port%20443%20Timed%20out/"/>
    <url>/2020/07/09/Failed%20to%20connect%20to%20githubcom%20port%20443%20Timed%20out/</url>
    
    <content type="html"><![CDATA[<p><strong>出现问题</strong><br>在git的本地分支尝试向github推代码时出现了下述错误：</p><p><em>出错代码：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git push origin Cardy<br></code></pre></td></tr></table></figure><p><em>报错信息：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs git">$ git push origin Cardy<br>error: src refspec Cardy does not match any.<br>error: failed to push some refs to &#x27;git@github.com:GoatYoung/DormManager.git&#x27;<br></code></pre></td></tr></table></figure><p><strong>出现问题的原因</strong><br><img src="/img/problems/can't_find_branch.png" alt=""></p><p>本地库对应的分支是master，而尝试推的云端分支是Cardy，两个分支不一致，所以出现报错</p><p><strong>解决办法</strong></p><p>将代码改成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git push origin master:Cardy<br></code></pre></td></tr></table></figure><p>即：将本地库的master分支推到云端的Cardy分支上。</p>]]></content>
    
    
    <categories>
      
      <category>errors</category>
      
    </categories>
    
    
    <tags>
      
      <tag>error</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fluid添加暗黑模式</title>
    <link href="/2020/05/10/Fluid%E6%B7%BB%E5%8A%A0%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F/"/>
    <url>/2020/05/10/Fluid%E6%B7%BB%E5%8A%A0%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p>为Fluid添加暗色模式</p><span id="more"></span><p>之前一直就想为博客添加个暗色模式，但是拖延症晚期:crying_cat_face:，所以一直拖到了现在，主要的代码参考自<a href="https://royce2003.top/posts/41212.html">Royce</a>的博客，emmm，这里还是把代码搬一下。。</p><h3 id="HTML">HTML</h3><p>首先是HTML，在<code>\themes\fluid\layout\layout.ejs</code>中找到<code>&lt;body&gt;</code>标签，然后在下方加入以下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dark&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;switchDarkMode()&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> isNight = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getHours</span>() &gt;= <span class="hljs-number">22</span> || <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getHours</span>() &lt; <span class="hljs-number">7</span>;</span><br><span class="language-javascript">  <span class="hljs-keyword">if</span>( isNight || <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;dark&#x27;</span>) === <span class="hljs-string">&#x27;1&#x27;</span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-keyword">if</span>(!(isNight&amp;&amp;<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;noDark&#x27;</span>) === <span class="hljs-string">&#x27;1&#x27;</span>)) &#123;</span><br><span class="language-javascript">      <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;dark&#x27;</span>);</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript">  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;dark&#x27;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;body&quot;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&quot;dark&quot;</span>)?<span class="hljs-string">&quot;🌙&quot;</span>:<span class="hljs-string">&quot;🌞&quot;</span>;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>这里原本是用了媒体查询的，可以根据浏览器是否开启深色模式来对应开启深色模式，不过貌似有点小问题:sweat:，比如我的浏览器开了深色模式，但我点击了按钮，切换成了亮色模式，那肯定是说明我是喜欢以亮色模式访问该网站，但当我换了一个页面的时候（比如换了一个文章或回到首页）它又会检测到深色模式后切换到深色模式，emmmm，所以就先删了。。</p></blockquote><h3 id="JS">JS</h3><p>然后是JS，在主题下的<code>source\js</code>文件夹下新建一个 DarkMode.js 文件，在其中加入以下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//点击事件</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">switchDarkMode</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> ($(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-title function_">hasClass</span>(<span class="hljs-string">&#x27;dark&#x27;</span>)) &#123;<br>        <span class="hljs-comment">/*$(&quot;#dark&quot;).html(&quot;🌞&quot;);*/</span><br>       <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;dark&quot;</span>).<span class="hljs-property">style</span>.<span class="hljs-property">background</span> = <span class="hljs-string">&quot;url(&#x27;/img/dark.png&#x27;)&quot;</span>;<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;dark&#x27;</span>);<br><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;noDark&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>);<br><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;dark&#x27;</span>, <span class="hljs-string">&#x27;0&#x27;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">/*$(&quot;#dark&quot;).html(&quot;🌙&quot;); */</span><br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;dark&quot;</span>).<span class="hljs-property">style</span>.<span class="hljs-property">background</span> = <span class="hljs-string">&quot;url(&#x27;/img/light.png&#x27;)&quot;</span>;<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;dark&#x27;</span>);<br><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;dark&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>);<br><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;noDark&#x27;</span>, <span class="hljs-string">&#x27;0&#x27;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后在Fluid主题的<code>_config.yml</code>中找到<code>custom_js</code>项，加入新建的 js 文件。</p><p>这个原版代码是通过注释中的两个字符——“🌞“和“🌙”来进行区分暗色模式和亮色模式。但个人觉得不太美观，同样，他的博客中也有一篇提到了 “返回页面顶”的一个类似于小挂件的效果，于是就想将那个挂件的效果改为更改模式，因此用PS粗粗地P了两个图，分别是带月亮dark.png和带太阳的light.png，在该段JS代码中，在切换模式的同时，将两个图片进行了切换。</p><h3 id="CSS">CSS</h3><p>最后是CSS，在主题下的<code>source\css</code>文件夹下，新建一个<code>DarkMode.styl</code>因为使用的是 style 文件，所以可以不在 <code>_config.yml</code>中引入，直接在同目录下的<code>main.styl</code>中进行导入即可。添加以下代码。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 切换按钮 */</span><br><span class="hljs-selector-id">#dark</span><br>  <span class="hljs-attribute">cursor</span> pointer<br>  <span class="hljs-attribute">position</span> fixed<br>  <span class="hljs-attribute">z-index</span> <span class="hljs-number">100</span><br>  <span class="hljs-attribute">left</span> <span class="hljs-number">50px</span> <br>  <span class="hljs-attribute">width</span> <span class="hljs-number">70px</span><br>  <span class="hljs-attribute">height</span> <span class="hljs-number">600px</span><br>  <span class="hljs-attribute">top</span> -<span class="hljs-number">350px</span><br>  <span class="hljs-attribute">box-shadow</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-comment">/* 去除外边框的阴影 */</span><br><br>  &amp; &gt; <span class="hljs-selector-tag">i</span><br>    <span class="hljs-attribute">display</span> <span class="hljs-attribute">none</span> <span class="hljs-comment">/* 隐藏一个小箭头图标，否则会在图片上出现箭头 */</span><br><br><span class="hljs-comment">/*暗黑模式*/</span><br><span class="hljs-selector-class">.dark</span><br>  <span class="hljs-attribute">background-color</span> rgb(<span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>)<br>  <br><br>  <span class="hljs-comment">/* 主体 */</span><br>  <span class="hljs-selector-id">#board</span> <br>    <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#1c1c21</span><br>    <span class="hljs-attribute">color</span> <span class="hljs-selector-id">#a09c9c</span><br>  <br>  <span class="hljs-selector-tag">blockquote</span><br>    <span class="hljs-attribute">border-left</span> .<span class="hljs-number">25em</span> solid <span class="hljs-selector-id">#68696a</span><br>  <span class="hljs-selector-tag">img</span>  <br>    <span class="hljs-attribute">filter</span> brightness(<span class="hljs-number">50%</span>)<br><br>  <span class="hljs-selector-tag">p</span><br>  <span class="hljs-selector-class">.index-info</span> <span class="hljs-selector-tag">a</span>  <br>    <span class="hljs-attribute">color</span> <span class="hljs-selector-id">#718096</span><br><br>  <span class="hljs-selector-class">.index-info</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span><br>    <span class="hljs-attribute">color</span> <span class="hljs-selector-id">#3aa7f9</span><br><br>  <span class="hljs-selector-class">.markdown-body</span><br>    <span class="hljs-selector-tag">h1</span>,<span class="hljs-selector-tag">h2</span>,<span class="hljs-selector-tag">h3</span>,<span class="hljs-selector-tag">h4</span>,<span class="hljs-selector-tag">h5</span>,<span class="hljs-selector-tag">h6</span>,s,<span class="hljs-selector-tag">li</span>  <br>      <span class="hljs-attribute">color</span> rgb(<span class="hljs-number">191</span>, <span class="hljs-number">191</span>, <span class="hljs-number">191</span>) !important<br><br>    <br>  <span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">a</span><br>    <span class="hljs-attribute">color</span> rgb(<span class="hljs-number">153</span>, <span class="hljs-number">189</span>, <span class="hljs-number">230</span>)<br><br>  <span class="hljs-comment">/* 顶栏 */</span><br>  <span class="hljs-selector-class">.navbar-col-show</span><br>  <span class="hljs-selector-class">.top-nav-collapse</span>  <br>    <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#282c34</span><br>    <br>  <span class="hljs-selector-class">.navbar</span> <span class="hljs-selector-tag">a</span>  <br>    <span class="hljs-attribute">color</span> rgb(<span class="hljs-number">191</span>, <span class="hljs-number">191</span>, <span class="hljs-number">191</span>) !important<br>    <br>  <span class="hljs-selector-class">.animated-icon</span> <span class="hljs-selector-tag">span</span>   <span class="hljs-comment">/* 手机端 */</span><br>    <span class="hljs-attribute">background-color</span> rgb(<span class="hljs-number">191</span>, <span class="hljs-number">191</span>, <span class="hljs-number">191</span>)<br><br><br>  <span class="hljs-comment">/* page-number */</span><br>  <span class="hljs-selector-class">.pagination</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span><br>  <span class="hljs-selector-class">.pagination</span> <span class="hljs-selector-class">.current</span>  <br>    <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#6b6b6b73</span><br>    <span class="hljs-attribute">color</span> rgb(<span class="hljs-number">191</span>,<span class="hljs-number">191</span>,<span class="hljs-number">191</span>)<br><br><br>  <span class="hljs-comment">/* 打字机 */</span><br>  <span class="hljs-selector-id">#subtitle</span><br>  <span class="hljs-selector-class">.dark</span><span class="hljs-selector-class">.typed-cursor--blink</span><br>  <span class="hljs-selector-class">.scroll-down-arrow</span><br>    <span class="hljs-attribute">color</span> <span class="hljs-selector-id">#dfdfdf</span><br><br><br>  <span class="hljs-comment">/* back to top */</span><br>  <span class="hljs-selector-id">#scroll-top-button</span><br>    <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#282c34</span><br><br>    <span class="hljs-selector-tag">i</span><br>      <span class="hljs-attribute">color</span> <span class="hljs-selector-id">#a09c9c</span><br>    <br><br>  <span class="hljs-comment">/* Toc */</span><br>  <span class="hljs-selector-class">.tocbot-list</span> <span class="hljs-selector-tag">a</span><br>    <span class="hljs-attribute">color</span> <span class="hljs-selector-id">#a09c9c</span><br><br>  <span class="hljs-selector-class">.tocbot-active-link</span><br>  <span class="hljs-selector-tag">footer</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span><br>    <span class="hljs-attribute">color</span> <span class="hljs-selector-id">#3aa7f9</span> !important<br><br>  <span class="hljs-comment">/* footer */</span><br>  <span class="hljs-selector-tag">footer</span><br>  <span class="hljs-selector-tag">footer</span> <span class="hljs-selector-tag">a</span><br>    <span class="hljs-attribute">color</span> <span class="hljs-selector-id">#718096</span><br>    <br>  <span class="hljs-comment">/* 表格 */</span><br>  <span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">td</span><br>  <span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">th</span> <br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">6px</span> <span class="hljs-number">13px</span>;<br>    <span class="hljs-attribute">border-width</span>: <span class="hljs-number">1px</span>;<br>    <span class="hljs-attribute">border-style</span>: solid;<br>    <span class="hljs-attribute">border-color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">54</span>, <span class="hljs-number">54</span>, <span class="hljs-number">54</span>);<br>    <span class="hljs-attribute">border-image</span>: initial;<br><br><br>  <span class="hljs-comment">/* 归档页 */</span><br>  <span class="hljs-selector-class">.list-group-item</span><br>    <span class="hljs-attribute">color</span> rgb(<span class="hljs-number">191</span>, <span class="hljs-number">191</span>, <span class="hljs-number">191</span>)<br>    <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#282c34</span><br>    <br>  <span class="hljs-selector-class">.list-group-item</span><span class="hljs-selector-pseudo">:hover</span><br>  <span class="hljs-selector-class">.tagcloud</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span><br>    <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#46484d</span><br><br><br>  <span class="hljs-comment">/* 友链页 */</span><br>  <span class="hljs-selector-class">.links</span><br>    <span class="hljs-selector-class">.card</span>  <br>      <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#1c1c21</span><br>        <br>    <span class="hljs-selector-class">.card-body</span><span class="hljs-selector-pseudo">:hover</span>  <br>      <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#46484d</span><br>        <br>    <span class="hljs-selector-class">.link-title</span><br>    <span class="hljs-selector-class">.link-intro</span>  <br>      <span class="hljs-attribute">color</span> rgb(<span class="hljs-number">191</span>, <span class="hljs-number">191</span>, <span class="hljs-number">191</span>)<br>    <br><br>  <span class="hljs-comment">/* note标签 可能这配色有点丑 */</span><br>  <span class="hljs-selector-class">.note-info</span><br>    <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#3b5359</span><br>    <span class="hljs-attribute">border-color</span> <span class="hljs-selector-id">#006d80</span><br><br>  <span class="hljs-selector-class">.note-danger</span><br>    <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#783f42</span><br>    <span class="hljs-attribute">border-color</span> <span class="hljs-selector-id">#670009</span><br><br>  <span class="hljs-selector-class">.note-success</span><br>    <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#2a3e2e</span><br>    <span class="hljs-attribute">border-color</span> <span class="hljs-selector-id">#005915</span><br><br>  <span class="hljs-selector-class">.note-warning</span><br>    <span class="hljs-attribute">background-color</span> <span class="hljs-selector-id">#5b543e</span><br>    <span class="hljs-attribute">border-color</span> <span class="hljs-selector-id">#846500</span><br><br>  <span class="hljs-selector-class">.note-primary</span><br>    <span class="hljs-attribute">background-color</span> rgb(<span class="hljs-number">69</span>, <span class="hljs-number">89</span>, <span class="hljs-number">110</span>)<br>    <span class="hljs-attribute">border-color</span> rgb(<span class="hljs-number">28</span>, <span class="hljs-number">67</span>, <span class="hljs-number">110</span>)<br><br>  <span class="hljs-comment">/* aPlayer */</span><br>  <span class="hljs-selector-class">.aplayer</span> <br>    <span class="hljs-attribute">background</span> rgb(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">33</span>)  !important<br><br>  <span class="hljs-selector-class">.aplayer-lrc</span><span class="hljs-selector-pseudo">:after</span><br>    <span class="hljs-attribute">background</span> linear-gradient(rgba(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">33</span>, <span class="hljs-number">0</span>) <span class="hljs-number">0px</span>, rgba(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">33</span>, <span class="hljs-number">0.8</span>)) !important<br><br>  <span class="hljs-selector-class">.aplayer-lrc</span><span class="hljs-selector-pseudo">:before</span><br>    <span class="hljs-attribute">background</span> linear-gradient(rgb(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">33</span>) <span class="hljs-number">0px</span>, rgba(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">33</span>, <span class="hljs-number">0</span>)) !important<br><br>  <span class="hljs-selector-class">.aplayer</span><span class="hljs-selector-class">.aplayer-withlist</span> <span class="hljs-selector-class">.aplayer-info</span><br>    <span class="hljs-attribute">border-bottom</span> <span class="hljs-number">1px</span> solid rgb(<span class="hljs-number">48</span>, <span class="hljs-number">48</span>, <span class="hljs-number">48</span>) !important<br><br>  <span class="hljs-comment">/* valine */</span><br>  <span class="hljs-selector-class">.v</span> <span class="hljs-selector-class">.vwrap</span> <br>    <span class="hljs-attribute">margin-bottom</span> <span class="hljs-number">10px</span><br>    <span class="hljs-attribute">position</span> relative<br>    <span class="hljs-attribute">border-width</span> <span class="hljs-number">1px</span><br>    <span class="hljs-attribute">border-style</span> solid<br>    <span class="hljs-attribute">border-color</span> rgb(<span class="hljs-number">41</span>, <span class="hljs-number">41</span>, <span class="hljs-number">41</span>)<br>    <span class="hljs-attribute">border-image</span> initial<br>    <span class="hljs-attribute">border-radius</span> <span class="hljs-number">4px</span><br>    <span class="hljs-attribute">overflow</span> hidden<br>    <span class="hljs-attribute">padding</span> <span class="hljs-number">10px</span><br><br>  <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span><br>    <span class="hljs-attribute">color</span> <span class="hljs-selector-id">#3aa7f9</span> <br><br>  <span class="hljs-selector-class">.drop-cap</span> <span class="hljs-selector-class">.index-card</span> <span class="hljs-selector-tag">a</span> <span class="hljs-selector-class">.post-meta</span> <span class="hljs-selector-tag">p</span><br>    <span class="hljs-attribute">color</span> <span class="hljs-selector-id">#a09c9c</span><br><br></code></pre></td></tr></table></figure><p>对于原版CSS中的配色方案进行了微调，同时在CSS中添加了切换按钮的点击效果，原本是点击图片直接切换模式和图片，但感觉略显生硬，因此为它添加了一点小效果，就像是旧式的拉绳式的电灯，当按下时，“绳子变长”，即图片下移一部分，当鼠标松开时再回到原位，并更换图片。</p><p>将原版HTML中的&lt;div&gt;标签改为&lt;a&gt;标签，这样便可以通过<code>:active</code>来响应鼠标按下事件，只需要在鼠标按下时将图片下移即可。即在style文件最后添加</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-id">#dark</span><span class="hljs-selector-pseudo">:active</span><br>  <span class="hljs-attribute">top</span> -<span class="hljs-number">300px</span><br></code></pre></td></tr></table></figure><blockquote><p>原本想着是不是要用贝塞尔曲线来加个动画来着。。。后来发现根本也不会按那么久。单单点击只要让图片下移就可以有差不多的效果了。:see_no_evil:</p></blockquote><div><a class="btn"  href="https://cdn.jsdelivr.net/gh/DuranceX/BlogPhoto/img/light.png">light图片</a><a class="btn" href="https://cdn.jsdelivr.net/gh/DuranceX/BlogPhoto/img/dark.png"">dark图片</a></div>]]></content>
    
    
    <categories>
      
      <category>博客美化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>美化</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DRAM三种刷新方式</title>
    <link href="/2020/04/16/DRAM%E4%B8%89%E7%A7%8D%E5%88%B7%E6%96%B0%E6%96%B9%E5%BC%8F/"/>
    <url>/2020/04/16/DRAM%E4%B8%89%E7%A7%8D%E5%88%B7%E6%96%B0%E6%96%B9%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p>DRAM的三种刷新方式：集中刷新、分散刷新、异步刷新。</p><span id="more"></span><p><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/DRAM.png" alt=""><br>电路中的C1和C2用于保持数据，但因为电容C1和C2保持电荷很小，所以能维持稳定的时间也很短，因此要进行刷新操作来对C1和C2充电</p><p>刷新与行地址有关。<br>刷新时一行行进行的，必须在刷新周期内，由专用的刷新电路来完成对基本单元电路的逐行刷新，才能保证DRAM内的信息不丢失。</p><p>有三种刷新方式：集中刷新、分散刷新、异步刷新。</p><p><font color=#1ebbbb><b>假定:</b></font></p><ol><li>刷新周期为2ms</li><li>存取周期为0.5μs，即刷新一行的时间是0.5μs</li><li>对128 x 128的矩阵的存储芯片进行刷新，按存储单元（1B/单元）分为128行和128列，即128 * 128 * 1B/单元=2^14^个单元 * 1B/单元 = 16KB内存。<br>例如16k x 8的芯片就是128行 * 128列</li></ol><h3 id="集中刷新">集中刷新</h3><p>集中刷新是在规定的一个刷新周期内，对全部存储单元集中一段时间逐行进行刷新，此刻必须停止读/写操作。</p><p>所需的时间为0.5μs * 128 = 64μs，在这64μs的时间内对128行逐行进行刷新，在这期间不能进行读/写操作，称为“死时间”。</p><p>在2ms内有2000 / 0.5 = 4000个读写周期，其中128个读写周期用来刷新，所以<strong>平均读写周期为 2ms/（4000-128） = 0.5165μs</strong></p><p><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E9%9B%86%E4%B8%AD%E5%88%B7%E6%96%B0.png" alt=""></p><h3 id="分散刷新">分散刷新</h3><p>分散刷新是指对每行存储单元的刷新分散到每个存取周期中，即每次存取之后对该行数据进行一次刷新，相对于一个存取周期内对该行数据进行两次访问，因此延长了存取周期，<strong>平均读写周期为1μs</strong>，前半段用来存取，后半段用来刷新。这样每有128个读取操作，就会把0-127行全部刷新一遍，<strong>刷新周期为1μs * 128 = 128μs</strong>（即过128μs，数据全部刷新了一次）<br>这样做虽然解决了“死时间”的问题，但刷新过于频繁，影响性能。</p><p><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%88%86%E6%95%A3%E5%88%B7%E6%96%B0.png" alt=""></p><h3 id="异步刷新">异步刷新</h3><p>异步刷新既可以缩短“死时间”，又可以充分利用最大刷新间隔为2ms的特点，不过于频繁地刷新从而影响性能，那就可以把128行的刷新步骤平均分配到这2ms中，即<strong>每隔15.6μs刷新一行</strong>（2000μs / 128 ≈ 15.6μs），而每行的刷新时间仍为0.5μs，这样<strong>刷新间隔为2ms，死时间为0.5μs</strong>。可以理解为把2ms分成128段，每段15.6μs，在每段分别执行集中刷新。</p><p><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%BC%82%E6%AD%A5%E5%88%B7%E6%96%B0.png" alt=""></p><p>参考：<a href="https://blog.csdn.net/m0_37345402/article/details/89811528?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1">CSDN博客-DRAM的三种刷新方式的刷新周期问题</a></p>]]></content>
    
    
    <categories>
      
      <category>计算机组成原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>计算机组成原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS学习笔记</title>
    <link href="/2020/03/16/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2020/03/16/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>css的一些学习笔记</p><span id="more"></span><h1>分类</h1><h2 id="元素内嵌样式表">元素内嵌样式表</h2><p>作为标签的全局属性存在，可以直接通过<code>style=&quot;&quot;</code>的形式进行添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background:#ff0000;color:white&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p style="background:#ff0000;color:white">test</p><h2 id="文档内嵌样式表">文档内嵌样式表</h2><p>在<code>&lt;header&gt;&lt;/header&gt;</code>标签内进行添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">p</span>&#123;</span><br><span class="language-css">            <span class="hljs-attribute">background</span>:<span class="hljs-number">#ff0000</span>;</span><br><span class="language-css">            <span class="hljs-attribute">color</span>:white;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="外部样式表">外部样式表</h2><p>在外部新建css文件，通过html中的<code>link</code>标签进行连接,例如在同一目录下新建一个<code>styles.css</code>进行导入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;styles.css&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="优先级">优先级</h2><p>元素内嵌样式表&gt;文档内嵌样式表&gt;外部样式表</p><h1>选择器</h1><h2 id="元素选择器">元素选择器</h2><p>直接使用元素名进行选择，对所有a元素适用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span>&#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20pt</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>选择所有元素，只要将p去掉，用<code>*</code>代替即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">*&#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20pt</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="类选择器">类选择器</h2><p>使用html的<code>class</code>属性来进行区分，在css中使用<code>.classname</code>来进行选择</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.test</span>&#123;</span><br><span class="language-css">            <span class="hljs-attribute">color</span>:blue;</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>:<span class="hljs-number">20pt</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;test&quot;</span>&gt;</span>dddd<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>也可以指定特定的HTML元素使用class。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.center</span> &#123;<span class="hljs-attribute">text-align</span>:center;&#125;<br></code></pre></td></tr></table></figure><p>如上所示，所有的<code>class=&quot;center&quot;</code>的 p 元素使用该样式表，其余元素不变。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.center</span> <span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">text-align</span>:center;&#125;<br></code></pre></td></tr></table></figure><p>如上所示，所有的<code>class=&quot;center&quot;</code>元素内的 p 元素使用该样式表，其余元素不变。</p><h2 id="ID选择器">ID选择器</h2><p>使用html的<code>id</code>属性进行区分，在css中使用<code>#idname</code>来进行选择</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-id">#test</span>&#123;</span><br><span class="language-css">            <span class="hljs-attribute">color</span>:blue;</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>:<span class="hljs-number">20pt</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;test&quot;</span>&gt;</span>dddd<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="根据属性选择">根据属性选择</h2><p>根据属性选择元素，使用<code>[属性名]</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-attr">[href]</span>&#123;</span><br><span class="language-css">            <span class="hljs-attribute">color</span>:blue;</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>:<span class="hljs-number">20pt</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;com1&quot;</span>&gt;</span>dddd<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;com2&quot;</span>&gt;</span>dddd<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>示例中通过使用<code>[href]</code>对<code>href</code>属性进行了选择，方括号中也可以添加具体的值来针对该属性值为某一具体值的元素进行选择，例如选择第一个a标签包含的元素，可使用<code>[href=&quot;com1&quot;]</code>来进行选择。</p><h2 id="后代选择器">后代选择器</h2><p>使用空格<code> </code>符号<br>选中某元素中的所有后代元素，如下所示，选中是<code>&lt;div&gt;</code>中的所有<code>&lt;p&gt;</code>标签</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">p</span>&#123;<br>    <span class="hljs-attribute">background-color</span>:yellow;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="子元素选择器">子元素选择器</h2><p>使用大于号<code>&gt;</code><br>选中某元素中的直接后代元素。如下所示，选中是直接在<code>div</code>之下的<code>&lt;p&gt;</code>标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">div</span>&gt;<span class="hljs-selector-tag">p</span>&#123;</span><br><span class="language-css">    <span class="hljs-attribute">background-color</span>:yellow;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br>//示例<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这一行会应用样式表，因为是<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>之下的第一代后代元素<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这一行不会应用样式表，因为中间隔了一个<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>，不是第一代后代元素<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="相邻兄弟选择器">相邻兄弟选择器</h2><p>使用加号<code>+</code><br>选择是在某个元素<strong>之后第一次</strong>出现的另一个元素，如下所示，选中的是<code>&lt;div&gt;</code>结束后的第一个<code>&lt;p&gt;</code>标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">div</span>+<span class="hljs-selector-tag">p</span></span><br><span class="language-css">&#123;</span><br><span class="language-css">  <span class="hljs-attribute">background-color</span>:yellow;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这行没被选中，因为<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>还没结束<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这行被选中，是<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>结束后的第一个<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>元素<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这行没被选中，是<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>结束后的第二个<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>元素<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="后续兄弟选择器">后续兄弟选择器</h2><p>使用波浪符号<code>~</code><br>选择的是在某个元素<strong>之后</strong>的所有另一个元素，如下所示，选中的是<code>&lt;div&gt;</code>结束后的所有<code>&lt;p&gt;</code>标签（未包含在其他元素内）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">div</span>~<span class="hljs-selector-tag">p</span></span><br><span class="language-css">&#123;</span><br><span class="language-css"><span class="hljs-attribute">background-color</span>:yellow;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这行未被选中，因为在<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>之前，不会添加背景颜色。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>未被选中，因为在 div 中。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>被选中，因为不在 div 中，且没有被其他元素包裹<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这一行未被选中，因为包含在<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>中<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></figure><h1>背景（Background）</h1><h2 id="背景颜色">背景颜色</h2><p>使用<code>background-color</code>属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color:red&quot;</span>&gt;</span>fgffdfd<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="背景图像">背景图像</h2><p>使用<code>background-image</code>属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-image:/img/banner_img1.jpg&quot;</span>&gt;</span>ddddd<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="背景的水平或垂直平铺">背景的水平或垂直平铺</h2><p>使用<code>background-repeat</code>属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">body&#123;<br>    background-repeat:repeat-x; //在x方向平铺<br>    background-repeat:repeat-y; //在y方向平铺<br>    background-repeat:no-repeat; //不平铺<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://www.runoob.com/try/try.php?filename=trycss_background-image_gradient2">示例</a></p><h2 id="背景位置">背景位置</h2><p>使用<code>background-position</code>属性<br><strong>方式1</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">background-position:center center;<br></code></pre></td></tr></table></figure><p>可选值有<code>left</code>、<code>right</code>、<code>top</code>、<code>center</code>、<code>bottom</code><br>一个参数是水平方向，另一个参数是竖直方向，如果只指定一个参数，那另一值默认为center。</p><hr /><p><strong>方式2</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">background-position: 30% 20%; <br></code></pre></td></tr></table></figure><p>第一个值是水平位置，第二个值是垂直位置，左上角为0%，0%，右下角有100%，100%，如果只设定了一个值，那另一个值默认为50%。默认值0%，0%。</p><hr /><p><strong>方式3</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">background-position: 50px 100px;<br></code></pre></td></tr></table></figure><p>使用像素进行定位，第一个值是水平位置，第二个值是垂直位置，左上角是0，0。如果只设定了一个值，那另一个值默认为50%。可以混用%和px。</p><h2 id="背景固定方式">背景固定方式</h2><p>使用<code>background-attachment</code>属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">background-attachment:fixed;<br></code></pre></td></tr></table></figure><p>可选值<code>scoll</code>、<code>fixed</code>、<code>local</code><br><code>scoll</code>表示背景图片随页面滚动而滚动，是默认值<br><code>fixed</code>表示背景图片固定，不会随页面滚动而滚动<br><code>local</code>表示背景图片会随着元素内容的滚动而滚动</p><h2 id="背景大小">背景大小</h2><p>使用<code>background-size</code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background-size</span>:<span class="hljs-number">80px</span> <span class="hljs-number">60px</span>;<br></code></pre></td></tr></table></figure><p>可选值<code>length</code>、<code>percentage</code>、<code>cover</code>、<code>contain</code><br><code>length</code>：通过两个像素大小来表示，第一个值为宽度，第二个值为高度，若只设置一个参数，另一个参数为<code>auto</code>（自动）<br><code>perccentage</code>：通过相对于背景定位区域的比例来表示，第一个值为宽度，第二个值为高度，若只设置一个参数，另一个参数为<code>auto</code>（自动）<br><code>cover</code>：保持图像的纵横比并将图像缩放成将完全覆盖背景定位区域的最小大小<br><code>container</code>：保持图像的纵横比并将图像缩放成将适合背景定位区域的最大大小</p><h2 id="背景相对位置">背景相对位置</h2><p>使用<code>background-origin</code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background-origin</span>:content-box;<br></code></pre></td></tr></table></figure><p>可选值<code>padding-box</code>、<code>border-box</code>、<code>content-box</code><br><code>padding-box</code>：背景图像关于填充框的相对位置<br><code>border-box</code>: 背景图像关于边界框的相对位置<br><code>content-box</code>：背景图像关于内容库的相对位置<br><a href="https://www.runoob.com/try/try.php?filename=trycss3_background-origin">示例</a></p><h2 id="指定绘图区的背景">指定绘图区的背景</h2><p>使用<code>background-clip</code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background-clip</span>:content-box;<br></code></pre></td></tr></table></figure><p>可选值<code>padding-box</code>、<code>border-box</code>、<code>content-box</code><br><code>padding-box</code>：默认值。背景绘制在边框方框内（剪切成边框方框）<br><code>border-box</code>: 背景绘制在衬距方框内（剪切成衬距方框）<br><code>content-box</code>：背景绘制在内容方框内（剪切成内容方框）。<br><a href="https://www.runoob.com/try/try.php?filename=trycss3_background-clip">示例</a></p><h1>文本（Text）</h1><h2 id="颜色">颜色</h2><p>使用<code>color</code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">color</span>:red;&#125;<br><span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">color</span>:<span class="hljs-number">#ff0000</span>;&#125;<br><span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">color</span>:<span class="hljs-built_in">rgb</span>(<span class="hljs-number">255</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);&#125;<br></code></pre></td></tr></table></figure><p>可以使用颜色名、十六进制颜色、rgb颜色、rgba颜色</p><h2 id="对齐方式">对齐方式</h2><p>使用<code>text-align</code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h3</span> &#123;<span class="hljs-attribute">text-align</span><span class="hljs-selector-pseudo">:right</span>&#125;<br></code></pre></td></tr></table></figure><p>可选值<code>left</code>、<code>right</code>、<code>center</code>、<code>justify</code><br>分别对应左端对齐，右端对齐，居中，两端对齐。</p><h2 id="文本修饰（下划线等）">文本修饰（下划线等）</h2><p>使用<code>text-decoration</code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h1</span> &#123;<span class="hljs-attribute">text-decoration</span>:overline&#125;<br></code></pre></td></tr></table></figure><p>参数值<code>overline</code>、<code>underline</code>、<code>line-through</code>、<code>none</code><br>分别对应上划线、下划线、删除线、无线。<br>可以多设几个参数值添加多条线，例如</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h1</span> &#123;<span class="hljs-attribute">text-decoration</span>:overline underline line-through&#125;<br></code></pre></td></tr></table></figure><p>后面可以添加颜色值和线型，例如虚线——<code>dotted</code>，波浪线——<code>wavy</code><br>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h1</span> &#123;<br>  <span class="hljs-attribute">text-decoration</span>: underline overline dotted red;<br>&#125;<br> <br><span class="hljs-selector-tag">h2</span> &#123;<br>  <span class="hljs-attribute">text-decoration</span>: underline overline wavy blue;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="大小写">大小写</h2><p>使用<code>text-transform</code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">text-transform</span>:lowercase;&#125;<br></code></pre></td></tr></table></figure><p>可选项<code>none</code>、<code>capitalize</code>、<code>uppercase</code>、<code>lowercase</code><br><code>none</code>：默认，无格式<br><code>capitalize</code>：每个单词首字母大写<br><code>uppercase</code>：所有字母大写<br><code>lowercase</code>：所有字母小写</p><h2 id="缩进">缩进</h2><p>使用<code>text-indent</code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">text-indent</span>:<span class="hljs-number">50px</span>;<br></code></pre></td></tr></table></figure><ol><li>设置固定的缩进值，如50px;</li><li>设定基于父元素宽度的百分比的缩进</li></ol><h2 id="行高">行高</h2><p>使用<code>line-height</code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">line-height</span>:<span class="hljs-number">200%</span>&#125;<br></code></pre></td></tr></table></figure><p>可选项<code>number</code>、<code>length</code>、<code>%</code><br><code>number</code>：设置数字，比如2-两倍行距<br><code>length</code>：设置固定行间距，默认正常的行间距为20px;<br><code>%</code>：用百分比来进行设置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;line-height:50%&quot;</span>&gt;</span><br>小行距<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>小行距<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;line-height:20px&quot;</span>&gt;</span><br>正常行距<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>正常行距<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;line-height:2&quot;</span>&gt;</span><br>大行距<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>大行距<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p style="line-height:50%">小行距<br />小行距</p><p style="line-height:20px">正常行距<br />正常行距</p><p style="line-height:2">大行距<br />大行距</p><h1>盒子模型</h1><p><img src="/img/css/Box.png" alt=""><br><b></p><ul><li>Margin（外边框）:Border外的边框，透明，与其他元素之间的距离</li><li>Border（边框）：围绕在内边框和内容外的边框，是最直观可见的边框</li><li>Padding（内边框）：内容部分与边框之间的距离</li><li>Content（内容）：盒子模型的内容部分是我们要显示的内容，例如文本和图像<br></b></li></ul><p>我们设定的<code>width</code>和<code>height</code>属性指的是<code>Content</code>部分的宽度和高度<br>总宽度 = 内容宽度（width）+ 内边框宽度*2 + 边框宽度*2 + 外边框宽度*2</p><h1>边框（Border）</h1><h2 id="边框样式">边框样式</h2><p>使用<code>border-style</code>属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">border-style:solid;<br></code></pre></td></tr></table></figure><p>可选项：（随颜色不同，效果不同）</p><style>p.none {border-style:none;}p.dotted {border-style:dotted;}p.dashed {border-style:dashed;}p.solid {border-style:solid;}p.double {border-style:double;}p.groove {border-style:groove;}p.ridge {border-style:ridge;}p.inset {border-style:inset;}p.outset {border-style:outset;}p.hidden {border-style:hidden;}</style><p class="none">none——无边框。</p><p class="dotted">dotted——虚线边框。</p><p class="dashed">dashed——虚线边框。</p><p class="solid">solid——实线边框。</p><p class="double">double——双边框。</p><p class="groove">groove——凹槽边框。</p><p class="ridge">ridge——垄状边框。</p><p class="inset">inset——嵌入边框。</p><p class="outset">outset——外凸边框。</p><p class="hidden">hidden——隐藏边框。</p><h2 id="边框宽度">边框宽度</h2><p>使用<code>border-style</code>属性</p><h2 id="分别设置四边框">分别设置四边框</h2><b>- border-style:属性1，属性2，属性3，属性4;</b><br />&emsp;&emsp;上->右->下->左<br /><b>- border-style:属性1，属性2，属性3</b><br />&emsp;&emsp;上->左右->下<br /><b>- border-style:属性1，属性2</b><br />&emsp;&emsp;上下->左右<br /><b>- border-style:属性1</b><br />&emsp;&emsp;上下左右属性相同<br /><br />示例<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.test</span>&#123;</span><br><span class="language-css">    <span class="hljs-attribute">border-top</span>:thick double <span class="hljs-number">#ff0000</span>;</span><br><span class="language-css">    <span class="hljs-attribute">border-left</span>:<span class="hljs-number">2px</span> solid green;</span><br><span class="language-css">    <span class="hljs-attribute">border-right</span>:<span class="hljs-number">4px</span> dotted <span class="hljs-number">#00ffff</span>;</span><br><span class="language-css">    <span class="hljs-attribute">border-bottom</span>:hidden;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.test2</span>&#123;</span><br><span class="language-css">    <span class="hljs-attribute">border-left</span>:<span class="hljs-number">4px</span> solid <span class="hljs-number">#33b6ee</span>;</span><br><span class="language-css">    <span class="hljs-attribute">background-color</span>:<span class="hljs-built_in">rgba</span>(<span class="hljs-number">207</span>,<span class="hljs-number">235</span>,<span class="hljs-number">246</span>);</span><br><span class="language-css">    <span class="hljs-attribute">line-height</span>:<span class="hljs-number">3</span>;</span><br><span class="language-css">    <span class="hljs-attribute">Padding-left</span>:<span class="hljs-number">10px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><style>p.test{    border-top:thick double #ff0000;    border-left:2px solid green;    border-right:4px dotted #00ffff;    border-bottom:hidden;}p.test2{    border-left:5px solid #33b6ee;    background-color:rgba(207,235,246);    line-height:3;    Padding-left:10px;}</style><p class="test">示例<p><p class="test2">示例2<p><h2 id="轮廓-（outline）">轮廓 （outline）</h2><p>轮廓（outline）是在<code>border</code>外的一条线，属性值与Border一致，outline不占用额外空间。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border:2px dashed black;outline:2px solid red;&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p style="border:2px dashed black;outline:2px solid red;">test</p><h2 id="圆角（border-radius）">圆角（border-radius）</h2><p>使用<code>border-radius</code>属性，单位为像素px</p><h2 id="盒子阴影（box-shadow）">盒子阴影（box-shadow）</h2><p>使用<code>box-shadow</code>属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">box-shadow: 10px 10px 5px #888888;<br></code></pre></td></tr></table></figure><p>第一个参数：水平阴影的位置（为正即右移xxpx，为负左移）<br>第二个参数：垂直阴影的位置（为正即下移，为负上移）<br>（第三个参数，可选）：模糊程度<br>（第四个参数，可选）：阴影的大小<br>（第五个参数，可选）：阴影颜色</p><h2 id="边界图片（border-image）">边界图片（border-image）</h2><p>使用<code>border-image:url(image-url)</code>属性<br>使用图片作为边框样式，<a href="https://www.runoob.com/try/try.php?filename=trycss3_border-image">示例</a></p><h1>外边框（Margin）</h1><p><code>margin</code>项有两个可选项，<code>length</code>和<code>auto</code><br><code>auto</code>：设置浏览器边距，取决于浏览器<br><code>length</code>：固定的具体数值<br><b></p><ul><li>margin:边距1，边距2，边距3，边距4;</b><br /><br>  上-&gt;右-&gt;下-&gt;左<br /><br><b></li><li>margin:边距1，边距2，边距3</b><br /><br>  上-&gt;左右-&gt;下<br /><br><b></li><li>margin:边距1，边距2</b><br /><br>  上下-&gt;左右<br /><br><b></li><li>margin:边距1</b><br /><br>  上下左右边距相同<br><br /><br /></li></ul><h1>内边框（padding）</h1><p><code>padding</code>项，内容与<code>margin</code>相同</p><h1>尺寸（Dimension）</h1><p>最大高度——<code>max-height</code><br>最大宽度——<code>max-width</code><br>最小高度——<code>min-height</code><br>最小宽度——<code>min-width</code><br>都可以使用像素值或百分比来进行设置。</p><h1>显示（display&amp;visibility）</h1><h2 id="可见性">可见性</h2><p>使用<code>display</code>和<code>visibility</code>标签<br>通过设置<code>display:none</code>和<code>visibility:hidden</code>标签来隐藏元素。</p><p class="note note-primary"><b>visibility:hidden，可以隐藏元素，但是元素仍然占用空间，对布局会有影响。<br />display:none，可以隐藏元素，同时元素不占用空间。</b></p><h2 id="👀块元素和内联元素">👀块元素和内联元素</h2><p><strong>块级元素特性：</strong></p><ul><li>总是独占一行，表现为另起一行开始，而且其后的元素也必须另起一行显示;</li><li>宽度(width)、高度(height)、内边距(padding)和外边距(margin)都可控制;</li></ul><p><strong>内联元素(inline)特性：</strong></p><ul><li>和相邻的内联元素在同一行;</li><li>宽度(width)、高度(height)、内边距的top/bottom(padding-top/padding-bottom)和外边距的top/bottom(margin-top/margin-bottom)都不可改变，就是里面文字或图片的大小;</li></ul><p><strong>块级元素主要有：</strong><br>address , blockquote , center , dir , div , dl , fieldset , form , h1 , h2 , h3 , h4 , h5 , h6 , hr , isindex , menu , noframes , noscript , ol , p , pre , table , ul , li</p><p><strong>内联元素主要有：</strong><br>a , abbr , acronym , b , bdo , big , br , cite , code , dfn , em , font , i , img , input , kbd , label , q , s , samp , select , small , span , strike , strong , sub , sup ,textarea , tt , u , var</p><p>👀CSS中，可以通过修改<code>dispaly</code>属性来改变块级显示或是内联显示</p><ul><li>display:block —— 显示为块级元素</li><li>display:inline —— 显示为内联元素</li><li>display:inline-block —— 显示为内联元素，表现为同行显示并可修改高度内外边距等属性</li></ul><p>例如通常将<code>&lt;ul&gt;</code>加上<code>display:inline</code>或<code>display:inline-block</code>属性，来使得列表水平显示，用作导航栏之类。</p><h1>定位（position）</h1><p>使用<code>position</code>属性，和<code>top</code>、<code>bottom</code>、<code>left</code>、<code>right</code>属性配合使用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">position</span>:static<br></code></pre></td></tr></table></figure><p>可选项：<code>static</code>、<code>fixed</code>、<code>relative</code>、<code>absolute</code>、<code>sticky</code></p><p><code>static</code>：默认值，没有定位，不受<code>top</code>、<code>left</code>等属性的影响。<br><code>fixed</code>：相对于窗口的固定位置，即使窗口滚动它也不动。通过四个属性值设定具体位置。<br><code>relative</code>：相对于该元素的正常位置。但是占用空间不变，例如两个标题，占用两行，通过top属性使第二行覆盖第一行，则第二行所占位置仍然存在，成为空白。<br><code>absolute</code>：绝对定位，相对于最近的以定位的父元素，若没有则相对于&lt;html&gt;，<code>absolute</code>定位的元素不占用空间，不影响布局，相当于“浮于文字上方”<br><code>sticky</code>：sticky定位的元素在没有移出窗口时相当于relative，在移出窗口后就位于窗口最上方，就是顶部菜单栏的形式。</p><p>此外，可以通过<code>z-index</code>属性来指定元素的堆叠顺序。相当于手动规定不同的图层顺序。<code>z-index</code>的值越大，图层就在越上层。如果没有定义<code>z-index</code>属性的话，最后定位在HTML代码中的元素将在最前面。</p><h1>裁剪（clip）</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">//固定格式<br><span class="hljs-attribute">clip</span>:<span class="hljs-built_in">rect</span>(top, right, bottom, left)<br></code></pre></td></tr></table></figure><p><code>top</code>：表示从上方截去多少像素<br><code>right</code>：表示左侧剩余多少像素<br><code>bottom</code>：表示上方剩余多少像素<br><code>left</code>：表示从左侧截去多少像素<br>🐷就很诡异</p><h1>溢出处理（overflow）</h1><p>使用<code>overflow</code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">overflow</span>:hidden;<br></code></pre></td></tr></table></figure><p>可选项：<code>visible</code>、<code>hidden</code>、<code>scroll</code>、<code>auto</code><br><code>visible</code>：默认值，溢出了就在下方继续显示<br><code>hidden</code>：溢出后将溢出内容隐藏<br><code>scroll</code>：提供一个滚动条<br><code>auto</code>：在溢出后再提供一个滚动条以供查看内容</p><h1>浮动（float&amp;clear）</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">float</span><span class="hljs-selector-pseudo">:left</span>;<br><span class="hljs-attribute">clear</span>:both;<br></code></pre></td></tr></table></figure><p>可选项<code>left</code>、<code>right</code>分别对应靠左和靠右<br>使用<code>clear</code>可规定元素周围不出现浮动元素，可选项<code>left</code>、<code>right</code>、<code>both</code><br>图片的浮动效果类似于word中“文字环绕型”</p><h1>布局\对齐</h1><h2 id="元素居中对齐">元素居中对齐</h2><p>使用<code>margin:auto</code>来进行元素居中对齐</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;</span></span><br><span class="hljs-string"><span class="hljs-tag">    margin: auto;</span></span><br><span class="hljs-string"><span class="hljs-tag">    width: 60%;</span></span><br><span class="hljs-string"><span class="hljs-tag">    border: 3px solid #73AD21;</span></span><br><span class="hljs-string"><span class="hljs-tag">    padding: 10px;</span></span><br><span class="hljs-string"><span class="hljs-tag">&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>元素居中对齐<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><div style="    margin: auto;    width: 60%;    border: 3px solid #73AD21;    padding: 10px;"><p>元素居中对齐</p></div><h2 id="文本居中对齐">文本居中对齐</h2><p>使用<code>text-align</code>属性，</p><h2 id="图片居中对齐">图片居中对齐</h2><h3 id="使用margin-auto">使用margin:auto</h3><p>同样使用<code>margin:auto</code>来设置居中对齐，不过需要将图片使用<code>display:block</code>以块形式显示</p><h3 id="使用div">使用div</h3><p>可以在图像外层套一层<code>&lt;div&gt;</code>标签，并在div的样式表中设置<code>text-align:center</code></p><h2 id="左右对齐">左右对齐</h2><h3 id="使用position">使用position</h3><p>使用<code>position:absolute</code>属性来对齐元素，设定<code>left:0px;</code>进行左对齐，<code>right:0px</code>右对齐</p><h3 id="使用float">使用float</h3><p>使用<code>float:left</code>左对齐，<code>float:right</code>右对齐。<br>但是当子元素的高度大于父元素时，子元素将溢出。这时可以给父元素添加<code>overflow:auto</code>来解决子元素溢出的问题。<a href="https://www.runoob.com/try/try.php?filename=trycss_layout_clearfix">示例</a></p><h2 id="垂直居中对齐">垂直居中对齐</h2><h3 id="使用padding">使用padding</h3><p>即在头部顶部使用<code>padding</code>，即可实现垂直居中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding: 30px 0;border: 3px solid green;&quot;</span>&gt;</span>垂直居中<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p style="padding: 30px 0;border: 3px solid green;">垂直居中</p><h3 id="使用line-height">使用line-height</h3><p>设置<code>line-hright</code>的值与<code>height</code>的值相等即可实现垂直居中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;line-height:50px;height:50px;border: 3px solid green;&quot;</span>&gt;</span>垂直居中<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p style="line-height:50px;height:50px;border: 3px solid green;">垂直居中</p><h1>伪类</h1><p>在选择器后添加冒号<code>:</code>来选择伪类，常用举例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html">a:link&#123;color:red;&#125;  //未访问的链接<br>a:visited&#123;color:blue;&#125;  //已访问的链接<br>a:hover&#123;color:aqua;&#125;  //当鼠标悬停在上方时的样式<br>a:active&#123;color:yellow;&#125;   //已选中的链接，即按下还未松开的状态<br><br>a:before&#123;<br>    content:&quot;Read this -&quot;;<br>    background-color:yellow;<br>    color:red;<br>    font-weight:bold;   <br>&#125;  //在所有&quot;a&quot;元素前插入的内容和样式<br><br>a:after&#123;<br>    content:&quot;Read this -&quot;;<br>    background-color:yellow;<br>    color:red;<br>    font-weight:bold;   <br>&#125;  //在所有&quot;a&quot;元素后插入的内容和样式<br></code></pre></td></tr></table></figure><h1>👀多列</h1><h2 id="创建多列（column-count）">创建多列（column-count）</h2><p>使用<code>column-count</code>属性，通过指定后面的数字来规定将元素分为几列</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">column-count:3;<br></code></pre></td></tr></table></figure><p style="column-count:3">上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----</p><h2 id="列与列的间隙（column-gap）">列与列的间隙（column-gap）</h2><p>使用<code>column-gap</code>属性来设定列与列之间的间隙，下示代码将间隙设为50px;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">column-gap:50px;<br></code></pre></td></tr></table></figure><p style="column-count:3;column-gap:50px;">上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----</p><h2 id="列边框">列边框</h2><p><strong>边框样式</strong></p><p>使用<code>column-rule-style</code>属性</p><p><strong>边框颜色</strong></p><p>使用<code>column-rule-color</code>属性</p><p><strong>边框厚度</strong></p><p>使用<code>column-rule-width</code>属性</p><p><strong>缩写</strong><br>可使用<code>column-rule</code>属性来缩写</p><p><strong>示例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html">column-rule-style:solid;<br>column-rule-width:1px;<br>column-rule-color:#cccccc;<br><br>-------或者---------<br>column-rule:1px solid #cccccc;<br></code></pre></td></tr></table></figure><p style="column-count:3;column-rule:1px solid #cccccc;">上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----上述代码说明将元素分成3列-----分割一下-----</p><h2 id="指定元素跨越多少列（column-span）">指定元素跨越多少列（column-span）</h2><p>使用<code>column-span</code>属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">column-span:all;<br></code></pre></td></tr></table></figure><p>可选项<code>1</code>、<code>all</code>，<a href="https://www.runoob.com/try/try.php?filename=trycss3_column-span">示例</a></p><h2 id="列宽度（column-width）">列宽度（column-width）</h2><p>使用<code>column-width</code>属性可以设定每列的宽度，会根据宽度自动分列，不用规定列数。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">column-width:100px;<br></code></pre></td></tr></table></figure><p style="column-width:100px">上述代码将列宽度设定为100px，在电脑上一般为5列。。上述代码将列宽度设定为100px，在电脑上一般为5列。。上述代码将列宽度设定为100px，在电脑上一般为5列。。上述代码将列宽度设定为100px，在电脑上一般为5列。。</p><h1>多媒体查询（@media）</h1><p>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@media</span> <span class="hljs-keyword">not</span>|<span class="hljs-keyword">only</span> mediatype <span class="hljs-keyword">and</span> (expressions) &#123;<br>    CSS 代码...;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>mediatype</code>表示媒体类型，通过<code>not|only|all</code>来进行筛选</p><p><code>mediatype</code>的可选项：<br><code>print</code>：打印机<br><code>screen</code>：用于电脑屏幕、平板、智能手机等<br><code>speech</code>：用于屏幕阅读器</p><p>筛选项：<br><code>not</code>：不应用于后述媒体类型<br><code>only</code>：只应用于后述媒体类型<br><code>all</code>：应用于所有媒体类型，使用all时可以省去媒体类型，也可以只写媒体类型省去all</p><p>expressions：<br>表达式，当所选设备满足表达式时应用css样式</p><p><a href="https://www.runoob.com/try/try.php?filename=trycss3_media_queries1">示例：</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.test-media</span>&#123;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>:pink;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>:<span class="hljs-number">480px</span>)&#123;</span><br><span class="language-css">        <span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.test-media</span>&#123;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>:lightgreen;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>css</tag>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>定点数与浮点数</title>
    <link href="/2020/03/12/%E5%AE%9A%E7%82%B9%E6%95%B0%E4%B8%8E%E6%B5%AE%E7%82%B9%E6%95%B0/"/>
    <url>/2020/03/12/%E5%AE%9A%E7%82%B9%E6%95%B0%E4%B8%8E%E6%B5%AE%E7%82%B9%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1>定点数</h1><h2 id="定点数的格式（小数点位置固定不变）">定点数的格式（小数点位置固定不变）</h2><ol><li><p>定点整数（小数点约定在最低位的右边，最高位为符号位）</p><table><thead><tr><th style="text-align:center"><font color=red>X~n-1~</font></th><th style="text-align:center">X~n-2~</th><th style="text-align:center">…</th><th style="text-align:center">X~0~</th><th style="text-align:left">. --(小数点在最低位右侧)</th></tr></thead></table></li><li><p>定点小数（最高位为符号位，小数点约定在符号位右侧）</p><table><thead><tr><th style="text-align:center"><font color=red>X~n-1~</font></th><th style="text-align:center">. --(小数点在符号位右侧)</th><th style="text-align:center">X~n-2~</th><th style="text-align:center">…</th><th style="text-align:left">X~0~</th></tr></thead></table></li></ol><h2 id="定点数的表示范围">定点数的表示范围</h2><ol><li>无符号定点整数：0 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> X <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> 2^n^-1</li><li>有符号定点整数（补码）：-2^n-1^ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> X<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> 2^n-1^-1</li><li>有符号定点小数（补码）：-1 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> X <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> 1-2^-n+1^</li></ol><p>定点整数的真值是定点小数的真值的2^n+1^倍<br><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%AE%9A%E7%82%B9%E6%95%B0%E8%8C%83%E5%9B%B4.png" alt=""></p><h1>浮点数</h1><p>定点数与浮点数的比较：</p><ul><li>定点数表示数的范围比较小，运算容易发生溢出</li><li>浮点数表示数的范围比较大，运算不容易发生溢出</li></ul><p>浮点数格式：<br><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%B5%AE%E7%82%B9%E6%95%B0%E6%A0%BC%E5%BC%8F.png" alt=""><br>尾数决定了数的精度，阶码决定了数的范围。<br><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%B5%AE%E7%82%B9%E6%95%B0%E4%B8%80%E8%88%AC%E6%A0%BC%E5%BC%8F.png" alt=""><br>其中E~s~为阶符，即从这开始到尾符之间是阶码<br>M~s~为尾符，表明尾数部分从此开始。</p><h2 id="浮点数的规格化表示">浮点数的规格化表示</h2><p><strong>浮点数的规格化形式</strong></p><ul><li>M&gt;0（正数形式）：0.1xx…，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>≤</mo><mi>M</mi><mo>≤</mo></mrow><annotation encoding="application/x-tex">\frac{1}{2}\le M\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span></span></span></span> 1-2^-n+1^</li><li>M&lt;0（负数形式）：1.0xx…，即-1 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mi>M</mi><mo>≤</mo><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>−</mo></mrow><annotation encoding="application/x-tex">\le M \le -\frac{1}{2}-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">−</span></span></span></span> 2^-n+1^</li></ul><blockquote><p>（-1/2）~补~ = 1.100…0</p></blockquote><p><strong>规格化浮点数</strong><br>尾数进行移位，阶码做相应加减运算，直至尾数满足要求（类比科学记数法）</p><ul><li>左规：尾数每左移一次，阶码相应减1</li><li>右规：尾数每右移一次，阶码相应加1</li></ul><p><strong>规格化的意义</strong></p><ul><li>使机器真值的表示形式唯一</li><li>充分利用尾数更多的有效数字</li></ul><p><strong>✨规格化浮点数的表数范围</strong><br><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%A7%84%E6%A0%BC%E5%8C%96%E6%B5%AE%E7%82%B9%E6%95%B0%E8%8C%83%E5%9B%B4.png" alt=""><br>设阶码：p位（含阶符），移码；尾数：m位（含尾符），补码</p><ul><li>最大正数：0.11…1<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">×</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span> 2^11…1^</li></ul><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>m</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo separator="true">⋅</mo><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">(1-2^{-m+1})·2^{(2^{p-1}-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2869em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>最小正数：0.10…0<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">×</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span> 2^00…0^</li></ul><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo separator="true">⋅</mo><msup><mn>2</mn><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow></msup></mrow><annotation encoding="application/x-tex">\frac{1}{2}·2^{-2^{p-1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>最大负数：1.01…1<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">×</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span> 2^00…0^</li></ul><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>+</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>m</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo separator="true">⋅</mo><msup><mn>2</mn><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow></msup></mrow><annotation encoding="application/x-tex">-(\frac{1}{2}+2^{-m+1})·2^{-2^{p-1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2869em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>最小负数：1.00…0<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">×</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span> 2^11…1^</li></ul><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">-2^{(2^{p-1}-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1202em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p class="note note-primary">浮点数既可以表示数值范围很大的数，也可以表示数值范围很小但精确度很高的数<ul>    <li>阶码的位数（p），决定表示数的范围    <li>尾数的位数（m），决定表示数的精度</ul></p><p><strong>浮点数的溢出判断</strong><br>在最大负数和最小正数之间的称为下溢区<br>大于最大正数以及小于最小负数的区域称为上溢区</p><blockquote><p>溢出判断只是对规格化数的 ==阶码== 进行判断</p></blockquote><ul><li>下溢：自动视为0</li><li>上溢：溢出处理</li></ul>]]></content>
    
    
    <categories>
      
      <category>计算机组成原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>计算机组成原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器数的表示方法</title>
    <link href="/2020/03/12/%E6%9C%BA%E5%99%A8%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA%E6%96%B9%E6%B3%95/"/>
    <url>/2020/03/12/%E6%9C%BA%E5%99%A8%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>包括原码、反码、补码、移码的一些操作。</p><span id="more"></span><h1>原码</h1><p>用最高位表示符号（0——正，1——负），其他位表示数值的绝对值</p><blockquote><p>例如：<br>x1=+45 ===&gt; [x1]~原~ = <font color=red>0</font>0101101B<br>x2= -45 ===&gt; [x2]~原~ = <font color=red>1</font>0101101B</p></blockquote><p>在原码中，0的表示不唯一<br>[+0]~原~ = <font color=red>0</font>0000000B<br>[- 0]~原~ = <font color=red>1</font>0000000B</p><h1>反码</h1><ul><li>用最高位表示符号（0——正，1——负）</li><li><font color=blue>正数</font>的反码：与原码相同</li><li><font color=blue>负数</font>的反码：符号位不变，其余位按位取反</li></ul><blockquote><p>例如：<br>x1=+45 ===&gt; [x1]~原~ = <font color=red>0</font>0101101B ===&gt; [x1]~反~ = <font color=red>0</font>0101101B<br>x2= -45 ===&gt; [x2]~原~ = <font color=red>1</font>0101101B ===&gt; [x2]~反~ = <font color=red>1</font>1010010B</p></blockquote><p>在反码中，0的表示不唯一<br>[+0]~反~ = <font color=red>0</font>0000000B<br>[- 0]~反~ = <font color=red>1</font>1111111B</p><h1>:star:补码</h1><ul><li>用最高位表示符号（0——正，1——负）</li></ul><p>在补码中，0的表示唯一<br>[+0]~补~ = <font color=red>0</font>0000000B<br>[- 0]~补~ = <font color=red>0</font>0000000B</p><p>所以将剩下的[100…0]位表示为最大负数，-2^n^</p><h2 id="补码的几种计算方式">补码的几种计算方式</h2><p>本例中的取反+1等效于-1取反</p><p><strong>第一种方法</strong></p><ul><li>正数的补码：和原码相同</li><li>负数的补码：符号位不变，==数值位按位取反== ，末位+1</li></ul><blockquote><p>例如：<br>x1=+45 ===&gt; [x1]~原~ = <font color=red>0</font>0101101B ===&gt; [x1]~补~ = <font color=red>0</font>0101101B<br>x2= -45 ===&gt; [x2]~原~ = <font color=red>1</font>0101101B ===&gt; [x2]~补~ = <font color=red>1</font>1010011B</p></blockquote><p><strong>第二种方法</strong></p><ul><li>正数的补码：和原码相同</li><li>负数的补码：从最低位（最右侧）起，到出现第一个1以前原码中的数字不变，以后逐位取反，符号位不变。</li></ul><blockquote><p>例如：<br>x1=-101 0111B    X2=-111 0000B<br>[x1]~原~ = <font color=red>1</font>101 011<font color=red>1</font>B ===&gt; [x1]~补~ = <font color=red>1</font>010 100<font color=red>1</font>B<br>//最右侧起第一个1是右侧第一位，所以从右侧第二位起到符号位为止，中间的位全部取反<br /><br>[x2]~原~ = <font color=red>1</font>11<font color=red>1 0000</font>B ===&gt; [x2]~补~ = <font color=red>1</font>00<font color=red>1 0000</font>B<br>//最右侧起第一个1是右侧第5位，所以从右侧第一位到第五位不变，第六位起到符号位为止，中间全部取反</p></blockquote><p><strong>第三种方法</strong></p><ul><li>正数的补码：和原码相同</li><li>负数的补码：相对应的正数的补码全部取反（包括符号位），在末位+1</li></ul><blockquote><p>例如：<br>[x1] = -45  [-x1] = +45<br>[-x1]~补~ = [-x1]~原~ = <font color=red>0</font>010 1101B<br>[x1]~补~ = <font color=red>1</font>1010011B</p></blockquote><p class="note note-primary">同样的，[-x1]<sub>补</sub>也可以通过[x1]<sub>补</sub>全部取反+1得到，说明一个数的正负补码可以互相通过全部位取反+1得到</p><blockquote><p>例如：<br>已知一个数的补码为[1101 0011B]，那么由符号位为1可知该数为负，其正数的补码由全部位取反+1得到，为[0010 1101B]，算出十进制数为+45（相当于该数绝对值为45），已知原数为负，所以该数为-45.</p></blockquote><p><strong>第四种方法</strong></p><ul><li>正数的补码：和原码相同</li><li>负数的补码：【2^n^-|x|】的补（原）码（因为是正数）</li></ul><blockquote><p>例如：<br>求-7的补码，因为-7需要四位二进制表示[1111B]，所以2^n^=2^4^=16<br>那么2^4^-|-7|=9，所以-7的补码就是9的补码，即1001B</p></blockquote><h2 id="补码的运算">补码的运算</h2><p><strong>补码的符号位也参与运算</strong><br>加法：[X+Y]~补~ = [X]~补~ + [Y]~补~<br>减法：[X-Y]~补~ = [X]~补~ + [-Y]~补~</p><h2 id="补码的算术移位">补码的算术移位</h2><p>符号位在移位时不变，正数左右移位都补0，负数向右移位空来的位补1，左移空出来的位补0</p><blockquote><p>例如：<br>[X]~原~ = 1001 ==&gt; [x]~补~ = 1111<br>右移一位（相当于除以2（位数越高越接近除以2））：1111 -&gt; 1111 = 1001 = -1，因为1除以2余1<br>左移一位（相当于乘以2，同理）：1111 -&gt; 1110 = 1010 = -2</p></blockquote><p>✨当符号位与最高位（最左位）不同时，左移会溢出</p><blockquote><p>例如：<br>0.1101~[补]~ = 0.1101~[原]~ = +13<br>那么左移乘以2应该为26，但26无法用4位二进制表示，所以溢出<br>0.1101左移后为0.1010 = +12 != 26<br /><br>1.0110~[补]~ = 1.1010~[原]~ = -10<br>那么左移乘以2应该为-20，同样无法用4位二进制表示，所以溢出<br>1.0110左移后为1.1100~[补]~ = 1.0101~[原]~ = -5 != -20</p></blockquote><h1>移码</h1><ul><li>定义：[X]~移~ = 2^n^ +X (-2^n^ &lt;= X &lt;= 2^n^-1)</li><li>用最高位表示符号，其中1——正，0——负</li><li>移码的计算方法：补码的符号位取反，数值位不变</li></ul><blockquote><p>例如：<br>x = -4, [x]~原~ = 1100 -&gt; [x]~补~ = 1100 -&gt; [x]~移~ = 0100<br>or<br>2^n^ = 2^3^ = 8 = 1000, [x]~移~ = [8]~原~ + [x]~原~ = 1000+1100 = 0100</p></blockquote><ul><li>真值越大，对应的移码也越大</li></ul><p>在移码中，0的表示是唯一的<br>[x]~移~ = 2^n^+0 = 1000…0</p><p><strong>移码的加减运算</strong><br>加法：[X]~移~ + [Y]~移~ = [X+Y]~补~ 然后符号位取反<br>减法：[X]~移~ - [Y]~移~ = [X-Y]~补~ 然后符号位取反</p>]]></content>
    
    
    <categories>
      
      <category>计算机组成原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>计算机组成原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML5学习笔记</title>
    <link href="/2020/03/05/HTML5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2020/03/05/HTML5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>html的入门笔记</p><span id="more"></span><p>学习资料：<a href="https://www.runoob.com/html">菜鸟教程</a></p><h1>基础框架</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1>头部元素</h1><h2 id="title">&lt;title&gt;</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br></code></pre></td></tr></table></figure><p>title标签定义了网页的标题，即在浏览器标签页上显示的内容</p><h2 id="base">&lt;base&gt;</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.baidu.com/&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>&lt;base&gt;标签描述了基本的链接地址，是该HTML文档中所有链接标签的默认链接。<br>例如在&lt;body&gt;里添加<code>&lt;img src=&quot;logo.png&quot;&gt;</code>，则其链接就相当于<code>https://www.baidu.com/logo.png</code></p><h2 id="link">&lt;link&gt;</h2><p><code>&lt;link&gt;</code>标签用来定义文档与外部资源之间的关系。最常见的用法是链接样式表。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;theme.css&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>其中<code>rel</code>表示关系这里是<code>stylesheet</code>即样式表，<code>href</code>表示链接文件的路径<br>所有<code>rel</code>属性值<a href="https://www.runoob.com/tags/tag-link.html">列表</a></p><h2 id="style">&lt;style&gt;</h2><p><code>&lt;style&gt;</code>标签定义了HTML文档的样式文件引用地址，也可以在<code>&lt;style&gt;</code>标签中直接添加样式来渲染HTML文档</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">body</span> &#123;<span class="hljs-attribute">background-color</span>:yellow&#125;</span><br><span class="language-css"><span class="hljs-selector-tag">p</span> &#123;<span class="hljs-attribute">color</span>:blue&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="meta">&lt;meta&gt;</h2><p><code>&lt;meta&gt;</code>标签用来描述一些基本的元数据，元数据不会显示在页面上，但会被浏览器解析，用于描述页面，例如网页描述、作者、最后修改时间等。<br>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 为搜索引擎定义关键词 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;keywords&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;HTML,CSS&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 为网页定义描述内容 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;description&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;learning blog&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 定义网页作者 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;author&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;初言&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 每30秒刷新当前页面 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;refresh&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;30&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 定义编码方式 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="script">&lt;script&gt;</h2><p><code>&lt;script&gt;&lt;/script&gt;</code>标签用于定于网页脚本，可以通过<code>src</code>属性指向外部脚本文件，也可以直接在标签内写脚本语句</p><p class="note note-primary">如果使用"src"属性，则< script>元素必须是空的</p><h1>标题</h1><p>html中使用<code>&lt;h1&gt;标题文本&lt;/h1&gt;</code>~<code>&lt;h6&gt;标题问题&lt;/h6&gt;</code>来描述6级标题</p><h1>注释</h1><p>使用<code>&lt;!-- 注释 --&gt;</code>来进行注释</p><h1>换行</h1><p>使用<code>&lt;br /&gt;</code>标签来进行换行<br><code>&lt;hr /&gt;</code>可以插入一条水平线，分割距离更大（分得更开）</p><hr />如上所示<h1>段落</h1><p><code>&lt;p&gt;段落&lt;/p&gt;</code>标签表示段落。</p><p class="note note-primary">HTML中无法识别多个空格和Enter键进行的回车，所有这些操作在html中都会被看成一个空格</p><p>因此在段落中如果需要换行，可以添加<code>&lt;br /&gt;</code>标签来进行换行。</p><p>段落即<code>&lt;p&gt;&lt;/p&gt;标签</code>会在段落前后自动加上<code>&lt;br /&gt;</code>，对比手动添加<code>&lt;br /&gt;</code>可以发现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html">文字1<br>文字2<br>文字3<br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>段落1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>段落2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>段落3<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>段落4<br><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>段落5<br><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>段落6<br></code></pre></td></tr></table></figure><p>在<a href="https://c.runoob.com/front-end/61">编辑器</a>里尝试。</p><h1 id="text">文本标签</h1><p>html中提供以下标签来对普通文字（比如这行）进行加粗等操作</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>粗体<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>斜体<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ins</span>&gt;</span>下划线<span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">del</span>&gt;</span>删除字（中划线）<span class="hljs-tag">&lt;/<span class="hljs-name">del</span>&gt;</span><br>这是<span class="hljs-tag">&lt;<span class="hljs-name">sub</span>&gt;</span>上标<span class="hljs-tag">&lt;/<span class="hljs-name">sub</span>&gt;</span><br>这是<span class="hljs-tag">&lt;<span class="hljs-name">sup</span>&gt;</span>下标<span class="hljs-tag">&lt;/<span class="hljs-name">sup</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>着重文字<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>强调文字<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mark</span>&gt;</span>高亮文字<span class="hljs-tag">&lt;/<span class="hljs-name">mark</span>&gt;</span><br></code></pre></td></tr></table></figure><p>显示效果如下：<br><b>粗体</b><br><i>斜体</i><br><ins>下划线</ins><br><del>删除字（中划线）</del><br>这是<sub>上标</sub><br>这是<sup>下标</sup><br><em>着重文字</em><br><strong>强调文字</strong><br><mark>高亮文字</mark></p><p class="note note-primary">可以发现着重文字和斜体的效果一样，强调文字和粗体的显示效果一样<br />但 strong 标签代表的是其文字的意义，是需要强调，引起用户注意的。而 b 标签只是代表其文字的样式是粗体也就是CSS中"font-weight:bold"的效果，而 strong 标签则可以通过CSS自定义成其他样式</p><h1>链接</h1><p>使用<code>&lt;a&gt;&lt;/a&gt;</code>标签来表示<br>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>链接文本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>href的参数有一个链接，它可以是具体的网址，也可以是该html中的一个<code>id</code>属性，如果是本页元素的id属性的话，即可实现页面内跳转，此时<code>url=&quot;#id&quot;</code><br>target的参数表示打开方式，常用的有两个参数，<code>_self</code>在当前标签页打开，<code>_blank</code>在新标签页打开。另有<code>_top</code>参数用来跳出框架，<a href="https://www.runoob.com/try/try.php?filename=tryhtml_frame_getfree">详情见</a>将，<code>_top</code>改为<code>_self</code>即可看出差别。<br>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.baidu.com/index.php?tn=93046615_hao_pg&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>新标签页打开百度<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.baidu.com/index.php?tn=93046615_hao_pg&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_self&quot;</span>&gt;</span>当前标签页打开百度<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#text&quot;</span>&gt;</span>跳转到“文本标签处”<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p><a href="https://www.baidu.com/index.php?tn=93046615_hao_pg" target="_blank">新标签页打开百度</a><br><a href="https://www.baidu.com/index.php?tn=93046615_hao_pg" target="_self">当前标签页打开百度</a><br><a href="#text">跳转到“文本标签处”</a></p><p>链接文本也可以不是文字，可以是图片或其他html元素<br>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.baidu.com/index.php?tn=93046615_hao_pg&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_top&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//www.baidu.com/img/baidu_jgylogo3.gif&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在<a href="https://c.runoob.com/front-end/61">编辑器</a>里尝试</p><p><code>&lt;a&gt;</code>标签还可以用来发送邮件(＃°Д°)<br>在<code>href</code>的参数中输入<code>mailto:balabala@qq.com</code>等即可实现(需要有邮件客户端)<br>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;mailto:example@qq.com&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_top&quot;</span>&gt;</span>简单版本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;mailto:example@qq.com?cc=someoneelse@example.com&amp;bcc=andsomeoneelse@example.com&amp;subject=Summer Party&amp;body=You are invited to a big summer party!&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_top&quot;</span>&gt;</span>进阶版本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p><a href="mailto:example@qq.com" target="_top">简单版本</a><br><a href="mailto:example@qq.com?cc=someoneelse@example.com&bcc=andsomeoneelse@example.com&subject=Summer Party&body=You are invited to a big summer party!" target="_top">进阶版本</a><br>在进阶版本中，cc表示抄送对象邮箱，bcc表示秘密抄送对象的邮箱，subject表示邮件标题，body则是邮件内容。</p><h1>内联样式</h1><p>当只有个别HTML元素需要特殊样式渲染时，可以使用内联样式，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:red;margin-left:20px;&quot;</span>&gt;</span>这是一个段落<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color:green&quot;</span>&gt;</span>这是一个段落<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p style="color:red;margin-left:20px;">这是一个段落</p><p style="background-color:green">这是一个段落</p>同样还有其他样式，在CSS里再做讨论<h1>图像</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;some_text&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;111&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;111&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>img</code>标签没有结束标签，<code>src</code>表示图像的路径，<code>alt</code>表示的当图片无法加载时，显示的文本，用来告诉用户大概是个什么图片，<code>width</code>和<code>height</code>属性则是指定图片的高度和宽度</p><p><strong>创建图像映像</strong><br>大意就是点击图像中的不同区域，实现不同的效果，就是将图像分成几个不同的区域，各自相应点击事件。<a href="https://www.runoob.com/try/try.php?filename=tryhtml_areamap">详情示例</a><br>其中：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 1、矩形：(左上角顶点坐标为(x1,y1)，右下角顶点坐标为(x2,y2)) --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">area</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;rect&quot;</span> <span class="hljs-attr">coords</span>=<span class="hljs-string">&quot;x1,y1,x2,y2&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">url</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 2、圆形：(圆心坐标为(X1,y1)，半径为r) --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">area</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;circle&quot;</span> <span class="hljs-attr">coords</span>=<span class="hljs-string">&quot;x1,y1,r&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">url</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 3、多边形：(各顶点坐标依次为(x1,y1)、(x2,y2)、(x3,y3) ......) --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">area</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;poly&quot;</span> <span class="hljs-attr">coords</span>=<span class="hljs-string">&quot;x1,y1,x2,y2 ......&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">url</span>&gt;</span><br></code></pre></td></tr></table></figure><h1>表格</h1><p>表格元素基本框架：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>th1<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>th2<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>row1,col1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>row1,col2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>row1,col3<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">rowspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>row1,col4<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>row2,col1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>row2,col2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><p>表格用<code>&lt;table&gt;</code>标签来定义，<code>&lt;tr&gt;&lt;/tr&gt;</code>表示一行，<code>&lt;td&gt;&lt;/td&gt;</code>表示该行里的一格,<code>&lt;th&gt;&lt;/th&gt;</code>表示表头，不同<code>&lt;tr&gt;</code>中的<code>&lt;td&gt;</code>数量不等可实现合并单元格，使用<code>cellpadding=&quot;10&quot;</code>来设置10px的格边距，使用<code>border=&quot;1&quot;</code>来添加宽度为1px的边框，使用<code>cellspacing=&quot;10&quot;</code>来添加格与格之间的间距，使用<code>rowspan=&quot;2&quot;</code>来添加纵向两个的合并单元格，使用<code>colspan=&quot;2&quot;</code>来添加横向两个的合并单元格。显示如下</p><table border="1">    <tr>        <th>th1</th>        <th>th2</th>    </tr>    <tr>        <td>row1,col1</td>        <td>row1,col2</td>        <td>row1,col3</td>        <td rowspan="2">row1,col4</td>    </tr>    <tr>        <td>row2,col1</td>        <td colspan="2">row2,col2</td>    </tr></table><h1>列表</h1><p>列表分为有序列表和无序列表，有序列表用<code>&lt;ol&gt;&lt;/ol&gt;</code>标签包括，无序标签用<code>&lt;ul&gt;&lt;/ul&gt;</code>标签包括，列表中每一记录用<code>&lt;li&gt;&lt;/li&gt;</code>表示<br>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html">有序列表：<br><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>first<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>second<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>third<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br><br>无序列表<br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>first<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>second<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>third<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p>显示如下<br>有序列表：</p><ol>    <li>first</li>    <li>second</li>    <li>third</li></ol><p>无序列表</p><ul>    <li>first</li>    <li>second</li>    <li>third</li></ul><p>可以在<code>&lt;ol&gt;&lt;/ol&gt;</code>标签中定义<code>type</code>属性来设置不同的序号，默认为&quot;1,2,3…&quot;，例如设定为<code>&lt;ol type=&quot;A&quot;&gt;&lt;/ol&gt;</code>，显示就会变成&quot;A,B,C,D…&quot;<a href="https://www.runoob.com/try/try.php?filename=tryhtml_lists_ordered">示例</a><br>同样，无序列表也可以通过设置对应的<code>style</code>属性来设置不同符号，默认为圆点</p><ul><li>圆点值为：<code>list-style-type:disc</code></li><li>空心圆圈值为：<code>list-style-type:circle</code></li><li>方形点值为：<code>list-style-type:square</code></li></ul><p><strong>自定义列表</strong><br>自定义列表以<code>&lt;dl&gt;&lt;/dl&gt;</code>标签包裹，自定义列表项由<code>&lt;dt&gt;&lt;/dt&gt;</code>标签包裹，自定义列表项的定义由<code>&lt;dt&gt;&lt;/dt&gt;</code>标签包裹。<br>示例：(以“-”作为序号)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>Coffee<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>- black hot drink<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>Milk<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>- white cold drink<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br></code></pre></td></tr></table></figure><dl>  <dt>Coffee</dt>  <dd>- black hot drink</dd>  <dt>Milk</dt>  <dd>- white cold drink</dd></dl><h1>区块</h1><p>使用<code>&lt;div&gt;&lt;/div&gt;</code>标签来对页面进行分块，方便布局，并通过<code>&lt;div&gt;&lt;/div&gt;</code>标签来对大块的内容块设置样式属性。</p><p><code>&lt;span&gt;&lt;/span&gt;</code>标签式内联元素，可用作文本的容器，与CSS搭配用于对部分文本设置样式属性</p><h1>表单元素</h1><h2 id="form">&lt;form&gt;</h2><p><code>&lt;form&gt;&lt;/form&gt;</code>标签用于创建供用户输入的HTML表单</p><p><strong><code>action</code>属性</strong><br><strong>action</strong>属性用于定义在提交表单时执行的动作。链接目标页面，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;demo-form.php&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>若省略action属性，则action会被设置为当前页面</p><h2 id="input">&lt;input&gt;</h2><p><code>&lt;input&gt;</code>标签通过定义不同的<code>type</code>属性可以实现不同的效果</p><p><strong>文本框</strong><br>在多数浏览器中，文本框的默认宽度是20个字符</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Input something&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><input type="text" placeholder="Input something"><hr /><p><strong>密码字段</strong><br><code>type</code>属性值为<code>password</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Input something&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><input type="password" placeholder="Input something"><hr /><p><strong>单选按钮</strong><br><code>type</code>属性为<code>radio</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> &gt;</span>选我选我<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> &gt;</span>选他选他<br></code></pre></td></tr></table></figure><p><input type="radio" >选我选我<br><input type="radio" >选他选他</p><p>这种情况下我们发现无法实现单选的效果，需要将两个按钮设置相同的<code>name</code>属性，，就可以实现单选效果了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;choice&quot;</span>&gt;</span>选我选我<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;choice&quot;</span>&gt;</span>选他选他<br></code></pre></td></tr></table></figure><p><input type="radio" name="choice">选我选我<br><input type="radio" name="choice">选他选他</p><hr /><p><strong>复选框</strong><br><code>type</code>属性为<code>checkbox</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Bike&quot;</span>&gt;</span>i have a bike<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Car&quot;</span>&gt;</span>i have a Car<br></code></pre></td></tr></table></figure><p><input type="checkbox" value="Bike">i have a bike<br><input type="checkbox" value="Car">i have a Car</p><hr /><p><strong>滑动轴</strong><br><code>type</code>属性为<code>range</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><input type="range" value="50" max="100" min="0" step="1"><p>用<code>max</code>限定最大值，<code>min</code>限定最小值，<code>value</code>设定初始值，<code>step</code>设定步长</p><hr /><p><strong>按钮</strong><br><code>type</code>属性为<code>button</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;点我！&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><input type="button" value="点我！"><hr /><p><strong>颜色</strong><br><code>type</code>属性为<code>color</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;color&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;#ff0000&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><input type="color" value="#ff0000">  可以设置<code>value</code>的值来设定初始值</p><hr /><p><strong>时间</strong><br><code>type</code>属性为<code>date</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;date&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><input type="date"><hr /><p>若<code>type</code>属性为<code>month</code>、<code>time</code>、<code>week</code>可有不同的效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;month&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;time&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;week&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><input type="month"><br /><br><input type="time"><br /><br><input type="week"></p><p><strong>选取文件</strong><br><code>type</code>属性为<code>file</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><input type="file"><p>使用<code>multiple</code>属性进行多选</p><p><strong>数字</strong><br><code>type</code>属性为<code>number</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><input type="number" max="100" min="0" value="50" step="5"><p>用<code>max</code>限定最大值，<code>min</code>限定最小值，<code>value</code>设定初始值，<code>step</code>设定步长</p><h2 id="label">&lt;label&gt;</h2><p><code>&lt;label&gt;</code>标签用于显示文本，但与普通文本相比，<code>&lt;label&gt;</code>标签可以响应鼠标点击事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;me&quot;</span>&gt;</span>选我选我<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;choice&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;me&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;选我选我&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;he&quot;</span>&gt;</span>选他选他<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;choice&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;he&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;选他选他&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><label for="me">选我选我</label><input type="radio" name="choice" id="me" value="选我选我"><br><label for="he">选他选他</label><input type="radio" name="choice" id="he" value="选他选他"></p><p>可与前项对比发现不同</p><h2 id="textarea">&lt;textarea&gt;</h2><p><code>&lt;textarea&gt;</code>标签用于创建一个可以拖动扩大缩小的文本框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span><br>我是一个文本框<br><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br></code></pre></td></tr></table></figure><textarea rows="5" cols="10">我是一个文本框</textarea><h2 id="select-及-datalist">&lt;select&gt;及&lt;datalist&gt;</h2><p>下拉框选项用<code>&lt;select&gt;</code>标签和<code>&lt;option&gt;</code>标签进行组合</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;apple&quot;</span>&gt;</span>apple<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;banana&quot;</span>&gt;</span>banana<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;pear&quot;</span>&gt;</span>pear<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;peach&quot;</span>&gt;</span>peach<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><select>    <option value="apple">apple</option>    <option value="banana">banana</option>    <option value="pear">pear</option>    <option value="peach">peach</option></select><p>添加<code>multiple</code>属性可以进行多选，添加<code>required</code>属性可以要求必须选择至少一个选项<br><code>size</code>属性规定下拉列表中一次性显示的条目数量。</p><hr /><p>下拉框还可以用<code>&lt;input&gt;</code>和<code>&lt;datalist&gt;</code>标签组合实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">list</span>=<span class="hljs-string">&quot;browsers&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">datalist</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;browsers&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Internet Explorer&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Firefox&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Chrome&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Opera&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Safari&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">datalist</span>&gt;</span><br></code></pre></td></tr></table></figure><input list="browsers"><datalist id="browsers">  <option value="Internet Explorer">  <option value="Firefox">  <option value="Chrome">  <option value="Opera">  <option value="Safari"></datalist><hr /><p>通过在下拉框中添加<code>&lt;optgroup&gt;</code>标签还可以将选项进行分组</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">select</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">optgroup</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Swedish Cars&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;volvo&quot;</span>&gt;</span>Volvo<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;saab&quot;</span>&gt;</span>Saab<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">optgroup</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">optgroup</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;German Cars&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;mercedes&quot;</span>&gt;</span>Mercedes<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;audi&quot;</span>&gt;</span>Audi<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">optgroup</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><select>  <optgroup label="Swedish Cars">    <option value="volvo">Volvo</option>    <option value="saab">Saab</option>  </optgroup>  <optgroup label="German Cars">    <option value="mercedes">Mercedes</option>    <option value="audi">Audi</option>  </optgroup></select><h2 id="button">&lt;button&gt;</h2><p>通过<code>&lt;button&gt;</code>标签可以创建一个按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span>&gt;</span>点我！<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><p><button type="button">点我！</button></p><p>在 <code>&lt;button&gt;</code> 元素内部可以放置内容，比如文本或图像。这是该元素与使用 <code>&lt;input&gt;</code> 元素创建的按钮之间的不同之处。</p><p>通过添加<code>onclick=&quot;xxx()&quot;</code>属性将单击事件与函数xxx()链接起来。<br>具体事件属性再议。</p><h2 id="fieldset-和-legend">&lt;fieldset&gt;和&lt;legend&gt;</h2><p>通过<code>&lt;fieldset&gt;</code>标签对表单中的元素进行分组，即加上一个边框，通过<code>legend</code>标签为该组设定标题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>Personalia:<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span><br>    Name: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    Email: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    Date of birth: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><br></code></pre></td></tr></table></figure><fieldset>    <legend>Personalia:</legend>    Name: <input type="text"><br>    Email: <input type="text"><br>    Date of birth: <input type="text"></fieldset><p>为<code>&lt;fieldset&gt;</code>标签添加<code>disabled</code>属性可以使该分组内元素全部不可更改、</p><h2 id="output">&lt;output&gt;</h2><p><code>&lt;output&gt;</code>元素跟<code>&lt;form&gt;</code>标签组合进行输出</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">oninput</span>=<span class="hljs-string">&quot;x.value=parseInt(a.value)+parseInt(b.value)&quot;</span>&gt;</span>0<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;a&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;50&quot;</span>&gt;</span>100<br>+<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;b&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;50&quot;</span>&gt;</span><br>=<span class="hljs-tag">&lt;<span class="hljs-name">output</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;a b&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">output</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><form oninput="x.value=parseInt(a.value)+parseInt(b.value)">0<input type="range" id="a" value="50">100+<input type="number" id="b" value="50">=<output name="x" for="a b"></output></form><h1>视频</h1><p>使用<code>&lt;video&gt;&lt;/video&gt;</code>标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;320&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;240&quot;</span> <span class="hljs-attr">controls</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;movie.mp4&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;video/mp4&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>controls</code>属性规定了播放视频会不会带有进度条等控制栏内容。<br>详见<a href="https://www.runoob.com/try/try.php?filename=tryhtml5_video_js_prop">链接</a>，与按钮的组合。</p><h1>音频</h1><p>使用<code>&lt;audio&gt;&lt;audio&gt;</code>标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">controls</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;horse.ogg&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;audio/ogg&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br></code></pre></td></tr></table></figure><p><a href="https://www.runoob.com/try/try.php?filename=tryhtml5_audio_all">链接</a></p>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java学习笔记</title>
    <link href="/2020/03/05/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2020/03/05/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>java课程的学习笔记，部分和c++重合的内容不做描述</p><span id="more"></span><h1>一、安装java</h1><h2 id="下载java">下载java</h2><p>去<a href="https://www.oracle.com/java/technologies/javase-downloads.html">Oracle</a>官网下载。</p><h2 id="添加环境变量">添加环境变量</h2><p>在&quot;系统变量&quot;中进行添加</p><ol><li>添加JAVA_HOME<br>选择“新建”，变量名为<code>JAVA_HOME</code>，变量值为jdk的路径，例如<code>C:\Program Files\Java\jdk-12.0.2</code></li><li>添加CLASSPATH<br>选择“新建”，变量名为<code>CLASSPATH</code>，变量值为<code>.;%JAVA_HOME%\lib;</code></li><li>添加Path<br>找到<code>Path</code>项，双击打开（win7等直接在变量值最前面加），选择“新建”，变量值为jdk目录下bin文件夹的路径，例如<code>C:\Program Files\Java\jdk-12.0.2\bin</code></li></ol><h2 id="测试是否安装成功">测试是否安装成功</h2><p>打开<code>CMD</code>窗口，输入<code>java -version</code>，有输出则说明安装完成。</p><h1>二、基本数据类型</h1><h2 id="分类和长度">分类和长度</h2><p>与c++一致，其中注意char型</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">长度</th><th style="text-align:center">初始值</th><th style="text-align:center">范围</th></tr></thead><tbody><tr><td style="text-align:center">char</td><td style="text-align:center">16 bits</td><td style="text-align:center">‘\u0000’</td><td style="text-align:center">‘\u0000~\uffff’</td></tr></tbody></table><h2 id="浮点数">浮点数</h2><p>默认为double型</p><ul><li>十进制数形式<br>由数字和小数点组成，且必须有小数点。<br>如：0.123,  1.23, 123.0</li><li>科学计数法形式　　　<br>如：123e3或123E3，其中e或E之前必须有数字，且e或E后面的指数必须为整数。</li><li>float型的值,必须在数字后加f或F,如1.23f。</li><li>double型的值,可以在数字后加d或D,如1.23D。</li></ul><h2 id="转义符">转义符</h2><table><thead><tr><th style="text-align:left">转义字符</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">\n</td><td style="text-align:left">回车(\u000a)</td></tr><tr><td style="text-align:left">\t</td><td style="text-align:left">Tab(\u0009)</td></tr><tr><td style="text-align:left">\b</td><td style="text-align:left">空格(\u0008)</td></tr><tr><td style="text-align:left">\r</td><td style="text-align:left">换行(\u000d)</td></tr><tr><td style="text-align:left">\f</td><td style="text-align:left">换页(\u000c)</td></tr><tr><td style="text-align:left">\’</td><td style="text-align:left">单引号(\u0027)</td></tr><tr><td style="text-align:left">\&quot;</td><td style="text-align:left">双引号(\u0022)</td></tr><tr><td style="text-align:left">\ddd</td><td style="text-align:left">三位八进制</td></tr><tr><td style="text-align:left">\udddd</td><td style="text-align:left">四位16进制</td></tr><tr><td style="text-align:left">\|反斜杠(\u005c)</td><td style="text-align:left"></td></tr></tbody></table><h1>三、输入输出</h1><h2 id="输出">输出</h2><p>使用<code>System.out.print</code>进行输出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">System.out.print();  \\输出内容<br>System.out.println();  \\输出内容，并换行<br>System.out.printf();   \*支持占位符<br>%d: 输出<span class="hljs-type">int</span>型数据<br>%c: 输出<span class="hljs-type">char</span>型数据<br>%f: 输出浮点型数据，小数部分最多保留<span class="hljs-number">6</span>位     <br>%s: 输出字符串数据<br>%md: 输出的<span class="hljs-type">int</span>型数据占m列   <br>%m.nf:输出的浮点型数据占m列，小数点保留n位。<br>*/<br></code></pre></td></tr></table></figure><h2 id="输入">输入</h2><p>使用输入需要先导入文件，<code> import java.utli.*;</code>或<code>import java.utli.Scanner;</code></p><p>进行使用时，需要先创建Scanner对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br></code></pre></td></tr></table></figure><p>在使用时使用<code>input.next类型()</code>来读取输入内容，例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> input.nextInt();<br><span class="hljs-type">float</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> input.nextFloat();<br></code></pre></td></tr></table></figure><h1>四、函数、类格式差异</h1><h2 id="main函数">main函数</h2><p>java main函数格式为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="类">类</h2><p>类为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">balabala</span>()<br>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h1>五、数组</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//创建</span><br>arrayType arrayName[];  <br><span class="hljs-comment">//或</span><br>arrayType []arrayName;<br><br><span class="hljs-comment">//静态初始化</span><br>arrayType arrayName[] = &#123;elem1, elem2, elem3, ...&#125;;<br><span class="hljs-comment">//或</span><br>arrayType []arrayName = &#123;elem1, elem2, elem3, ...&#125;;<br><br><span class="hljs-comment">//动态初始化</span><br>arrayTyoe arrayName[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">arrayType</span>[x];<br><span class="hljs-comment">//或</span><br>arrayTyoe []arrayName = <span class="hljs-keyword">new</span> <span class="hljs-title class_">arrayType</span>[x];<br><br><span class="hljs-comment">//复合数据类型动态初始化</span><br>arrayType arrayName[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">arrayTyppe</span>[x];<br><span class="hljs-comment">//然后依次为数据元素开辟空间，相当于二维数组</span><br>arrayName[i] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">arrayType</span>[paramList]; <span class="hljs-comment">//i=0,1,2,...,paramList-1</span><br><span class="hljs-comment">//例如</span><br>String stringArray[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[<span class="hljs-number">4</span>];<br>stringArray[<span class="hljs-number">0</span>] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;Welcome&quot;</span>);<br>stringArray[<span class="hljs-number">1</span>] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;To&quot;</span>);<br>stringArray[<span class="hljs-number">2</span>] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;My&quot;</span>);<br>stringArray[<span class="hljs-number">3</span>] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;Blog&quot;</span>);<br></code></pre></td></tr></table></figure><p>数组的复制操作，java提供<code>System.arraycopy</code>函数来进行操作，格式为<br><code>System.arraycopy(SourceArray,sourcePositon,DestinationArray,DestinationPositon,number)</code><br><code>SourceArray</code>表示被复制的数组，<code>DestinationArray</code>表示复制的数组，即Source-&gt;Destination<br><code>SourcePosition</code>表示从下标几开始复制，<code>DestinationPosition</code>表示从下标几开始粘贴，<code>number</code>表示复制几位。<br>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> array1[ ]=&#123;<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">17</span>&#125;;<br><span class="hljs-type">int</span>[] array2=&#123;<span class="hljs-number">101</span>,<span class="hljs-number">102</span>,<span class="hljs-number">103</span>,<span class="hljs-number">104</span>,<span class="hljs-number">105</span>,<span class="hljs-number">106</span>,<span class="hljs-number">107</span>,<span class="hljs-number">108</span>&#125;;<br>System.arraycopy(array1,<span class="hljs-number">2</span>,array2,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>);   <span class="hljs-comment">//表示从array1[2]开始复制，即5，从array2[3]开始粘贴，即104，复制4位</span><br>System.out.println(<span class="hljs-string">&quot;After copy, array2:&quot;</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt; array2.length;i++)<br>  System.out.println(<span class="hljs-string">&quot;array2[&quot;</span>+i+<span class="hljs-string">&quot;]=&quot;</span>+array2[i]);<br><span class="hljs-comment">//最后结果为</span><br>After copy, array2:<br>array2[<span class="hljs-number">0</span>]=<span class="hljs-number">101</span><br>array2[<span class="hljs-number">1</span>]=<span class="hljs-number">102</span><br>array2[<span class="hljs-number">2</span>]=<span class="hljs-number">103</span><br>array2[<span class="hljs-number">3</span>]=<span class="hljs-number">5</span><br>array2[<span class="hljs-number">4</span>]=<span class="hljs-number">7</span><br>array2[<span class="hljs-number">5</span>]=<span class="hljs-number">11</span><br>array2[<span class="hljs-number">6</span>]=<span class="hljs-number">13</span><br>array2[<span class="hljs-number">7</span>]=<span class="hljs-number">108</span><br></code></pre></td></tr></table></figure><h1>六、向量</h1><p>向量是java.util包中的一个类，实现了类似 ==动态数组== 的功能，跟数组的区别是向量的容量是 ==可变== 的</p><ul><li>向量的容量——向量的存储空间大小（最大下标）</li><li>向量的长度——向量的实际元素个数</li><li>向量的容量增量——当向量长度达到了容量时，容量的增加量<ul><li>当容量增量为0时，当向量长度达到容量时，容量变为原来两倍</li><li>当容量增量不等于0时，当向量长度达到容量时，新容量=原容量+容量增量</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//声明格式：</span><br>Vector &lt;data Type&gt; VariableName = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vector</span> &lt;data Type&gt;(parameter)<br><br><span class="hljs-comment">//三种形式</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">Vector</span><span class="hljs-params">()</span>   <br><span class="hljs-comment">//创建空向量，初始容量为10，容量增量为0</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">Vector</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span><br><span class="hljs-comment">//创建空向量，初始容量为x，容量增量为0</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">Vector</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y)</span><br><span class="hljs-comment">//创建空向量，初始容量为x，容量增量为y</span><br></code></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java">Vector&lt;String&gt; v1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vector</span>&lt;String&gt;(<span class="hljs-number">5</span>); <br>v1.addElement(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;one&quot;</span>));   <span class="hljs-comment">//添加元素&quot;one&quot;，下同</span><br>v1.addElement(<span class="hljs-string">&quot;three&quot;</span>);<br>v1.addElement(<span class="hljs-string">&quot;four&quot;</span>);<br>v1.insertElementAt(<span class="hljs-string">&quot;zero&quot;</span>,<span class="hljs-number">0</span>);     <span class="hljs-comment">//在下标0位置添加元素&quot;zero&quot;，后续元素自动右移，下同</span><br>v1.insertElementAt(<span class="hljs-string">&quot;two&quot;</span>,<span class="hljs-number">2</span>);<br>v1.insertElementAt(<span class="hljs-string">&quot;five&quot;</span>,<span class="hljs-number">5</span>); <br>System.out.println(<span class="hljs-string">&quot;v1:&quot;</span>+v1); <br>System.out.println(<span class="hljs-string">&quot;v1的容量为：&quot;</span> + v1.capacity( ));   <br>Vector&lt;String&gt; v2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vector</span>&lt;String&gt;(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>); <br>v2.addElement(<span class="hljs-string">&quot;one&quot;</span>);<br>v2.addElement(<span class="hljs-string">&quot;three&quot;</span>);<br>v2.addElement(<span class="hljs-string">&quot;four&quot;</span>);<br>v2.insertElementAt(<span class="hljs-string">&quot;zero&quot;</span>,<span class="hljs-number">0</span>); <br>v2.insertElementAt(<span class="hljs-string">&quot;two&quot;</span>,<span class="hljs-number">2</span>);<br>v2.insertElementAt(<span class="hljs-string">&quot;five&quot;</span>,<span class="hljs-number">5</span>); <br>System.out.println(<span class="hljs-string">&quot;v2:&quot;</span>+v2);<br>System.out.println(<span class="hljs-string">&quot;v2的容量为：&quot;</span> + v2.capacity( ));<br><br><span class="hljs-comment">//输出为：</span><br>v1:[zero, one, two, three, four, five]<br>v1的容量为：<span class="hljs-number">10</span><br>v2:[zero, one, two, three, four, five]<br>v2的容量为：<span class="hljs-number">6</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">首先看第一个例子，创建方式是Vector(int x)，说明初始容量为5，容量增量为0。因此当向量的长度达到容量(5)时，向量的容量翻倍，所以输出出来的V1的容量是10。</span><br><span class="hljs-comment">第二个例子，创建方式是Vector(int x, int y)，说明初始容量为5，容量增量为0，因此当向量的长度达到容量(5)时，向量的新容量等于原容量+容量增量，即5+1=6，所以输出的V2的容量为6.</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>主题中note提示框的使用</title>
    <link href="/2020/03/04/%E4%B8%BB%E9%A2%98%E4%B8%ADnote%E6%8F%90%E7%A4%BA%E6%A1%86%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/03/04/%E4%B8%BB%E9%A2%98%E4%B8%ADnote%E6%8F%90%E7%A4%BA%E6%A1%86%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>fluid主题中note提示框的挖掘。</p><span id="more"></span><h1>Fluid中note提示框的挖掘使用</h1><p>在一个博客主题中看到了如下的&quot;提示框&quot;效果<br><img src="/img/%E7%BE%8E%E5%8C%96/container-example.png" alt=""></p><p>  就想着能不能在fluid主题中实现类似的效果，按照博客中的教程进行了设置后发现并不能使用，应该是不同主题的缘故。这个想法也就作罢了。<br>  但今天在根据fluid主题在github上的更新记录添加“文章更新时间”功能的时候，发现在post.ejs中使用了一个<code>note-warning</code>的类，原本只是想要修改一下这个note的样式，从黄色调成蓝色，然后在其对应的css文件中（路径：<code>fluid\source\lib\mdbootstrap\css\mdb.min.css</code>发现不止有<code>note-waring</code>类，还有<code>note-primary</code>、<code>note-info</code>等一系列类，一想这个跟上图中的提示框的代码相近，会不会有相同的效果？于是进行了尝试，发现果真如此！虽然不能像上图那个博客一样通过下面那种格式来使用</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-meta">:::</span> info<br>here if info<br><span class="hljs-meta">:::</span><br></code></pre></td></tr></table></figure><p>但是在markdown中同样可以通过html的语法来进行调用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span>&gt;</span>here is note-primary<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-secondary&quot;</span>&gt;</span>here is note-secondary<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-success&quot;</span>&gt;</span>here is note-success<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-danger&quot;</span>&gt;</span>here is note-danger<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-warning&quot;</span>&gt;</span>here is note-warning<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-info&quot;</span>&gt;</span>here is note-info<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note not-light&quot;</span>&gt;</span>here is note-light<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果依次为：</p><p class="note note-primary">here is note-primary</p><p class="note note-secondary">here is note-secondary</p><p class="note note-success">here is note-success</p><p class="note note-danger">here is note-danger</p><p class="note note-warning">here is note-warning</p><p class="note note-info">here is note-info</p><p class="note not-light">here is note-light</p><p>具体的样式可以在<code>fluid\source\lib\mdbootstrap\css\mdb.min.css</code>搜索<code>note</code>定位后进行修改🤪</p>]]></content>
    
    
    <categories>
      
      <category>博客美化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>美化</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Latex的Katex渲染引擎设置</title>
    <link href="/2020/03/03/Latex%E7%9A%84Katex%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E%E8%AE%BE%E7%BD%AE/"/>
    <url>/2020/03/03/Latex%E7%9A%84Katex%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>调用katex渲染引擎渲染latex中出现的一些问题</p><span id="more"></span><h1>Latex的Katex渲染引擎设置</h1><p>  由于需要在markdown中插入数学公式，因此了解到了Latex，但是在完成了公式的输入后发现hexo中并不能成功渲染Latex公式。为什么呢？这是因为hexo使用自带的<code>hexo-renderer-marked</code>引擎来渲染页面，但是<code>hexo-renderer-marked</code>引擎不能渲染Latex引擎，因此我们需要更换引擎。<br>供选择的有<code>hexo-renderer-kramed</code>和<code>hexo-renderer-markdown-it-plus</code><br>不过由于<code>kramed</code>引擎不能支持markdown all in one中的下标&quot;~ ~“以及 上标”^ ^&quot;这类格式，因此本文使用<code>hexo-renderer-markdown-it-plus</code>引擎<br>在更换渲染引擎时首先需要先卸载原先的渲染引擎，再安装新引擎</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">npm uninstall hexo-renderer-marked --save<br>npm install hexo-renderer-markdown-it-plus --save<br></code></pre></td></tr></table></figure><p>安装<code>kramed</code>的话同理</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">npm uninstall hexo-renderer-marked --save<br>npm install hexo-renderer-kramed --save<br></code></pre></td></tr></table></figure><p>在安装完引擎后，在fluid的<code>_config.yml</code>中找到<code>math</code>项</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">math:</span> <br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">true</span> <br>    <span class="hljs-attr">engine:</span> <span class="hljs-string">katex</span>  <br></code></pre></td></tr></table></figure><p>将<code>enable</code>的值改为<code>true</code>，<code>engine</code>的值改为<code>katex</code><br>由于这里将<code>specific</code>的值设为了<code>true</code>，所以在需要进行数学公式渲染的文章的<code>font-matter</code>中添加一条<code>math: true</code>，采用这种方法可以不影响不需要进行数学公式渲染的页面的加载速度。<br>这时候再<code>hexo s</code>发现界面中latex公式已经渲染成功了，但是不太美观<br><img src="/img/problems/bad-katex.jpg" alt=""></p><p>这时候还需要在fluid主题下的<code>_static_prefix.yml</code>文件中进行配置<br>在文件最后找到<code>katex</code>，将其值设为<code>https://cdn.staticfile.org/KaTeX/0.11.1/</code>此时再刷新页面即可看到渲染后的数学公式了<br><img src="/img/problems/good-katex.png" alt=""></p><p>若看不到效果的话，依次执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs git">hexo clean<br>hexo g<br>hexo s<br></code></pre></td></tr></table></figure><p>即可在localhost中看到渲染后的效果</p>]]></content>
    
    
    <categories>
      
      <category>problems</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>problems</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fluid个性化</title>
    <link href="/2020/02/24/fluid%E4%B8%AA%E6%80%A7%E5%8C%96/"/>
    <url>/2020/02/24/fluid%E4%B8%AA%E6%80%A7%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>各类参数的修改位置及作用、网页音乐播放器、评论模块、一言的调用等…</p><span id="more"></span><h1>fluid个性化及小插件的使用</h1><h2 id="网页标题浏览器恶搞">网页标题浏览器恶搞</h2><p>在<code> \themes\fluid\source\js</code> 下创建一个新的js文件，例如<code> FunnyTitle.js</code>，输入如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs lua&#123;javascript,&#125;">// 浏览器搞笑标题<br>var OriginTitle = document.title;<br>var titleTime;<br>document.addEventListener(&#x27;visibilitychange&#x27;, function () &#123;<br>    if (document.hidden) &#123;<br>        $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/img/avatar.png&quot;);<br>        document.title = &#x27;╭(°A°`)╮ 页面崩溃啦 ~&#x27;;<br>        clearTimeout(titleTime);<br>    &#125;<br>    else &#123;<br>        $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/img/favicon.png&quot;);<br>        document.title = &#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好啦 ~&#x27; + OriginTitle;<br>        titleTime = setTimeout(function () &#123;<br>            document.title = OriginTitle;<br>        &#125;, 2000);<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>之后在<code>\themes\fluid\layout.ejs</code>中末尾输入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!--浏览器搞笑标题--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/FunnyTitle.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="fluid鼠标点击效果更改">fluid鼠标点击效果更改</h2><p>fluid主题的鼠标特效在<code> \themes\fluid\layout\_partial\plugins\mouse-click.ejs</code>中，找到如下图所示的代码<br><img src="/img/%E7%BE%8E%E5%8C%96/mouse-click.png" alt="">将数组中的字符串进行更改即可进行自定义<br>然后在<strong>主题配置</strong>（即fluid的<code>_config.yml</code>）中将<code>mouse-clik</code>项的style改为values</p><h2 id="一言">一言</h2><p><a href="https://hitokoto.cn/">一言官网</a></p><p>根据官网提供的示例，在<code> \themes\fluid\layout\layout.ejs</code>中添加如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 以下写法，选取一种即可 --&gt;</span><br><br><span class="hljs-comment">&lt;!-- 现代写法，推荐 --&gt;</span><br><span class="hljs-comment">&lt;!-- 兼容低版本浏览器 (包括 IE)，可移除 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-comment">&lt;!--End--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;https://v1.hitokoto.cn&#x27;</span>)</span><br><span class="language-javascript">    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">json</span>();</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript">    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">var</span> hitokoto = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;hitokoto&#x27;</span>);</span><br><span class="language-javascript">      hitokoto.<span class="hljs-property">innerText</span> = data.<span class="hljs-property">hitokoto</span>; </span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript">    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(err);</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 老式写法，兼容性最忧 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();</span><br><span class="language-javascript">  xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-string">&#x27;https://v1.hitokoto.cn&#x27;</span>);</span><br><span class="language-javascript">  xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">var</span> data = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(xhr.<span class="hljs-property">responseText</span>);</span><br><span class="language-javascript">      <span class="hljs-keyword">var</span> hitokoto = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;hitokoto&#x27;</span>);</span><br><span class="language-javascript">      hitokoto.<span class="hljs-property">innerText</span> = data.<span class="hljs-property">hitokoto</span>;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript">  xhr.<span class="hljs-title function_">send</span>();</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 新 API 方法， 十分简洁 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot;</span> <span class="hljs-attr">defer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>然后在任意想要加入一言的位置添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;hitokoto&quot;</span>&gt;</span>:D 获取中...<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>例如我在页面的最底部，即hexo❤Fluid下方加入一言，即在<code> \themes\fluid\layout\_partial\footer.ejs</code>中加入该行代码。在页面中显示的具体位置由代码所在位置决定。</p><p>一言官网举例了几个网址供读取信息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">https://v1.hitokoto.cn/（从7种分类中随机抽取）<br><br>https://v1.hitokoto.cn/?c=b （请求获得一个分类是漫画的句子）<br><br>https://v1.hitokoto.cn/?c=f&amp;encode=text （请求获得一个来自网络的句子，并以纯文本格式输出<br></code></pre></td></tr></table></figure><p>在本部分第一个代码块中将对应的网址更改即可，同样可以通过“&amp;”的方式指定多个特定的类型</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">https://v1.hitokoto.cn/?c=c&amp;c=d （从游戏分类和小说分类中获取一个句子）<br></code></pre></td></tr></table></figure><p>参数列表如下，通过c=xx来使用</p><table border="0"><tr>    <th>参数</th>    <th>  </th>    <th>描述</th></tr><tr ><td rowspan="7">C</td><td>a</td><td>Anime - 动画</td></tr><tr>    <td>b</td>    <td>Comic – 漫画</td></tr><tr>    <td>c</td>    <td>Game – 游戏</td></tr><tr>    <td>d</td>    <td>Novel – 小说</td></tr><tr>    <td>e</td>    <td>Myself – 原创</td></tr><tr>    <td>f</td>    <td>Internet – 来自网络</td></tr><tr>    <td>g</td>    <td>Other – 其他</td></tr></table><h2 id="音乐播放插件">音乐播放插件</h2><p>这里使用的是插件是<a href="https://aplayer.js.org/#/zh-Hans/">APlayer</a><br>🎶Wow, such a beautiful HTML5 music player<br>原本用的是网易云的的外链播放器，然鹅！网易云几乎所有的歌都因版权问题无法生成外链播放器，即使通过一些方法生成了也无法播放，因此采用了APlayer。</p><p>首先安装Aplayer</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">cnpm install aplayer --save<br></code></pre></td></tr></table></figure><p>我因为网络的问题替换了成了淘宝的镜像，若没有设置过直接使用npm即可。</p><p>在想要加入网页播放器的地方输入以下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">          <span class="hljs-selector-class">.demo</span>&#123;<span class="hljs-attribute">width</span>:<span class="hljs-number">360px</span>;<span class="hljs-attribute">margin</span>:<span class="hljs-number">0px</span> auto <span class="hljs-number">20px</span> auto&#125;</span><br><span class="language-css">          <span class="hljs-selector-class">.demo</span> <span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">padding</span>:<span class="hljs-number">10px</span> <span class="hljs-number">0</span>&#125;</span><br><span class="language-css">      </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;player1&quot;</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;aplayer-lrc-content&quot;</span>&gt;</span><br>                [00:00.00]鹿先森乐队 - 华年<br>                [00:00.30]<br>                [00:00.91]作曲：倍倍<br>                [00:01.66]作词：倍倍<br>                [00:01.26]编曲：鹿先森乐队<br>                [00:01.52]木吉他：杨博士<br>                [00:01.77]电吉他：董二胖<br>                [00:02.28]贝斯：李斯<br>                [00:02.17]键盘：冰冰<br>                [00:02.38]鼓：PP<br>                [00:02.48]和音：鱼椒盐、杨博士<br>                [00:02.83]弦乐：国际首席爱乐乐团<br>                [00:03.24]录音棚：55T.E.C、Big.J Studio<br>                [00:03.49]混音助理：茆博文<br>                [00:03.79]制作人：李卓<br>                [00:04.10]弦乐编写：李卓<br>                [00:04.25]混音：李卓<br>                [00:04.40]母带处理：周天澈<br>                [00:05.00]<br>                [00:05.80]在夏天结束的瞬间<br>                [00:07.42]怀念你年轻身影<br>                [00:11.42]你每天都在说的那些话<br>                [00:13.90]如今讲给谁人听<br>                [00:16.94]当过往散了爱慕<br>                [00:19.16]与光阴相向而行<br>                [00:22.71]你眼神烙印岁月最后的深情<br>                [00:25.88]<br>                [00:28.42]也许一次离别<br>                [00:29.69]就能抹去再多的重逢<br>                [00:33.91]那年一起种下的树啊<br>                [00:36.55]如今飘荡着一样的风<br>                [00:39.59]当誓言终将欺了日月<br>                [00:42.32]这爱恋不澈不浓<br>                [00:45.25]你裙摆绽放走向我脚步轻松<br>                [00:48.88]<br>                [00:50.61]可是命运啊<br>                [00:51.52]渴望啊和热烈啊<br>                [00:55.92]非将这生长赋予<br>                [00:57.39]悲欢交织的感动<br>                [01:01.93]夏日轻柔的晚风<br>                [01:04.81]壮阔波澜的相拥<br>                [01:07.16]已杂草丛生<br>                [01:10.56]都不及你第一次<br>                [01:12.13]望向我的面容<br>                [01:14.55]<br>                [01:19.23]也许一次离别<br>                [01:20.50]就能抹去再多的重逢<br>                [01:24.61]那年一起种下的树啊<br>                [01:27.44]如今飘荡着一样的风<br>                [01:30.37]当誓言终将欺了日月<br>                [01:33.16]这爱恋不澈不浓<br>                [01:36.21]你裙摆绽放走向我脚步轻松<br>                [01:39.55]<br>                [01:40.77]可是命运啊<br>                [01:42.44]渴望啊和热烈啊<br>                [01:46.69]非将这生长赋予<br>                [01:48.26]悲欢交织的感动<br>                [01:52.76]夏日轻柔的晚风<br>                [01:55.56]壮阔波澜的相拥<br>                [01:57.99]已杂草丛生<br>                [02:01.64]都不及你第一次<br>                [02:03.70]望向我的面容<br>                [02:05.10]<br>                [02:06.29]可是青春啊<br>                [02:07.82]鲜血啊和真切啊<br>                [02:12.18]请铭记呀<br>                [02:13.22]即使从未有过年轻<br>                [02:18.18]阳光穿过你的脖颈<br>                [02:20.96]酒杯碰碎的声音<br>                [02:23.27]时光忽暗忽明<br>                [02:27.68]都忘却吧<br>                [02:28.80]就像从未有过年轻<br>                [02:30.55]<br>                [03:02.65]可是命运啊<br>                [03:04.37]渴望啊和热烈啊<br>                [03:08.47]非将这生长赋予<br>                [03:10.94]悲欢交织的感动<br>                [03:14.65]夏日轻柔的晚风<br>                [03:17.47]壮阔波澜的相拥<br>                [03:19.69]已杂草丛生<br>                [03:23.54]都不及你第一次<br>                [03:24.91]望向我的面容<br>                [03:26.88]<br>                [03:28.94]可是青春啊<br>                [03:29.71]鲜血啊和真切啊<br>                [03:35.28]请铭记呀<br>                [03:36.50]即使从未有过年轻<br>                [03:41.50]阳光穿过你的脖颈<br>                [03:44.23]酒杯碰碎的声音<br>                [03:46.52]时光忽暗忽明<br>                [03:50.37]都忘却吧<br>                [03:51.33]就像从未有过年轻<br>                [03:55.73]都忘却吧<br>                [03:56.94]就像从未有过年轻<br>                [04:01.40]都忘却吧<br>                [04:02.56]就像从未有过年轻<br>                [04:06.91]书终烟灭夜深水静<br>              <span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> ap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">APlayer</span></span><br><span class="language-javascript">                (&#123;</span><br><span class="language-javascript">                    <span class="hljs-attr">element</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;player1&#x27;</span>),</span><br><span class="language-javascript">                    <span class="hljs-attr">narrow</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">                    <span class="hljs-attr">autoplay</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">                    <span class="hljs-attr">showlrc</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">                    <span class="hljs-attr">music</span>: &#123;</span><br><span class="language-javascript">                            <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;华年&#x27;</span>,</span><br><span class="language-javascript">                            <span class="hljs-attr">author</span>: <span class="hljs-string">&#x27;鹿先森乐队&#x27;</span>,</span><br><span class="language-javascript">                            <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;http://music.163.com/song/media/outer/url?id=542667160.mp3&#x27;</span>,</span><br><span class="language-javascript">                            <span class="hljs-attr">pic</span>: <span class="hljs-string">&#x27;http://p2.music.126.net/r94mVfx8ERhRr7Zzemhd_w==/109951163405599390.jpg&#x27;</span></span><br><span class="language-javascript">                            &#125;</span><br><span class="language-javascript">                &#125;);</span><br><span class="language-javascript">        ap.<span class="hljs-title function_">init</span>();</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>例如我将播放器加入到“关于”界面，就在<code>\themes\fluid\layout\about.ejs</code>中加入这段代码，在这里我将代码嵌入跟原有代码进入了稍微的整合，使结构清晰。<br>在上述代码的<code>script</code>块中，<code>autoplay</code>是自动播放，改为true则会在打开该页面时自动播放。<br>在网页版网易云音乐搜索歌曲，打开后将网址的最后一串数字替换到<code>url</code>中对应的数字部分即可更换歌曲<img src="/img/%E7%BE%8E%E5%8C%96/music.png" alt=""><br>歌曲封面由<code>pic</code>字段决定，同样在网页版网易云音乐界面，在F12开发者模式中选中歌曲封面区域即可得到封面链接，替换至<code>pic</code>区域即可。歌词来自<a href="https://www.90lrc.cn/">https://www.90lrc.cn/</a></p><p>参考网址：<a href="https://blog.csdn.net/jclian91/article/details/80876198">https://blog.csdn.net/jclian91/article/details/80876198</a></p><h2 id="背景添加动态线条">背景添加动态线条</h2><p>在<code>\theme\fluid\layout\layout.ejs</code>文件中添加如下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!--动态线条背景--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml"><span class="hljs-attr">color</span>=<span class="hljs-string">&quot;140,140,140&quot;</span> <span class="hljs-attr">opacity</span>=<span class="hljs-string">&#x27;0.7&#x27;</span> <span class="hljs-attr">zIndex</span>=<span class="hljs-string">&quot;-2&quot;</span> <span class="hljs-attr">count</span>=<span class="hljs-string">&quot;200&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>其中：</p><ul><li>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0~1），默认：0.5</li><li>count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1<br>转自<a href="https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/#%E3%80%9013%E3%80%91%E8%83%8C%E6%99%AF%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E7%BA%BF%E6%9D%A1%E6%95%88%E6%9E%9C">TRHX博客</a></li></ul><h2 id="网站运行时间">网站运行时间</h2><p>在<code>\themes\fluid\layout\_partial\footer.ejs</code>中添加以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;span id=<span class="hljs-string">&quot;timeDate&quot;</span>&gt;载入天数...&lt;<span class="hljs-regexp">/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/</span>span&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(); </span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">createtime</span>(<span class="hljs-params"></span>) &#123; </span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> grt= <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&quot;21/02/2020 17:38:00&quot;</span>);<span class="hljs-comment">//在此处修改你的建站时间，格式：月/日/年 时:分:秒</span></span></span><br><span class="language-javascript"><span class="language-xml">        now.<span class="hljs-title function_">setTime</span>(now.<span class="hljs-title function_">getTime</span>()+<span class="hljs-number">250</span>); </span></span><br><span class="language-javascript"><span class="language-xml">        days = (now - grt ) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> / <span class="hljs-number">24</span>; dnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(days); </span></span><br><span class="language-javascript"><span class="language-xml">        hours = (now - grt ) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * dnum); hnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(hours); </span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(hnum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;hnum = <span class="hljs-string">&quot;0&quot;</span> + hnum;&#125; minutes = (now - grt ) / <span class="hljs-number">1000</span> /<span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * hnum); </span></span><br><span class="language-javascript"><span class="language-xml">        mnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(minutes); <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(mnum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;mnum = <span class="hljs-string">&quot;0&quot;</span> + mnum;&#125; </span></span><br><span class="language-javascript"><span class="language-xml">        seconds = (now - grt ) / <span class="hljs-number">1000</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * <span class="hljs-number">60</span> * hnum) - (<span class="hljs-number">60</span> * mnum); </span></span><br><span class="language-javascript"><span class="language-xml">        snum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(seconds); <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(snum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;snum = <span class="hljs-string">&quot;0&quot;</span> + snum;&#125; </span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;timeDate&quot;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;本站已勉强运行 &quot;</span>+dnum+<span class="hljs-string">&quot; 天 &quot;</span>; </span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;times&quot;</span>).<span class="hljs-property">innerHTML</span> = hnum + <span class="hljs-string">&quot; 小时 &quot;</span> + mnum + <span class="hljs-string">&quot; 分 &quot;</span> + snum + <span class="hljs-string">&quot; 秒&quot;</span>; </span></span><br><span class="language-javascript"><span class="language-xml">    &#125; </span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-built_in">setInterval</span>(<span class="hljs-string">&quot;createtime()&quot;</span>,<span class="hljs-number">250</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><blockquote><p>转自</p><footer><strong>THRX博客 -</strong><cite><a href="https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/#【10】添加网站运行时间">www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/#【10】添加网站运行时间</a></cite></footer></blockquote>]]></content>
    
    
    <categories>
      
      <category>博客美化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>美化</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Failed to connect to github.com port 443: Timed out</title>
    <link href="/2020/02/22/hexo-Failed-to-connect-to-github-com-port-443-Timed-out/"/>
    <url>/2020/02/22/hexo-Failed-to-connect-to-github-com-port-443-Timed-out/</url>
    
    <content type="html"><![CDATA[<p>Failed to connect to <a href="http://github.com">github.com</a> port 443: Timed out</p><span id="more"></span><h1>Failed to connect to github. com port 443: Timed out</h1><p>在使用hexo g -d部署到github上时出现了“Failed to connect to github. com port 443: Timed out”的错误提示。<br><img src="/img/problems/Time_out.png" alt=""></p><p><strong>解决办法</strong></p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs git">git config --global http.proxy http://127.0.0.1:1080<br><br>git config --global https.proxy http://127.0.0.1:1080<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>error</category>
      
    </categories>
    
    
    <tags>
      
      <tag>error</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/01/24/hello-world/"/>
    <url>/2020/01/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><p>_[HTML]: Hyper Text Markup Language</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><pre><code class=" mermaid">graph TD;    A--&gt;B;    A--&gt;C;    B--&gt;D;    C--&gt;D;    </code></pre><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><input type="button" id="dark1" value="点我！"><p><a type="button" href="#" id="dark2">dfadf</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
